

Microchip Technology PIC PRO Macro Assembler V1.45 build -152302408 
                                                                                               Sun Apr 15 07:26:24 2018

Microchip Technology Omniscient Code Generator v1.45 (PRO mode) build 201711160504
     1                           	processor	12F1572
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	swtext1,local,class=CONST,delta=2
    12                           	psect	swtext2,local,class=CONST,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	intentry,global,class=CODE,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	pa_nodes0,global,class=CODE,delta=2
    34                           	dabs	1,0x7E,2
    35  0000                     
    36                           ; Version 1.45
    37                           ; Generated 16/11/2017 GMT
    38                           ; 
    39                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC12F1572 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70  0000                     	;# 
    71  0001                     	;# 
    72  0002                     	;# 
    73  0003                     	;# 
    74  0004                     	;# 
    75  0005                     	;# 
    76  0006                     	;# 
    77  0007                     	;# 
    78  0008                     	;# 
    79  0009                     	;# 
    80  000A                     	;# 
    81  000B                     	;# 
    82  000C                     	;# 
    83  0011                     	;# 
    84  0012                     	;# 
    85  0013                     	;# 
    86  0015                     	;# 
    87  0016                     	;# 
    88  0016                     	;# 
    89  0017                     	;# 
    90  0018                     	;# 
    91  0019                     	;# 
    92  001A                     	;# 
    93  001B                     	;# 
    94  001C                     	;# 
    95  008C                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0095                     	;# 
   100  0096                     	;# 
   101  0097                     	;# 
   102  0098                     	;# 
   103  0099                     	;# 
   104  009A                     	;# 
   105  009B                     	;# 
   106  009B                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  009F                     	;# 
   111  010C                     	;# 
   112  0111                     	;# 
   113  0112                     	;# 
   114  0115                     	;# 
   115  0116                     	;# 
   116  0117                     	;# 
   117  0118                     	;# 
   118  0119                     	;# 
   119  011D                     	;# 
   120  011D                     	;# 
   121  018C                     	;# 
   122  0191                     	;# 
   123  0191                     	;# 
   124  0192                     	;# 
   125  0193                     	;# 
   126  0193                     	;# 
   127  0194                     	;# 
   128  0195                     	;# 
   129  0196                     	;# 
   130  0197                     	;# 
   131  0199                     	;# 
   132  019A                     	;# 
   133  019B                     	;# 
   134  019B                     	;# 
   135  019C                     	;# 
   136  019D                     	;# 
   137  019E                     	;# 
   138  019F                     	;# 
   139  020C                     	;# 
   140  028C                     	;# 
   141  030C                     	;# 
   142  038C                     	;# 
   143  0391                     	;# 
   144  0392                     	;# 
   145  0393                     	;# 
   146  0691                     	;# 
   147  0692                     	;# 
   148  0693                     	;# 
   149  0694                     	;# 
   150  0695                     	;# 
   151  0D8E                     	;# 
   152  0D8F                     	;# 
   153  0D90                     	;# 
   154  0D91                     	;# 
   155  0D91                     	;# 
   156  0D92                     	;# 
   157  0D93                     	;# 
   158  0D93                     	;# 
   159  0D94                     	;# 
   160  0D95                     	;# 
   161  0D95                     	;# 
   162  0D96                     	;# 
   163  0D97                     	;# 
   164  0D97                     	;# 
   165  0D98                     	;# 
   166  0D99                     	;# 
   167  0D99                     	;# 
   168  0D9A                     	;# 
   169  0D9B                     	;# 
   170  0D9C                     	;# 
   171  0D9C                     	;# 
   172  0D9D                     	;# 
   173  0D9D                     	;# 
   174  0D9E                     	;# 
   175  0D9F                     	;# 
   176  0DA0                     	;# 
   177  0DA1                     	;# 
   178  0DA1                     	;# 
   179  0DA2                     	;# 
   180  0DA3                     	;# 
   181  0DA3                     	;# 
   182  0DA4                     	;# 
   183  0DA5                     	;# 
   184  0DA5                     	;# 
   185  0DA6                     	;# 
   186  0DA7                     	;# 
   187  0DA7                     	;# 
   188  0DA8                     	;# 
   189  0DA9                     	;# 
   190  0DA9                     	;# 
   191  0DAA                     	;# 
   192  0DAB                     	;# 
   193  0DAC                     	;# 
   194  0DAC                     	;# 
   195  0DAD                     	;# 
   196  0DAD                     	;# 
   197  0DAE                     	;# 
   198  0DAF                     	;# 
   199  0DB0                     	;# 
   200  0DB1                     	;# 
   201  0DB1                     	;# 
   202  0DB2                     	;# 
   203  0DB3                     	;# 
   204  0DB3                     	;# 
   205  0DB4                     	;# 
   206  0DB5                     	;# 
   207  0DB5                     	;# 
   208  0DB6                     	;# 
   209  0DB7                     	;# 
   210  0DB7                     	;# 
   211  0DB8                     	;# 
   212  0DB9                     	;# 
   213  0DB9                     	;# 
   214  0DBA                     	;# 
   215  0DBB                     	;# 
   216  0DBC                     	;# 
   217  0DBC                     	;# 
   218  0DBD                     	;# 
   219  0DBD                     	;# 
   220  0DBE                     	;# 
   221  0DBF                     	;# 
   222  0DC0                     	;# 
   223  0FE4                     	;# 
   224  0FE5                     	;# 
   225  0FE6                     	;# 
   226  0FE7                     	;# 
   227  0FE8                     	;# 
   228  0FE8                     	;# 
   229  0FE9                     	;# 
   230  0FEA                     	;# 
   231  0FEA                     	;# 
   232  0FEB                     	;# 
   233  0FED                     	;# 
   234  0FEE                     	;# 
   235  0FEE                     	;# 
   236  0FEF                     	;# 
   237  0000                     	;# 
   238  0001                     	;# 
   239  0002                     	;# 
   240  0003                     	;# 
   241  0004                     	;# 
   242  0005                     	;# 
   243  0006                     	;# 
   244  0007                     	;# 
   245  0008                     	;# 
   246  0009                     	;# 
   247  000A                     	;# 
   248  000B                     	;# 
   249  000C                     	;# 
   250  0011                     	;# 
   251  0012                     	;# 
   252  0013                     	;# 
   253  0015                     	;# 
   254  0016                     	;# 
   255  0016                     	;# 
   256  0017                     	;# 
   257  0018                     	;# 
   258  0019                     	;# 
   259  001A                     	;# 
   260  001B                     	;# 
   261  001C                     	;# 
   262  008C                     	;# 
   263  0091                     	;# 
   264  0092                     	;# 
   265  0093                     	;# 
   266  0095                     	;# 
   267  0096                     	;# 
   268  0097                     	;# 
   269  0098                     	;# 
   270  0099                     	;# 
   271  009A                     	;# 
   272  009B                     	;# 
   273  009B                     	;# 
   274  009C                     	;# 
   275  009D                     	;# 
   276  009E                     	;# 
   277  009F                     	;# 
   278  010C                     	;# 
   279  0111                     	;# 
   280  0112                     	;# 
   281  0115                     	;# 
   282  0116                     	;# 
   283  0117                     	;# 
   284  0118                     	;# 
   285  0119                     	;# 
   286  011D                     	;# 
   287  011D                     	;# 
   288  018C                     	;# 
   289  0191                     	;# 
   290  0191                     	;# 
   291  0192                     	;# 
   292  0193                     	;# 
   293  0193                     	;# 
   294  0194                     	;# 
   295  0195                     	;# 
   296  0196                     	;# 
   297  0197                     	;# 
   298  0199                     	;# 
   299  019A                     	;# 
   300  019B                     	;# 
   301  019B                     	;# 
   302  019C                     	;# 
   303  019D                     	;# 
   304  019E                     	;# 
   305  019F                     	;# 
   306  020C                     	;# 
   307  028C                     	;# 
   308  030C                     	;# 
   309  038C                     	;# 
   310  0391                     	;# 
   311  0392                     	;# 
   312  0393                     	;# 
   313  0691                     	;# 
   314  0692                     	;# 
   315  0693                     	;# 
   316  0694                     	;# 
   317  0695                     	;# 
   318  0D8E                     	;# 
   319  0D8F                     	;# 
   320  0D90                     	;# 
   321  0D91                     	;# 
   322  0D91                     	;# 
   323  0D92                     	;# 
   324  0D93                     	;# 
   325  0D93                     	;# 
   326  0D94                     	;# 
   327  0D95                     	;# 
   328  0D95                     	;# 
   329  0D96                     	;# 
   330  0D97                     	;# 
   331  0D97                     	;# 
   332  0D98                     	;# 
   333  0D99                     	;# 
   334  0D99                     	;# 
   335  0D9A                     	;# 
   336  0D9B                     	;# 
   337  0D9C                     	;# 
   338  0D9C                     	;# 
   339  0D9D                     	;# 
   340  0D9D                     	;# 
   341  0D9E                     	;# 
   342  0D9F                     	;# 
   343  0DA0                     	;# 
   344  0DA1                     	;# 
   345  0DA1                     	;# 
   346  0DA2                     	;# 
   347  0DA3                     	;# 
   348  0DA3                     	;# 
   349  0DA4                     	;# 
   350  0DA5                     	;# 
   351  0DA5                     	;# 
   352  0DA6                     	;# 
   353  0DA7                     	;# 
   354  0DA7                     	;# 
   355  0DA8                     	;# 
   356  0DA9                     	;# 
   357  0DA9                     	;# 
   358  0DAA                     	;# 
   359  0DAB                     	;# 
   360  0DAC                     	;# 
   361  0DAC                     	;# 
   362  0DAD                     	;# 
   363  0DAD                     	;# 
   364  0DAE                     	;# 
   365  0DAF                     	;# 
   366  0DB0                     	;# 
   367  0DB1                     	;# 
   368  0DB1                     	;# 
   369  0DB2                     	;# 
   370  0DB3                     	;# 
   371  0DB3                     	;# 
   372  0DB4                     	;# 
   373  0DB5                     	;# 
   374  0DB5                     	;# 
   375  0DB6                     	;# 
   376  0DB7                     	;# 
   377  0DB7                     	;# 
   378  0DB8                     	;# 
   379  0DB9                     	;# 
   380  0DB9                     	;# 
   381  0DBA                     	;# 
   382  0DBB                     	;# 
   383  0DBC                     	;# 
   384  0DBC                     	;# 
   385  0DBD                     	;# 
   386  0DBD                     	;# 
   387  0DBE                     	;# 
   388  0DBF                     	;# 
   389  0DC0                     	;# 
   390  0FE4                     	;# 
   391  0FE5                     	;# 
   392  0FE6                     	;# 
   393  0FE7                     	;# 
   394  0FE8                     	;# 
   395  0FE8                     	;# 
   396  0FE9                     	;# 
   397  0FEA                     	;# 
   398  0FEA                     	;# 
   399  0FEB                     	;# 
   400  0FED                     	;# 
   401  0FEE                     	;# 
   402  0FEE                     	;# 
   403  0FEF                     	;# 
   404  0000                     	;# 
   405  0001                     	;# 
   406  0002                     	;# 
   407  0003                     	;# 
   408  0004                     	;# 
   409  0005                     	;# 
   410  0006                     	;# 
   411  0007                     	;# 
   412  0008                     	;# 
   413  0009                     	;# 
   414  000A                     	;# 
   415  000B                     	;# 
   416  000C                     	;# 
   417  0011                     	;# 
   418  0012                     	;# 
   419  0013                     	;# 
   420  0015                     	;# 
   421  0016                     	;# 
   422  0016                     	;# 
   423  0017                     	;# 
   424  0018                     	;# 
   425  0019                     	;# 
   426  001A                     	;# 
   427  001B                     	;# 
   428  001C                     	;# 
   429  008C                     	;# 
   430  0091                     	;# 
   431  0092                     	;# 
   432  0093                     	;# 
   433  0095                     	;# 
   434  0096                     	;# 
   435  0097                     	;# 
   436  0098                     	;# 
   437  0099                     	;# 
   438  009A                     	;# 
   439  009B                     	;# 
   440  009B                     	;# 
   441  009C                     	;# 
   442  009D                     	;# 
   443  009E                     	;# 
   444  009F                     	;# 
   445  010C                     	;# 
   446  0111                     	;# 
   447  0112                     	;# 
   448  0115                     	;# 
   449  0116                     	;# 
   450  0117                     	;# 
   451  0118                     	;# 
   452  0119                     	;# 
   453  011D                     	;# 
   454  011D                     	;# 
   455  018C                     	;# 
   456  0191                     	;# 
   457  0191                     	;# 
   458  0192                     	;# 
   459  0193                     	;# 
   460  0193                     	;# 
   461  0194                     	;# 
   462  0195                     	;# 
   463  0196                     	;# 
   464  0197                     	;# 
   465  0199                     	;# 
   466  019A                     	;# 
   467  019B                     	;# 
   468  019B                     	;# 
   469  019C                     	;# 
   470  019D                     	;# 
   471  019E                     	;# 
   472  019F                     	;# 
   473  020C                     	;# 
   474  028C                     	;# 
   475  030C                     	;# 
   476  038C                     	;# 
   477  0391                     	;# 
   478  0392                     	;# 
   479  0393                     	;# 
   480  0691                     	;# 
   481  0692                     	;# 
   482  0693                     	;# 
   483  0694                     	;# 
   484  0695                     	;# 
   485  0D8E                     	;# 
   486  0D8F                     	;# 
   487  0D90                     	;# 
   488  0D91                     	;# 
   489  0D91                     	;# 
   490  0D92                     	;# 
   491  0D93                     	;# 
   492  0D93                     	;# 
   493  0D94                     	;# 
   494  0D95                     	;# 
   495  0D95                     	;# 
   496  0D96                     	;# 
   497  0D97                     	;# 
   498  0D97                     	;# 
   499  0D98                     	;# 
   500  0D99                     	;# 
   501  0D99                     	;# 
   502  0D9A                     	;# 
   503  0D9B                     	;# 
   504  0D9C                     	;# 
   505  0D9C                     	;# 
   506  0D9D                     	;# 
   507  0D9D                     	;# 
   508  0D9E                     	;# 
   509  0D9F                     	;# 
   510  0DA0                     	;# 
   511  0DA1                     	;# 
   512  0DA1                     	;# 
   513  0DA2                     	;# 
   514  0DA3                     	;# 
   515  0DA3                     	;# 
   516  0DA4                     	;# 
   517  0DA5                     	;# 
   518  0DA5                     	;# 
   519  0DA6                     	;# 
   520  0DA7                     	;# 
   521  0DA7                     	;# 
   522  0DA8                     	;# 
   523  0DA9                     	;# 
   524  0DA9                     	;# 
   525  0DAA                     	;# 
   526  0DAB                     	;# 
   527  0DAC                     	;# 
   528  0DAC                     	;# 
   529  0DAD                     	;# 
   530  0DAD                     	;# 
   531  0DAE                     	;# 
   532  0DAF                     	;# 
   533  0DB0                     	;# 
   534  0DB1                     	;# 
   535  0DB1                     	;# 
   536  0DB2                     	;# 
   537  0DB3                     	;# 
   538  0DB3                     	;# 
   539  0DB4                     	;# 
   540  0DB5                     	;# 
   541  0DB5                     	;# 
   542  0DB6                     	;# 
   543  0DB7                     	;# 
   544  0DB7                     	;# 
   545  0DB8                     	;# 
   546  0DB9                     	;# 
   547  0DB9                     	;# 
   548  0DBA                     	;# 
   549  0DBB                     	;# 
   550  0DBC                     	;# 
   551  0DBC                     	;# 
   552  0DBD                     	;# 
   553  0DBD                     	;# 
   554  0DBE                     	;# 
   555  0DBF                     	;# 
   556  0DC0                     	;# 
   557  0FE4                     	;# 
   558  0FE5                     	;# 
   559  0FE6                     	;# 
   560  0FE7                     	;# 
   561  0FE8                     	;# 
   562  0FE8                     	;# 
   563  0FE9                     	;# 
   564  0FEA                     	;# 
   565  0FEA                     	;# 
   566  0FEB                     	;# 
   567  0FED                     	;# 
   568  0FEE                     	;# 
   569  0FEE                     	;# 
   570  0FEF                     	;# 
   571  0000                     	;# 
   572  0001                     	;# 
   573  0002                     	;# 
   574  0003                     	;# 
   575  0004                     	;# 
   576  0005                     	;# 
   577  0006                     	;# 
   578  0007                     	;# 
   579  0008                     	;# 
   580  0009                     	;# 
   581  000A                     	;# 
   582  000B                     	;# 
   583  000C                     	;# 
   584  0011                     	;# 
   585  0012                     	;# 
   586  0013                     	;# 
   587  0015                     	;# 
   588  0016                     	;# 
   589  0016                     	;# 
   590  0017                     	;# 
   591  0018                     	;# 
   592  0019                     	;# 
   593  001A                     	;# 
   594  001B                     	;# 
   595  001C                     	;# 
   596  008C                     	;# 
   597  0091                     	;# 
   598  0092                     	;# 
   599  0093                     	;# 
   600  0095                     	;# 
   601  0096                     	;# 
   602  0097                     	;# 
   603  0098                     	;# 
   604  0099                     	;# 
   605  009A                     	;# 
   606  009B                     	;# 
   607  009B                     	;# 
   608  009C                     	;# 
   609  009D                     	;# 
   610  009E                     	;# 
   611  009F                     	;# 
   612  010C                     	;# 
   613  0111                     	;# 
   614  0112                     	;# 
   615  0115                     	;# 
   616  0116                     	;# 
   617  0117                     	;# 
   618  0118                     	;# 
   619  0119                     	;# 
   620  011D                     	;# 
   621  011D                     	;# 
   622  018C                     	;# 
   623  0191                     	;# 
   624  0191                     	;# 
   625  0192                     	;# 
   626  0193                     	;# 
   627  0193                     	;# 
   628  0194                     	;# 
   629  0195                     	;# 
   630  0196                     	;# 
   631  0197                     	;# 
   632  0199                     	;# 
   633  019A                     	;# 
   634  019B                     	;# 
   635  019B                     	;# 
   636  019C                     	;# 
   637  019D                     	;# 
   638  019E                     	;# 
   639  019F                     	;# 
   640  020C                     	;# 
   641  028C                     	;# 
   642  030C                     	;# 
   643  038C                     	;# 
   644  0391                     	;# 
   645  0392                     	;# 
   646  0393                     	;# 
   647  0691                     	;# 
   648  0692                     	;# 
   649  0693                     	;# 
   650  0694                     	;# 
   651  0695                     	;# 
   652  0D8E                     	;# 
   653  0D8F                     	;# 
   654  0D90                     	;# 
   655  0D91                     	;# 
   656  0D91                     	;# 
   657  0D92                     	;# 
   658  0D93                     	;# 
   659  0D93                     	;# 
   660  0D94                     	;# 
   661  0D95                     	;# 
   662  0D95                     	;# 
   663  0D96                     	;# 
   664  0D97                     	;# 
   665  0D97                     	;# 
   666  0D98                     	;# 
   667  0D99                     	;# 
   668  0D99                     	;# 
   669  0D9A                     	;# 
   670  0D9B                     	;# 
   671  0D9C                     	;# 
   672  0D9C                     	;# 
   673  0D9D                     	;# 
   674  0D9D                     	;# 
   675  0D9E                     	;# 
   676  0D9F                     	;# 
   677  0DA0                     	;# 
   678  0DA1                     	;# 
   679  0DA1                     	;# 
   680  0DA2                     	;# 
   681  0DA3                     	;# 
   682  0DA3                     	;# 
   683  0DA4                     	;# 
   684  0DA5                     	;# 
   685  0DA5                     	;# 
   686  0DA6                     	;# 
   687  0DA7                     	;# 
   688  0DA7                     	;# 
   689  0DA8                     	;# 
   690  0DA9                     	;# 
   691  0DA9                     	;# 
   692  0DAA                     	;# 
   693  0DAB                     	;# 
   694  0DAC                     	;# 
   695  0DAC                     	;# 
   696  0DAD                     	;# 
   697  0DAD                     	;# 
   698  0DAE                     	;# 
   699  0DAF                     	;# 
   700  0DB0                     	;# 
   701  0DB1                     	;# 
   702  0DB1                     	;# 
   703  0DB2                     	;# 
   704  0DB3                     	;# 
   705  0DB3                     	;# 
   706  0DB4                     	;# 
   707  0DB5                     	;# 
   708  0DB5                     	;# 
   709  0DB6                     	;# 
   710  0DB7                     	;# 
   711  0DB7                     	;# 
   712  0DB8                     	;# 
   713  0DB9                     	;# 
   714  0DB9                     	;# 
   715  0DBA                     	;# 
   716  0DBB                     	;# 
   717  0DBC                     	;# 
   718  0DBC                     	;# 
   719  0DBD                     	;# 
   720  0DBD                     	;# 
   721  0DBE                     	;# 
   722  0DBF                     	;# 
   723  0DC0                     	;# 
   724  0FE4                     	;# 
   725  0FE5                     	;# 
   726  0FE6                     	;# 
   727  0FE7                     	;# 
   728  0FE8                     	;# 
   729  0FE8                     	;# 
   730  0FE9                     	;# 
   731  0FEA                     	;# 
   732  0FEA                     	;# 
   733  0FEB                     	;# 
   734  0FED                     	;# 
   735  0FEE                     	;# 
   736  0FEE                     	;# 
   737  0FEF                     	;# 
   738  0000                     	;# 
   739  0001                     	;# 
   740  0002                     	;# 
   741  0003                     	;# 
   742  0004                     	;# 
   743  0005                     	;# 
   744  0006                     	;# 
   745  0007                     	;# 
   746  0008                     	;# 
   747  0009                     	;# 
   748  000A                     	;# 
   749  000B                     	;# 
   750  000C                     	;# 
   751  0011                     	;# 
   752  0012                     	;# 
   753  0013                     	;# 
   754  0015                     	;# 
   755  0016                     	;# 
   756  0016                     	;# 
   757  0017                     	;# 
   758  0018                     	;# 
   759  0019                     	;# 
   760  001A                     	;# 
   761  001B                     	;# 
   762  001C                     	;# 
   763  008C                     	;# 
   764  0091                     	;# 
   765  0092                     	;# 
   766  0093                     	;# 
   767  0095                     	;# 
   768  0096                     	;# 
   769  0097                     	;# 
   770  0098                     	;# 
   771  0099                     	;# 
   772  009A                     	;# 
   773  009B                     	;# 
   774  009B                     	;# 
   775  009C                     	;# 
   776  009D                     	;# 
   777  009E                     	;# 
   778  009F                     	;# 
   779  010C                     	;# 
   780  0111                     	;# 
   781  0112                     	;# 
   782  0115                     	;# 
   783  0116                     	;# 
   784  0117                     	;# 
   785  0118                     	;# 
   786  0119                     	;# 
   787  011D                     	;# 
   788  011D                     	;# 
   789  018C                     	;# 
   790  0191                     	;# 
   791  0191                     	;# 
   792  0192                     	;# 
   793  0193                     	;# 
   794  0193                     	;# 
   795  0194                     	;# 
   796  0195                     	;# 
   797  0196                     	;# 
   798  0197                     	;# 
   799  0199                     	;# 
   800  019A                     	;# 
   801  019B                     	;# 
   802  019B                     	;# 
   803  019C                     	;# 
   804  019D                     	;# 
   805  019E                     	;# 
   806  019F                     	;# 
   807  020C                     	;# 
   808  028C                     	;# 
   809  030C                     	;# 
   810  038C                     	;# 
   811  0391                     	;# 
   812  0392                     	;# 
   813  0393                     	;# 
   814  0691                     	;# 
   815  0692                     	;# 
   816  0693                     	;# 
   817  0694                     	;# 
   818  0695                     	;# 
   819  0D8E                     	;# 
   820  0D8F                     	;# 
   821  0D90                     	;# 
   822  0D91                     	;# 
   823  0D91                     	;# 
   824  0D92                     	;# 
   825  0D93                     	;# 
   826  0D93                     	;# 
   827  0D94                     	;# 
   828  0D95                     	;# 
   829  0D95                     	;# 
   830  0D96                     	;# 
   831  0D97                     	;# 
   832  0D97                     	;# 
   833  0D98                     	;# 
   834  0D99                     	;# 
   835  0D99                     	;# 
   836  0D9A                     	;# 
   837  0D9B                     	;# 
   838  0D9C                     	;# 
   839  0D9C                     	;# 
   840  0D9D                     	;# 
   841  0D9D                     	;# 
   842  0D9E                     	;# 
   843  0D9F                     	;# 
   844  0DA0                     	;# 
   845  0DA1                     	;# 
   846  0DA1                     	;# 
   847  0DA2                     	;# 
   848  0DA3                     	;# 
   849  0DA3                     	;# 
   850  0DA4                     	;# 
   851  0DA5                     	;# 
   852  0DA5                     	;# 
   853  0DA6                     	;# 
   854  0DA7                     	;# 
   855  0DA7                     	;# 
   856  0DA8                     	;# 
   857  0DA9                     	;# 
   858  0DA9                     	;# 
   859  0DAA                     	;# 
   860  0DAB                     	;# 
   861  0DAC                     	;# 
   862  0DAC                     	;# 
   863  0DAD                     	;# 
   864  0DAD                     	;# 
   865  0DAE                     	;# 
   866  0DAF                     	;# 
   867  0DB0                     	;# 
   868  0DB1                     	;# 
   869  0DB1                     	;# 
   870  0DB2                     	;# 
   871  0DB3                     	;# 
   872  0DB3                     	;# 
   873  0DB4                     	;# 
   874  0DB5                     	;# 
   875  0DB5                     	;# 
   876  0DB6                     	;# 
   877  0DB7                     	;# 
   878  0DB7                     	;# 
   879  0DB8                     	;# 
   880  0DB9                     	;# 
   881  0DB9                     	;# 
   882  0DBA                     	;# 
   883  0DBB                     	;# 
   884  0DBC                     	;# 
   885  0DBC                     	;# 
   886  0DBD                     	;# 
   887  0DBD                     	;# 
   888  0DBE                     	;# 
   889  0DBF                     	;# 
   890  0DC0                     	;# 
   891  0FE4                     	;# 
   892  0FE5                     	;# 
   893  0FE6                     	;# 
   894  0FE7                     	;# 
   895  0FE8                     	;# 
   896  0FE8                     	;# 
   897  0FE9                     	;# 
   898  0FEA                     	;# 
   899  0FEA                     	;# 
   900  0FEB                     	;# 
   901  0FED                     	;# 
   902  0FEE                     	;# 
   903  0FEE                     	;# 
   904  0FEF                     	;# 
   905                           
   906                           	psect	nvBANK0
   907  0020                     __pnvBANK0:	
   908  0020                     _TMR0_InterruptHandler:	
   909  0020                     	ds	2
   910  0022                     _IOCAF3_InterruptHandler:	
   911  0022                     	ds	2
   912  0024                     _IOCAF2_InterruptHandler:	
   913  0024                     	ds	2
   914  0026                     _timer0ReloadVal:	
   915  0026                     	ds	1
   916  000C                     _PORTAbits	set	12
   917  000C                     _PORTA	set	12
   918  0015                     _TMR0	set	21
   919  000B                     _INTCONbits	set	11
   920  0095                     _OPTION_REG	set	149
   921  0097                     _WDTCON	set	151
   922  0098                     _OSCTUNE	set	152
   923  0099                     _OSCCON	set	153
   924  0095                     _OPTION_REGbits	set	149
   925  008C                     _TRISA	set	140
   926  0116                     _BORCON	set	278
   927  011D                     _APFCON	set	285
   928  010C                     _LATA	set	268
   929  0197                     _VREGCONbits	set	407
   930  018C                     _ANSELA	set	396
   931  020C                     _WPUA	set	524
   932  028C                     _ODCONA	set	652
   933  0391                     _IOCAPbits	set	913
   934  0392                     _IOCANbits	set	914
   935  0393                     _IOCAFbits	set	915
   936                           
   937                           ; #config settings
   938  0000                     
   939                           	psect	cinit
   940  0012                     start_initialization:	
   941  0012                     __initialization:	
   942                           
   943                           ; Clear objects allocated to COMMON
   944  0012  01F0               	clrf	__pbssCOMMON& (0+127)
   945  0013  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   946  0014  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   947  0015  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   948  0016  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   949                           
   950                           ; Clear objects allocated to BANK0
   951  0017  0020               	movlb	0	; select bank0
   952  0018  01AB               	clrf	__pbssBANK0& (0+127)
   953  0019                     end_of_initialization:	
   954                           ;End of C runtime variable initialization code
   955                           
   956  0019                     __end_of__initialization:	
   957  0019  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
   958  001A  0020               	movlb	0
   959  001B  281C               	ljmp	_main	;jump to C main() function
   960                           
   961                           	psect	bssCOMMON
   962  0070                     __pbssCOMMON:	
   963  0070                     _RightTime:	
   964  0070                     	ds	2
   965  0072                     _LeftTime:	
   966  0072                     	ds	2
   967  0074                     _LEDOns:	
   968  0074                     	ds	1
   969                           
   970                           	psect	bssBANK0
   971  002B                     __pbssBANK0:	
   972  002B                     _LEDState:	
   973  002B                     	ds	1
   974                           
   975                           	psect	cstackCOMMON
   976  0075                     __pcstackCOMMON:	
   977  0075                     ?_IOCAF2_DefaultInterruptHandler:	
   978  0075                     ??_IOCAF2_DefaultInterruptHandler:	
   979                           ; 1 bytes @ 0x0
   980                           
   981  0075                     ?_IOCAF3_DefaultInterruptHandler:	
   982                           ; 1 bytes @ 0x0
   983                           
   984  0075                     ??_IOCAF3_DefaultInterruptHandler:	
   985                           ; 1 bytes @ 0x0
   986                           
   987  0075                     ?_IOCAF2_ISR:	
   988                           ; 1 bytes @ 0x0
   989                           
   990  0075                     ??_IOCAF2_ISR:	
   991                           ; 1 bytes @ 0x0
   992                           
   993  0075                     ?_IOCAF3_ISR:	
   994                           ; 1 bytes @ 0x0
   995                           
   996  0075                     ??_IOCAF3_ISR:	
   997                           ; 1 bytes @ 0x0
   998                           
   999  0075                     ?_OSCILLATOR_Initialize:	
  1000                           ; 1 bytes @ 0x0
  1001                           
  1002  0075                     ?_WDT_Initialize:	
  1003                           ; 1 bytes @ 0x0
  1004                           
  1005  0075                     ?_TMR0_Initialize:	
  1006                           ; 1 bytes @ 0x0
  1007                           
  1008  0075                     ?_TMR0_ISR:	
  1009                           ; 1 bytes @ 0x0
  1010                           
  1011  0075                     ?_TMR0_CallBack:	
  1012                           ; 1 bytes @ 0x0
  1013                           
  1014  0075                     ?_PIN_MANAGER_Initialize:	
  1015                           ; 1 bytes @ 0x0
  1016                           
  1017  0075                     ?_PIN_MANAGER_IOC:	
  1018                           ; 1 bytes @ 0x0
  1019                           
  1020  0075                     ??_PIN_MANAGER_IOC:	
  1021                           ; 1 bytes @ 0x0
  1022                           
  1023  0075                     ?_SYSTEM_Initialize:	
  1024                           ; 1 bytes @ 0x0
  1025                           
  1026  0075                     ?_INTERRUPT_InterruptManager:	
  1027                           ; 1 bytes @ 0x0
  1028                           
  1029  0075                     ?_SetLEDOn:	
  1030                           ; 1 bytes @ 0x0
  1031                           
  1032  0075                     ?_SetLEDOff:	
  1033                           ; 1 bytes @ 0x0
  1034                           
  1035  0075                     ?_SetAllLEDsOff:	
  1036                           ; 1 bytes @ 0x0
  1037                           
  1038  0075                     ?_CharlieplexLEDs:	
  1039                           ; 1 bytes @ 0x0
  1040                           
  1041  0075                     ??_CharlieplexLEDs:	
  1042                           ; 1 bytes @ 0x0
  1043                           
  1044  0075                     ?_main:	
  1045                           ; 1 bytes @ 0x0
  1046                           
  1047  0075                     CharlieplexLEDs@PortTemp:	
  1048                           ; 1 bytes @ 0x0
  1049                           
  1050                           
  1051                           ; 1 bytes @ 0x0
  1052  0075                     	ds	1
  1053  0076                     ?_IOCAF2_SetInterruptHandler:	
  1054  0076                     ?_IOCAF3_SetInterruptHandler:	
  1055                           ; 1 bytes @ 0x1
  1056                           
  1057  0076                     ??_OSCILLATOR_Initialize:	
  1058                           ; 1 bytes @ 0x1
  1059                           
  1060  0076                     ??_WDT_Initialize:	
  1061                           ; 1 bytes @ 0x1
  1062                           
  1063  0076                     ??_TMR0_Initialize:	
  1064                           ; 1 bytes @ 0x1
  1065                           
  1066  0076                     ??_TMR0_ISR:	
  1067                           ; 1 bytes @ 0x1
  1068                           
  1069  0076                     ??_TMR0_CallBack:	
  1070                           ; 1 bytes @ 0x1
  1071                           
  1072  0076                     ??_INTERRUPT_InterruptManager:	
  1073                           ; 1 bytes @ 0x1
  1074                           
  1075  0076                     ?_TMR0_SetInterruptHandler:	
  1076                           ; 1 bytes @ 0x1
  1077                           
  1078  0076                     ??_SetLEDOn:	
  1079                           ; 1 bytes @ 0x1
  1080                           
  1081  0076                     ??_SetLEDOff:	
  1082                           ; 1 bytes @ 0x1
  1083                           
  1084  0076                     ??_SetAllLEDsOff:	
  1085                           ; 1 bytes @ 0x1
  1086                           
  1087  0076                     SetLEDOn@LED:	
  1088                           ; 1 bytes @ 0x1
  1089                           
  1090  0076                     SetLEDOff@LED:	
  1091                           ; 1 bytes @ 0x1
  1092                           
  1093  0076                     IOCAF2_SetInterruptHandler@InterruptHandler:	
  1094                           ; 1 bytes @ 0x1
  1095                           
  1096  0076                     IOCAF3_SetInterruptHandler@InterruptHandler:	
  1097                           ; 2 bytes @ 0x1
  1098                           
  1099  0076                     TMR0_SetInterruptHandler@InterruptHandler:	
  1100                           ; 2 bytes @ 0x1
  1101                           
  1102                           
  1103                           ; 2 bytes @ 0x1
  1104  0076                     	ds	2
  1105  0078                     ??_IOCAF2_SetInterruptHandler:	
  1106  0078                     ??_IOCAF3_SetInterruptHandler:	
  1107                           ; 1 bytes @ 0x3
  1108                           
  1109  0078                     ??_PIN_MANAGER_Initialize:	
  1110                           ; 1 bytes @ 0x3
  1111                           
  1112  0078                     ??_SYSTEM_Initialize:	
  1113                           ; 1 bytes @ 0x3
  1114                           
  1115  0078                     ??_TMR0_SetInterruptHandler:	
  1116                           ; 1 bytes @ 0x3
  1117                           
  1118  0078                     ??_main:	
  1119                           ; 1 bytes @ 0x3
  1120                           
  1121                           
  1122                           ; 1 bytes @ 0x3
  1123  0078                     	ds	2
  1124                           
  1125                           	psect	cstackBANK0
  1126  0027                     __pcstackBANK0:	
  1127  0027                     main@LastLeftButtonState:	
  1128                           
  1129                           ; 1 bytes @ 0x0
  1130  0027                     	ds	1
  1131  0028                     main@LastRightButtonState:	
  1132                           
  1133                           ; 1 bytes @ 0x1
  1134  0028                     	ds	1
  1135  0029                     main@LeftState:	
  1136                           
  1137                           ; 1 bytes @ 0x2
  1138  0029                     	ds	1
  1139  002A                     main@RightState:	
  1140                           
  1141                           ; 1 bytes @ 0x3
  1142  002A                     	ds	1
  1143                           
  1144                           	psect	maintext
  1145  001C                     __pmaintext:	
  1146 ;;
  1147 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1148 ;;
  1149 ;; *************** function _main *****************
  1150 ;; Defined at:
  1151 ;;		line 214 in file "main.c"
  1152 ;; Parameters:    Size  Location     Type
  1153 ;;		None
  1154 ;; Auto vars:     Size  Location     Type
  1155 ;;  RightState      1    3[BANK0 ] unsigned char 
  1156 ;;  LeftState       1    2[BANK0 ] unsigned char 
  1157 ;;  LastRightBut    1    1[BANK0 ] unsigned char 
  1158 ;;  LastLeftButt    1    0[BANK0 ] unsigned char 
  1159 ;; Return value:  Size  Location     Type
  1160 ;;                  1    wreg      void 
  1161 ;; Registers used:
  1162 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1163 ;; Tracked objects:
  1164 ;;		On entry : B1F/0
  1165 ;;		On exit  : 1F/0
  1166 ;;		Unchanged: 0/0
  1167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1168 ;;      Params:         0       0       0       0
  1169 ;;      Locals:         0       4       0       0
  1170 ;;      Temps:          2       0       0       0
  1171 ;;      Totals:         2       4       0       0
  1172 ;;Total ram usage:        6 bytes
  1173 ;; Hardware stack levels required when called:    7
  1174 ;; This function calls:
  1175 ;;		_SYSTEM_Initialize
  1176 ;;		_SetAllLEDsOff
  1177 ;;		_SetLEDOff
  1178 ;;		_SetLEDOn
  1179 ;;		_TMR0_SetInterruptHandler
  1180 ;; This function is called by:
  1181 ;;		Startup code after reset
  1182 ;; This function uses a non-reentrant model
  1183 ;;
  1184                           
  1185                           
  1186                           ;psect for function _main
  1187  001C                     _main:	
  1188                           
  1189                           ;main.c: 217: SYSTEM_Initialize();
  1190                           
  1191                           ;incstack = 0
  1192                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1193  001C  21D7               	fcall	_SYSTEM_Initialize
  1194                           
  1195                           ;main.c: 219: TMR0_SetInterruptHandler(CharlieplexLEDs);
  1196  001D  30F3               	movlw	low _CharlieplexLEDs
  1197  001E  00F6               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  1198  001F  3000               	movlw	high _CharlieplexLEDs
  1199  0020  00F7               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  1200  0021  21C4               	fcall	_TMR0_SetInterruptHandler
  1201                           
  1202                           ;main.c: 225: (INTCONbits.GIE = 1);
  1203  0022  178B               	bsf	11,7	;volatile
  1204                           
  1205                           ;main.c: 228: (INTCONbits.PEIE = 1);
  1206  0023  170B               	bsf	11,6	;volatile
  1207                           
  1208                           ;main.c: 239: uint8_t LeftState = 0;
  1209  0024  01A9               	clrf	main@LeftState
  1210                           
  1211                           ;main.c: 240: uint8_t RightState = 0;
  1212  0025  01AA               	clrf	main@RightState
  1213                           
  1214                           ;main.c: 241: uint8_t LastLeftButtonState = 0;
  1215  0026  01A7               	clrf	main@LastLeftButtonState
  1216  0027                     l1466:	
  1217                           
  1218                           ;main.c: 242: uint8_t LastRightButtonState = 0;
  1219  0027  01A8               	clrf	main@LastRightButtonState
  1220  0028  28CF               	goto	l1562
  1221  0029                     l1468:	
  1222                           
  1223                           ;main.c: 255: SetLEDOn(0x01);
  1224  0029  3001               	movlw	1
  1225  002A  21DF               	fcall	_SetLEDOn
  1226                           
  1227                           ;main.c: 256: SetLEDOff(0x02);
  1228  002B  3002               	movlw	2
  1229  002C  21D3               	fcall	_SetLEDOff
  1230  002D                     L1:	
  1231                           
  1232                           ;main.c: 257: SetLEDOff(0x04);
  1233  002D  3004               	movlw	4
  1234  002E  21D3               	fcall	_SetLEDOff
  1235  002F                     L2:	
  1236                           
  1237                           ;main.c: 258: SetLEDOff(0x08);
  1238  002F  3008               	movlw	8
  1239  0030  21D3               	fcall	_SetLEDOff
  1240  0031                     l1470:	
  1241                           
  1242                           ;main.c: 259: RightTime = 2000;
  1243  0031  30D0               	movlw	208
  1244  0032  00F0               	movwf	_RightTime	;volatile
  1245  0033  3007               	movlw	7
  1246  0034  00F1               	movwf	_RightTime+1	;volatile
  1247                           
  1248                           ;main.c: 260: RightState++;
  1249  0035  0020               	movlb	0	; select bank0
  1250  0036  0AAA               	incf	main@RightState,f
  1251                           
  1252                           ;main.c: 261: break;
  1253  0037  28B1               	goto	l1546
  1254  0038                     l1474:	
  1255                           
  1256                           ;main.c: 264: if (RightTime == 0)
  1257  0038  0870               	movf	_RightTime,w	;volatile
  1258  0039  0471               	iorwf	_RightTime+1,w	;volatile
  1259  003A  1D03               	btfss	3,2
  1260  003B  28B1               	goto	l1546
  1261                           
  1262                           ;main.c: 265: {
  1263                           ;main.c: 266: SetLEDOff(0x01);
  1264  003C  3001               	movlw	1
  1265  003D  21D3               	fcall	_SetLEDOff
  1266                           
  1267                           ;main.c: 267: SetLEDOn(0x02);
  1268  003E  3002               	movlw	2
  1269  003F  21DF               	fcall	_SetLEDOn
  1270  0040  282D               	goto	L1
  1271  0041                     l1482:	
  1272                           ;main.c: 269: SetLEDOff(0x08);
  1273                           
  1274                           ;main.c: 268: SetLEDOff(0x04);
  1275                           
  1276                           
  1277                           ;main.c: 276: if (RightTime == 0)
  1278  0041  0870               	movf	_RightTime,w	;volatile
  1279  0042  0471               	iorwf	_RightTime+1,w	;volatile
  1280  0043  1D03               	btfss	3,2
  1281  0044  28B1               	goto	l1546
  1282                           
  1283                           ;main.c: 277: {
  1284                           ;main.c: 278: SetLEDOff(0x01);
  1285  0045  3001               	movlw	1
  1286  0046  21D3               	fcall	_SetLEDOff
  1287                           
  1288                           ;main.c: 279: SetLEDOff(0x02);
  1289  0047  3002               	movlw	2
  1290  0048  21D3               	fcall	_SetLEDOff
  1291                           
  1292                           ;main.c: 280: SetLEDOn(0x04);
  1293  0049  3004               	movlw	4
  1294  004A  21DF               	fcall	_SetLEDOn
  1295  004B  282F               	goto	L2
  1296  004C                     l1490:	
  1297                           ;main.c: 281: SetLEDOff(0x08);
  1298                           
  1299                           
  1300                           ;main.c: 288: if (RightTime == 0)
  1301  004C  0870               	movf	_RightTime,w	;volatile
  1302  004D  0471               	iorwf	_RightTime+1,w	;volatile
  1303  004E  1D03               	btfss	3,2
  1304  004F  28B1               	goto	l1546
  1305                           
  1306                           ;main.c: 289: {
  1307                           ;main.c: 290: SetLEDOff(0x01);
  1308  0050  3001               	movlw	1
  1309  0051  21D3               	fcall	_SetLEDOff
  1310                           
  1311                           ;main.c: 291: SetLEDOff(0x02);
  1312  0052  3002               	movlw	2
  1313  0053  21D3               	fcall	_SetLEDOff
  1314                           
  1315                           ;main.c: 292: SetLEDOff(0x04);
  1316  0054  3004               	movlw	4
  1317  0055  21D3               	fcall	_SetLEDOff
  1318                           
  1319                           ;main.c: 293: SetLEDOn(0x08);
  1320  0056  3008               	movlw	8
  1321  0057  21DF               	fcall	_SetLEDOn
  1322  0058  2831               	goto	l1470
  1323  0059                     l1498:	
  1324                           
  1325                           ;main.c: 300: if (RightTime == 0)
  1326  0059  0870               	movf	_RightTime,w	;volatile
  1327  005A  0471               	iorwf	_RightTime+1,w	;volatile
  1328  005B  1D03               	btfss	3,2
  1329  005C  28B1               	goto	l1546
  1330                           
  1331                           ;main.c: 301: {
  1332                           ;main.c: 302: SetLEDOff(0x01);
  1333  005D  3001               	movlw	1
  1334  005E  21D3               	fcall	_SetLEDOff
  1335                           
  1336                           ;main.c: 303: SetLEDOff(0x02);
  1337  005F  3002               	movlw	2
  1338  0060  21D3               	fcall	_SetLEDOff
  1339                           
  1340                           ;main.c: 304: SetLEDOff(0x04);
  1341  0061  3004               	movlw	4
  1342  0062  21D3               	fcall	_SetLEDOff
  1343                           
  1344                           ;main.c: 305: SetLEDOff(0x08);
  1345  0063  3008               	movlw	8
  1346  0064  21D3               	fcall	_SetLEDOff
  1347                           
  1348                           ;main.c: 306: RightState = 0;
  1349  0065  0020               	movlb	0	; select bank0
  1350  0066  01AA               	clrf	main@RightState
  1351  0067  28B1               	goto	l1546
  1352  0068                     l1506:	
  1353  0068  082A               	movf	main@RightState,w
  1354                           
  1355                           ; Switch size 1, requested type "space"
  1356                           ; Number of cases is 6, Range of values is 0 to 5
  1357                           ; switch strategies available:
  1358                           ; Name         Instructions Cycles
  1359                           ; direct_byte           18     6 (fixed)
  1360                           ; simple_byte           19    10 (average)
  1361                           ; jumptable            260     6 (fixed)
  1362                           ;	Chosen strategy is direct_byte
  1363  0069  0084               	movwf	4
  1364  006A  3006               	movlw	6
  1365  006B  0204               	subwf	4,w
  1366  006C  1803               	skipnc
  1367  006D  28B1               	goto	l1546
  1368  006E  3181               	movlp	high S1676
  1369  006F  30B2               	movlw	low S1676
  1370  0070  0704               	addwf	4,w
  1371  0071  0082               	movwf	2
  1372  0072                     l1508:	
  1373                           
  1374                           ;main.c: 321: SetLEDOn(0x40);
  1375  0072  3040               	movlw	64
  1376  0073  21DF               	fcall	_SetLEDOn
  1377                           
  1378                           ;main.c: 322: SetLEDOff(0x80);
  1379  0074  3080               	movlw	128
  1380  0075  21D3               	fcall	_SetLEDOff
  1381  0076                     L3:	
  1382                           
  1383                           ;main.c: 323: SetLEDOff(0x10);
  1384  0076  3010               	movlw	16
  1385  0077  21D3               	fcall	_SetLEDOff
  1386  0078                     L4:	
  1387                           
  1388                           ;main.c: 324: SetLEDOff(0x20);
  1389  0078  3020               	movlw	32
  1390  0079  21D3               	fcall	_SetLEDOff
  1391  007A                     l1510:	
  1392                           
  1393                           ;main.c: 325: LeftTime = 2000;
  1394  007A  30D0               	movlw	208
  1395  007B  00F2               	movwf	_LeftTime	;volatile
  1396  007C  3007               	movlw	7
  1397  007D  00F3               	movwf	_LeftTime+1	;volatile
  1398                           
  1399                           ;main.c: 326: LeftState++;
  1400  007E  0020               	movlb	0	; select bank0
  1401  007F  0AA9               	incf	main@LeftState,f
  1402                           
  1403                           ;main.c: 327: break;
  1404  0080  28BB               	goto	l222
  1405  0081                     l1514:	
  1406                           
  1407                           ;main.c: 330: if (LeftTime == 0)
  1408  0081  0872               	movf	_LeftTime,w	;volatile
  1409  0082  0473               	iorwf	_LeftTime+1,w	;volatile
  1410  0083  1D03               	btfss	3,2
  1411  0084  28BB               	goto	l222
  1412                           
  1413                           ;main.c: 331: {
  1414                           ;main.c: 332: SetLEDOff(0x40);
  1415  0085  3040               	movlw	64
  1416  0086  21D3               	fcall	_SetLEDOff
  1417                           
  1418                           ;main.c: 333: SetLEDOn(0x80);
  1419  0087  3080               	movlw	128
  1420  0088  21DF               	fcall	_SetLEDOn
  1421  0089  2876               	goto	L3
  1422  008A                     l1522:	
  1423                           ;main.c: 335: SetLEDOff(0x20);
  1424                           
  1425                           ;main.c: 334: SetLEDOff(0x10);
  1426                           
  1427                           
  1428                           ;main.c: 342: if (LeftTime == 0)
  1429  008A  0872               	movf	_LeftTime,w	;volatile
  1430  008B  0473               	iorwf	_LeftTime+1,w	;volatile
  1431  008C  1D03               	btfss	3,2
  1432  008D  28BB               	goto	l222
  1433                           
  1434                           ;main.c: 343: {
  1435                           ;main.c: 344: SetLEDOff(0x40);
  1436  008E  3040               	movlw	64
  1437  008F  21D3               	fcall	_SetLEDOff
  1438                           
  1439                           ;main.c: 345: SetLEDOff(0x80);
  1440  0090  3080               	movlw	128
  1441  0091  21D3               	fcall	_SetLEDOff
  1442                           
  1443                           ;main.c: 346: SetLEDOn(0x10);
  1444  0092  3010               	movlw	16
  1445  0093  21DF               	fcall	_SetLEDOn
  1446  0094  2878               	goto	L4
  1447  0095                     l1530:	
  1448                           ;main.c: 347: SetLEDOff(0x20);
  1449                           
  1450                           
  1451                           ;main.c: 354: if (LeftTime == 0)
  1452  0095  0872               	movf	_LeftTime,w	;volatile
  1453  0096  0473               	iorwf	_LeftTime+1,w	;volatile
  1454  0097  1D03               	btfss	3,2
  1455  0098  28BB               	goto	l222
  1456                           
  1457                           ;main.c: 355: {
  1458                           ;main.c: 356: SetLEDOff(0x40);
  1459  0099  3040               	movlw	64
  1460  009A  21D3               	fcall	_SetLEDOff
  1461                           
  1462                           ;main.c: 357: SetLEDOff(0x80);
  1463  009B  3080               	movlw	128
  1464  009C  21D3               	fcall	_SetLEDOff
  1465                           
  1466                           ;main.c: 358: SetLEDOff(0x10);
  1467  009D  3010               	movlw	16
  1468  009E  21D3               	fcall	_SetLEDOff
  1469                           
  1470                           ;main.c: 359: SetLEDOn(0x20);
  1471  009F  3020               	movlw	32
  1472  00A0  21DF               	fcall	_SetLEDOn
  1473  00A1  287A               	goto	l1510
  1474  00A2                     l1538:	
  1475                           
  1476                           ;main.c: 366: if (LeftTime == 0)
  1477  00A2  0872               	movf	_LeftTime,w	;volatile
  1478  00A3  0473               	iorwf	_LeftTime+1,w	;volatile
  1479  00A4  1D03               	btfss	3,2
  1480  00A5  28BB               	goto	l222
  1481                           
  1482                           ;main.c: 367: {
  1483                           ;main.c: 368: SetLEDOff(0x40);
  1484  00A6  3040               	movlw	64
  1485  00A7  21D3               	fcall	_SetLEDOff
  1486                           
  1487                           ;main.c: 369: SetLEDOff(0x80);
  1488  00A8  3080               	movlw	128
  1489  00A9  21D3               	fcall	_SetLEDOff
  1490                           
  1491                           ;main.c: 370: SetLEDOff(0x10);
  1492  00AA  3010               	movlw	16
  1493  00AB  21D3               	fcall	_SetLEDOff
  1494                           
  1495                           ;main.c: 371: SetLEDOff(0x20);
  1496  00AC  3020               	movlw	32
  1497  00AD  21D3               	fcall	_SetLEDOff
  1498                           
  1499                           ;main.c: 372: LeftState = 0;
  1500  00AE  0020               	movlb	0	; select bank0
  1501  00AF  01A9               	clrf	main@LeftState
  1502  00B0  28BB               	goto	l222
  1503  00B1                     l1546:	
  1504  00B1  0829               	movf	main@LeftState,w
  1505                           
  1506                           ; Switch size 1, requested type "space"
  1507                           ; Number of cases is 6, Range of values is 0 to 5
  1508                           ; switch strategies available:
  1509                           ; Name         Instructions Cycles
  1510                           ; direct_byte           18     6 (fixed)
  1511                           ; simple_byte           19    10 (average)
  1512                           ; jumptable            260     6 (fixed)
  1513                           ;	Chosen strategy is direct_byte
  1514  00B2  0084               	movwf	4
  1515  00B3  3006               	movlw	6
  1516  00B4  0204               	subwf	4,w
  1517  00B5  1803               	skipnc
  1518  00B6  28BB               	goto	l222
  1519  00B7  3181               	movlp	high S1678
  1520  00B8  30B8               	movlw	low S1678
  1521  00B9  0704               	addwf	4,w
  1522  00BA  0082               	movwf	2
  1523  00BB                     l222:	
  1524                           
  1525                           ;main.c: 381: if (PORTAbits.RA2 == 0)
  1526  00BB  190C               	btfsc	12,2	;volatile
  1527  00BC  28C5               	goto	l1552
  1528                           
  1529                           ;main.c: 382: {
  1530                           ;main.c: 383: if (LastLeftButtonState == 0)
  1531  00BD  0827               	movf	main@LastLeftButtonState,w
  1532  00BE  1D03               	btfss	3,2
  1533  00BF  28C2               	goto	l234
  1534                           
  1535                           ;main.c: 384: {
  1536                           ;main.c: 385: LeftState = 1;
  1537  00C0  01A9               	clrf	main@LeftState
  1538  00C1  0AA9               	incf	main@LeftState,f
  1539  00C2                     l234:	
  1540                           
  1541                           ;main.c: 386: }
  1542                           ;main.c: 387: LastLeftButtonState = 1;
  1543  00C2  01A7               	clrf	main@LastLeftButtonState
  1544  00C3  0AA7               	incf	main@LastLeftButtonState,f
  1545                           
  1546                           ;main.c: 388: }
  1547  00C4  28C6               	goto	l1554
  1548  00C5                     l1552:	
  1549                           
  1550                           ;main.c: 389: else
  1551                           ;main.c: 390: {
  1552                           ;main.c: 391: LastLeftButtonState = 0;
  1553  00C5  01A7               	clrf	main@LastLeftButtonState
  1554  00C6                     l1554:	
  1555                           
  1556                           ;main.c: 392: }
  1557                           ;main.c: 395: if (PORTAbits.RA3 == 0)
  1558  00C6  198C               	btfsc	12,3	;volatile
  1559  00C7  2827               	goto	l1466
  1560                           
  1561                           ;main.c: 396: {
  1562                           ;main.c: 397: if (LastRightButtonState == 0)
  1563  00C8  0828               	movf	main@LastRightButtonState,w
  1564  00C9  1D03               	btfss	3,2
  1565  00CA  28CD               	goto	l237
  1566                           
  1567                           ;main.c: 398: {
  1568                           ;main.c: 399: RightState = 1;
  1569  00CB  01AA               	clrf	main@RightState
  1570  00CC  0AAA               	incf	main@RightState,f
  1571  00CD                     l237:	
  1572                           
  1573                           ;main.c: 400: }
  1574                           ;main.c: 401: LastRightButtonState = 1;
  1575  00CD  01A8               	clrf	main@LastRightButtonState
  1576  00CE  0AA8               	incf	main@LastRightButtonState,f
  1577  00CF                     l1562:	
  1578                           ;main.c: 402: }
  1579                           
  1580  00CF  0829               	movf	main@LeftState,w
  1581  00D0  1D03               	btfss	3,2
  1582  00D1  2868               	goto	l1506
  1583  00D2  082A               	movf	main@RightState,w
  1584  00D3  1D03               	btfss	3,2
  1585  00D4  2868               	goto	l1506
  1586                           
  1587                           ;main.c: 406: }
  1588                           ;main.c: 407: }
  1589                           ;main.c: 410: VREGCONbits.VREGPM = 1;
  1590  00D5  0023               	movlb	3	; select bank3
  1591  00D6  1497               	bsf	23,1	;volatile
  1592                           
  1593                           ;main.c: 412: SetAllLEDsOff();
  1594  00D7  21E2               	fcall	_SetAllLEDsOff
  1595                           
  1596                           ;main.c: 414: _delay((unsigned long)((50)*(16000000/4000.0)));
  1597  00D8  3002               	movlw	2
  1598  00D9  00F9               	movwf	??_main+1
  1599  00DA  3004               	movlw	4
  1600  00DB  00F8               	movwf	??_main
  1601  00DC  30BA               	movlw	186
  1602  00DD                     u917:	
  1603  00DD  0B89               	decfsz	9,f
  1604  00DE  28DD               	goto	u917
  1605  00DF  0BF8               	decfsz	??_main,f
  1606  00E0  28DD               	goto	u917
  1607  00E1  0BF9               	decfsz	??_main+1,f
  1608  00E2  28DD               	goto	u917
  1609  00E3  3200               	nop2
  1610  00E4  0063               	sleep	;# 
  1611                           
  1612                           ;main.c: 418: LeftTime = 0;
  1613  00E5  01F2               	clrf	_LeftTime	;volatile
  1614  00E6  01F3               	clrf	_LeftTime+1	;volatile
  1615                           
  1616                           ;main.c: 419: RightTime = 0;
  1617  00E7  01F0               	clrf	_RightTime	;volatile
  1618  00E8  01F1               	clrf	_RightTime+1	;volatile
  1619                           
  1620                           ;main.c: 421: if (PORTAbits.RA2 == 0)
  1621  00E9  0020               	movlb	0	; select bank0
  1622  00EA  190C               	btfsc	12,2	;volatile
  1623  00EB  28EE               	goto	l240
  1624                           
  1625                           ;main.c: 422: {
  1626                           ;main.c: 423: LeftState = 1;
  1627  00EC  01A9               	clrf	main@LeftState
  1628  00ED  0AA9               	incf	main@LeftState,f
  1629  00EE                     l240:	
  1630                           
  1631                           ;main.c: 424: }
  1632                           ;main.c: 425: if (PORTAbits.RA3 == 0)
  1633  00EE  198C               	btfsc	12,3	;volatile
  1634  00EF  28CF               	goto	l1562
  1635                           
  1636                           ;main.c: 426: {
  1637                           ;main.c: 427: RightState = 1;
  1638  00F0  01AA               	clrf	main@RightState
  1639  00F1  0AAA               	incf	main@RightState,f
  1640  00F2  28CF               	goto	l1562
  1641  00F3                     __end_of_main:	
  1642                           
  1643                           	psect	swtext1
  1644  01B2                     __pswtext1:	
  1645  01B2                     S1676:	
  1646  01B2  28B1               	ljmp	l1546
  1647  01B3  2829               	ljmp	l1468
  1648  01B4  2838               	ljmp	l1474
  1649  01B5  2841               	ljmp	l1482
  1650  01B6  284C               	ljmp	l1490
  1651  01B7  2859               	ljmp	l1498
  1652                           
  1653                           	psect	swtext2
  1654  01B8                     __pswtext2:	
  1655  01B8                     S1678:	
  1656  01B8  28BB               	ljmp	l222
  1657  01B9  2872               	ljmp	l1508
  1658  01BA  2881               	ljmp	l1514
  1659  01BB  288A               	ljmp	l1522
  1660  01BC  2895               	ljmp	l1530
  1661  01BD  28A2               	ljmp	l1538
  1662                           
  1663                           	psect	text1
  1664  01C4                     __ptext1:	
  1665 ;; *************** function _TMR0_SetInterruptHandler *****************
  1666 ;; Defined at:
  1667 ;;		line 129 in file "mcc_generated_files/tmr0.c"
  1668 ;; Parameters:    Size  Location     Type
  1669 ;;  InterruptHan    2    1[COMMON] PTR FTN()void 
  1670 ;;		 -> CharlieplexLEDs(1), 
  1671 ;; Auto vars:     Size  Location     Type
  1672 ;;		None
  1673 ;; Return value:  Size  Location     Type
  1674 ;;                  1    wreg      void 
  1675 ;; Registers used:
  1676 ;;		wreg
  1677 ;; Tracked objects:
  1678 ;;		On entry : B1F/0
  1679 ;;		On exit  : B1F/0
  1680 ;;		Unchanged: B00/0
  1681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1682 ;;      Params:         2       0       0       0
  1683 ;;      Locals:         0       0       0       0
  1684 ;;      Temps:          0       0       0       0
  1685 ;;      Totals:         2       0       0       0
  1686 ;;Total ram usage:        2 bytes
  1687 ;; Hardware stack levels used:    1
  1688 ;; Hardware stack levels required when called:    4
  1689 ;; This function calls:
  1690 ;;		Nothing
  1691 ;; This function is called by:
  1692 ;;		_main
  1693 ;; This function uses a non-reentrant model
  1694 ;;
  1695                           
  1696                           
  1697                           ;psect for function _TMR0_SetInterruptHandler
  1698  01C4                     _TMR0_SetInterruptHandler:	
  1699                           
  1700                           ;tmr0.c: 130: TMR0_InterruptHandler = InterruptHandler;
  1701                           
  1702                           ;incstack = 0
  1703                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  1704  01C4  0877               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  1705  01C5  00A1               	movwf	_TMR0_InterruptHandler+1
  1706  01C6  0876               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  1707  01C7  00A0               	movwf	_TMR0_InterruptHandler
  1708  01C8  0008               	return
  1709  01C9                     __end_of_TMR0_SetInterruptHandler:	
  1710                           
  1711                           	psect	text2
  1712  01DF                     __ptext2:	
  1713 ;; *************** function _SetLEDOn *****************
  1714 ;; Defined at:
  1715 ;;		line 111 in file "main.c"
  1716 ;; Parameters:    Size  Location     Type
  1717 ;;  LED             1    wreg     unsigned char 
  1718 ;; Auto vars:     Size  Location     Type
  1719 ;;  LED             1    1[COMMON] unsigned char 
  1720 ;; Return value:  Size  Location     Type
  1721 ;;                  1    wreg      void 
  1722 ;; Registers used:
  1723 ;;		wreg, status,2, status,0
  1724 ;; Tracked objects:
  1725 ;;		On entry : 0/0
  1726 ;;		On exit  : 0/0
  1727 ;;		Unchanged: 0/0
  1728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1729 ;;      Params:         0       0       0       0
  1730 ;;      Locals:         1       0       0       0
  1731 ;;      Temps:          0       0       0       0
  1732 ;;      Totals:         1       0       0       0
  1733 ;;Total ram usage:        1 bytes
  1734 ;; Hardware stack levels used:    1
  1735 ;; Hardware stack levels required when called:    4
  1736 ;; This function calls:
  1737 ;;		Nothing
  1738 ;; This function is called by:
  1739 ;;		_main
  1740 ;; This function uses a non-reentrant model
  1741 ;;
  1742                           
  1743                           
  1744                           ;psect for function _SetLEDOn
  1745  01DF                     _SetLEDOn:	
  1746                           
  1747                           ;incstack = 0
  1748                           ; Regs used in _SetLEDOn: [wreg+status,2+status,0]
  1749                           ;SetLEDOn@LED stored from wreg
  1750  01DF  00F6               	movwf	SetLEDOn@LED
  1751                           
  1752                           ;main.c: 113: LEDOns = (uint8_t)(LEDOns | LED);
  1753  01E0  04F4               	iorwf	_LEDOns,f	;volatile
  1754  01E1  0008               	return
  1755  01E2                     __end_of_SetLEDOn:	
  1756                           
  1757                           	psect	text3
  1758  01D3                     __ptext3:	
  1759 ;; *************** function _SetLEDOff *****************
  1760 ;; Defined at:
  1761 ;;		line 116 in file "main.c"
  1762 ;; Parameters:    Size  Location     Type
  1763 ;;  LED             1    wreg     unsigned char 
  1764 ;; Auto vars:     Size  Location     Type
  1765 ;;  LED             1    1[COMMON] unsigned char 
  1766 ;; Return value:  Size  Location     Type
  1767 ;;                  1    wreg      void 
  1768 ;; Registers used:
  1769 ;;		wreg, status,2, status,0
  1770 ;; Tracked objects:
  1771 ;;		On entry : 0/0
  1772 ;;		On exit  : 0/0
  1773 ;;		Unchanged: 0/0
  1774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1775 ;;      Params:         0       0       0       0
  1776 ;;      Locals:         1       0       0       0
  1777 ;;      Temps:          0       0       0       0
  1778 ;;      Totals:         1       0       0       0
  1779 ;;Total ram usage:        1 bytes
  1780 ;; Hardware stack levels used:    1
  1781 ;; Hardware stack levels required when called:    4
  1782 ;; This function calls:
  1783 ;;		Nothing
  1784 ;; This function is called by:
  1785 ;;		_main
  1786 ;; This function uses a non-reentrant model
  1787 ;;
  1788                           
  1789                           
  1790                           ;psect for function _SetLEDOff
  1791  01D3                     _SetLEDOff:	
  1792                           
  1793                           ;incstack = 0
  1794                           ; Regs used in _SetLEDOff: [wreg+status,2+status,0]
  1795                           ;SetLEDOff@LED stored from wreg
  1796  01D3  00F6               	movwf	SetLEDOff@LED
  1797                           
  1798                           ;main.c: 118: LEDOns = (uint8_t)(LEDOns & ~LED);
  1799  01D4  0976               	comf	SetLEDOff@LED,w
  1800  01D5  05F4               	andwf	_LEDOns,f	;volatile
  1801  01D6  0008               	return
  1802  01D7                     __end_of_SetLEDOff:	
  1803                           
  1804                           	psect	text4
  1805  01E2                     __ptext4:	
  1806 ;; *************** function _SetAllLEDsOff *****************
  1807 ;; Defined at:
  1808 ;;		line 121 in file "main.c"
  1809 ;; Parameters:    Size  Location     Type
  1810 ;;		None
  1811 ;; Auto vars:     Size  Location     Type
  1812 ;;		None
  1813 ;; Return value:  Size  Location     Type
  1814 ;;                  1    wreg      void 
  1815 ;; Registers used:
  1816 ;;		status,2
  1817 ;; Tracked objects:
  1818 ;;		On entry : 1F/3
  1819 ;;		On exit  : 1F/3
  1820 ;;		Unchanged: 1E/0
  1821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1822 ;;      Params:         0       0       0       0
  1823 ;;      Locals:         0       0       0       0
  1824 ;;      Temps:          0       0       0       0
  1825 ;;      Totals:         0       0       0       0
  1826 ;;Total ram usage:        0 bytes
  1827 ;; Hardware stack levels used:    1
  1828 ;; Hardware stack levels required when called:    4
  1829 ;; This function calls:
  1830 ;;		Nothing
  1831 ;; This function is called by:
  1832 ;;		_main
  1833 ;; This function uses a non-reentrant model
  1834 ;;
  1835                           
  1836                           
  1837                           ;psect for function _SetAllLEDsOff
  1838  01E2                     _SetAllLEDsOff:	
  1839                           
  1840                           ;main.c: 123: LEDOns = 0;
  1841                           
  1842                           ;incstack = 0
  1843                           ; Regs used in _SetAllLEDsOff: [status,2]
  1844  01E2  01F4               	clrf	_LEDOns	;volatile
  1845  01E3  0008               	return
  1846  01E4                     __end_of_SetAllLEDsOff:	
  1847                           
  1848                           	psect	text5
  1849  01D7                     __ptext5:	
  1850 ;; *************** function _SYSTEM_Initialize *****************
  1851 ;; Defined at:
  1852 ;;		line 68 in file "mcc_generated_files/mcc.c"
  1853 ;; Parameters:    Size  Location     Type
  1854 ;;		None
  1855 ;; Auto vars:     Size  Location     Type
  1856 ;;		None
  1857 ;; Return value:  Size  Location     Type
  1858 ;;                  1    wreg      void 
  1859 ;; Registers used:
  1860 ;;		wreg, status,2, status,0, pclath, cstack
  1861 ;; Tracked objects:
  1862 ;;		On entry : B1F/0
  1863 ;;		On exit  : B1F/0
  1864 ;;		Unchanged: B00/0
  1865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1866 ;;      Params:         0       0       0       0
  1867 ;;      Locals:         0       0       0       0
  1868 ;;      Temps:          0       0       0       0
  1869 ;;      Totals:         0       0       0       0
  1870 ;;Total ram usage:        0 bytes
  1871 ;; Hardware stack levels used:    1
  1872 ;; Hardware stack levels required when called:    6
  1873 ;; This function calls:
  1874 ;;		_OSCILLATOR_Initialize
  1875 ;;		_PIN_MANAGER_Initialize
  1876 ;;		_TMR0_Initialize
  1877 ;;		_WDT_Initialize
  1878 ;; This function is called by:
  1879 ;;		_main
  1880 ;; This function uses a non-reentrant model
  1881 ;;
  1882                           
  1883                           
  1884                           ;psect for function _SYSTEM_Initialize
  1885  01D7                     _SYSTEM_Initialize:	
  1886                           
  1887                           ;mcc.c: 71: PIN_MANAGER_Initialize();
  1888                           
  1889                           ;incstack = 0
  1890                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1891  01D7  2151               	fcall	_PIN_MANAGER_Initialize
  1892                           
  1893                           ;mcc.c: 72: OSCILLATOR_Initialize();
  1894  01D8  21A4               	fcall	_OSCILLATOR_Initialize
  1895                           
  1896                           ;mcc.c: 73: WDT_Initialize();
  1897  01D9  21DB               	fcall	_WDT_Initialize
  1898                           
  1899                           ;mcc.c: 74: TMR0_Initialize();
  1900  01DA  298F               	ljmp	l1434
  1901  01DB                     __end_of_SYSTEM_Initialize:	
  1902                           
  1903                           	psect	text6
  1904  01DB                     __ptext6:	
  1905 ;; *************** function _WDT_Initialize *****************
  1906 ;; Defined at:
  1907 ;;		line 87 in file "mcc_generated_files/mcc.c"
  1908 ;; Parameters:    Size  Location     Type
  1909 ;;		None
  1910 ;; Auto vars:     Size  Location     Type
  1911 ;;		None
  1912 ;; Return value:  Size  Location     Type
  1913 ;;                  1    wreg      void 
  1914 ;; Registers used:
  1915 ;;		wreg
  1916 ;; Tracked objects:
  1917 ;;		On entry : B1F/2
  1918 ;;		On exit  : B1F/1
  1919 ;;		Unchanged: B00/0
  1920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1921 ;;      Params:         0       0       0       0
  1922 ;;      Locals:         0       0       0       0
  1923 ;;      Temps:          0       0       0       0
  1924 ;;      Totals:         0       0       0       0
  1925 ;;Total ram usage:        0 bytes
  1926 ;; Hardware stack levels used:    1
  1927 ;; Hardware stack levels required when called:    4
  1928 ;; This function calls:
  1929 ;;		Nothing
  1930 ;; This function is called by:
  1931 ;;		_SYSTEM_Initialize
  1932 ;; This function uses a non-reentrant model
  1933 ;;
  1934                           
  1935                           
  1936                           ;psect for function _WDT_Initialize
  1937  01DB                     _WDT_Initialize:	
  1938                           
  1939                           ;mcc.c: 90: WDTCON = 0x16;
  1940                           
  1941                           ;incstack = 0
  1942                           ; Regs used in _WDT_Initialize: [wreg]
  1943  01DB  3016               	movlw	22
  1944  01DC  0021               	movlb	1	; select bank1
  1945  01DD  0097               	movwf	23	;volatile
  1946  01DE  0008               	return
  1947  01DF                     __end_of_WDT_Initialize:	
  1948                           
  1949                           	psect	text7
  1950  018F                     __ptext7:	
  1951 ;; *************** function _TMR0_Initialize *****************
  1952 ;; Defined at:
  1953 ;;		line 63 in file "mcc_generated_files/tmr0.c"
  1954 ;; Parameters:    Size  Location     Type
  1955 ;;		None
  1956 ;; Auto vars:     Size  Location     Type
  1957 ;;		None
  1958 ;; Return value:  Size  Location     Type
  1959 ;;                  1    wreg      void 
  1960 ;; Registers used:
  1961 ;;		wreg, status,2
  1962 ;; Tracked objects:
  1963 ;;		On entry : B1F/1
  1964 ;;		On exit  : B1F/0
  1965 ;;		Unchanged: B00/0
  1966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1967 ;;      Params:         0       0       0       0
  1968 ;;      Locals:         0       0       0       0
  1969 ;;      Temps:          0       0       0       0
  1970 ;;      Totals:         0       0       0       0
  1971 ;;Total ram usage:        0 bytes
  1972 ;; Hardware stack levels used:    1
  1973 ;; Hardware stack levels required when called:    4
  1974 ;; This function calls:
  1975 ;;		Nothing
  1976 ;; This function is called by:
  1977 ;;		_SYSTEM_Initialize
  1978 ;; This function uses a non-reentrant model
  1979 ;;
  1980                           
  1981                           
  1982                           ;psect for function _TMR0_Initialize
  1983  018F                     _TMR0_Initialize:	
  1984  018F                     l1434:	
  1985                           ;incstack = 0
  1986                           ; Regs used in _TMR0_Initialize: [wreg+status,2]
  1987                           
  1988                           
  1989                           ;tmr0.c: 68: OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | 0xD1 & 0x3F);
  1990  018F  0815               	movf	21,w	;volatile
  1991  0190  39C0               	andlw	192
  1992  0191  3811               	iorlw	17
  1993  0192  0095               	movwf	21	;volatile
  1994                           
  1995                           ;tmr0.c: 71: TMR0 = 0x06;
  1996  0193  3006               	movlw	6
  1997  0194  0020               	movlb	0	; select bank0
  1998  0195  0095               	movwf	21	;volatile
  1999                           
  2000                           ;tmr0.c: 74: timer0ReloadVal= 0x06;
  2001  0196  00A6               	movwf	_timer0ReloadVal	;volatile
  2002                           
  2003                           ;tmr0.c: 77: INTCONbits.TMR0IF = 0;
  2004  0197  110B               	bcf	11,2	;volatile
  2005                           
  2006                           ;tmr0.c: 80: INTCONbits.TMR0IE = 1;
  2007  0198  168B               	bsf	11,5	;volatile
  2008  0199  0008               	return
  2009  019A                     __end_of_TMR0_Initialize:	
  2010                           
  2011                           	psect	text8
  2012  0151                     __ptext8:	
  2013 ;; *************** function _PIN_MANAGER_Initialize *****************
  2014 ;; Defined at:
  2015 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2016 ;; Parameters:    Size  Location     Type
  2017 ;;		None
  2018 ;; Auto vars:     Size  Location     Type
  2019 ;;		None
  2020 ;; Return value:  Size  Location     Type
  2021 ;;                  1    wreg      void 
  2022 ;; Registers used:
  2023 ;;		wreg, status,2, status,0, pclath, cstack
  2024 ;; Tracked objects:
  2025 ;;		On entry : B1F/0
  2026 ;;		On exit  : B1F/0
  2027 ;;		Unchanged: B00/0
  2028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2029 ;;      Params:         0       0       0       0
  2030 ;;      Locals:         0       0       0       0
  2031 ;;      Temps:          0       0       0       0
  2032 ;;      Totals:         0       0       0       0
  2033 ;;Total ram usage:        0 bytes
  2034 ;; Hardware stack levels used:    1
  2035 ;; Hardware stack levels required when called:    5
  2036 ;; This function calls:
  2037 ;;		_IOCAF2_SetInterruptHandler
  2038 ;;		_IOCAF3_SetInterruptHandler
  2039 ;; This function is called by:
  2040 ;;		_SYSTEM_Initialize
  2041 ;; This function uses a non-reentrant model
  2042 ;;
  2043                           
  2044                           
  2045                           ;psect for function _PIN_MANAGER_Initialize
  2046  0151                     _PIN_MANAGER_Initialize:	
  2047                           
  2048                           ;pin_manager.c: 60: LATA = 0x00;
  2049                           
  2050                           ;incstack = 0
  2051                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2052  0151  0022               	movlb	2	; select bank2
  2053  0152  018C               	clrf	12	;volatile
  2054                           
  2055                           ;pin_manager.c: 65: TRISA = 0x3F;
  2056  0153  303F               	movlw	63
  2057  0154  0021               	movlb	1	; select bank1
  2058  0155  008C               	movwf	12	;volatile
  2059                           
  2060                           ;pin_manager.c: 70: ANSELA = 0x13;
  2061  0156  3013               	movlw	19
  2062  0157  0023               	movlb	3	; select bank3
  2063  0158  008C               	movwf	12	;volatile
  2064                           
  2065                           ;pin_manager.c: 75: WPUA = 0x0C;
  2066  0159  300C               	movlw	12
  2067  015A  0024               	movlb	4	; select bank4
  2068  015B  008C               	movwf	12	;volatile
  2069                           
  2070                           ;pin_manager.c: 76: OPTION_REGbits.nWPUEN = 0;
  2071  015C  0021               	movlb	1	; select bank1
  2072  015D  1395               	bcf	21,7	;volatile
  2073                           
  2074                           ;pin_manager.c: 81: ODCONA = 0x00;
  2075  015E  0025               	movlb	5	; select bank5
  2076  015F  018C               	clrf	12	;volatile
  2077                           
  2078                           ;pin_manager.c: 86: APFCON = 0x00;
  2079  0160  0022               	movlb	2	; select bank2
  2080  0161  019D               	clrf	29	;volatile
  2081                           
  2082                           ;pin_manager.c: 92: IOCAFbits.IOCAF2 = 0;
  2083  0162  0027               	movlb	7	; select bank7
  2084  0163  1113               	bcf	19,2	;volatile
  2085                           
  2086                           ;pin_manager.c: 93: IOCAFbits.IOCAF3 = 0;
  2087  0164  1193               	bcf	19,3	;volatile
  2088                           
  2089                           ;pin_manager.c: 95: IOCANbits.IOCAN2 = 1;
  2090  0165  1512               	bsf	18,2	;volatile
  2091                           
  2092                           ;pin_manager.c: 96: IOCANbits.IOCAN3 = 1;
  2093  0166  1592               	bsf	18,3	;volatile
  2094                           
  2095                           ;pin_manager.c: 98: IOCAPbits.IOCAP2 = 1;
  2096  0167  1511               	bsf	17,2	;volatile
  2097                           
  2098                           ;pin_manager.c: 99: IOCAPbits.IOCAP3 = 1;
  2099  0168  1591               	bsf	17,3	;volatile
  2100                           
  2101                           ;pin_manager.c: 102: IOCAF2_SetInterruptHandler(IOCAF2_DefaultInterruptHandler);
  2102  0169  30E5               	movlw	low _IOCAF2_DefaultInterruptHandler
  2103  016A  00F6               	movwf	IOCAF2_SetInterruptHandler@InterruptHandler
  2104  016B  3001               	movlw	high _IOCAF2_DefaultInterruptHandler
  2105  016C  00F7               	movwf	IOCAF2_SetInterruptHandler@InterruptHandler+1
  2106  016D  21BE               	fcall	_IOCAF2_SetInterruptHandler
  2107                           
  2108                           ;pin_manager.c: 103: IOCAF3_SetInterruptHandler(IOCAF3_DefaultInterruptHandler);
  2109  016E  30E4               	movlw	low _IOCAF3_DefaultInterruptHandler
  2110  016F  00F6               	movwf	IOCAF3_SetInterruptHandler@InterruptHandler
  2111  0170  3001               	movlw	high _IOCAF3_DefaultInterruptHandler
  2112  0171  00F7               	movwf	IOCAF3_SetInterruptHandler@InterruptHandler+1
  2113  0172  21C9               	fcall	_IOCAF3_SetInterruptHandler
  2114                           
  2115                           ;pin_manager.c: 106: INTCONbits.IOCIE = 1;
  2116  0173  158B               	bsf	11,3	;volatile
  2117  0174  0008               	return
  2118  0175                     __end_of_PIN_MANAGER_Initialize:	
  2119                           
  2120                           	psect	text9
  2121  01C9                     __ptext9:	
  2122 ;; *************** function _IOCAF3_SetInterruptHandler *****************
  2123 ;; Defined at:
  2124 ;;		line 175 in file "mcc_generated_files/pin_manager.c"
  2125 ;; Parameters:    Size  Location     Type
  2126 ;;  InterruptHan    2    1[COMMON] PTR FTN()void 
  2127 ;;		 -> IOCAF3_DefaultInterruptHandler(1), 
  2128 ;; Auto vars:     Size  Location     Type
  2129 ;;		None
  2130 ;; Return value:  Size  Location     Type
  2131 ;;                  1    wreg      void 
  2132 ;; Registers used:
  2133 ;;		wreg
  2134 ;; Tracked objects:
  2135 ;;		On entry : B1F/0
  2136 ;;		On exit  : B1F/0
  2137 ;;		Unchanged: B00/0
  2138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2139 ;;      Params:         2       0       0       0
  2140 ;;      Locals:         0       0       0       0
  2141 ;;      Temps:          0       0       0       0
  2142 ;;      Totals:         2       0       0       0
  2143 ;;Total ram usage:        2 bytes
  2144 ;; Hardware stack levels used:    1
  2145 ;; Hardware stack levels required when called:    4
  2146 ;; This function calls:
  2147 ;;		Nothing
  2148 ;; This function is called by:
  2149 ;;		_PIN_MANAGER_Initialize
  2150 ;; This function uses a non-reentrant model
  2151 ;;
  2152                           
  2153                           
  2154                           ;psect for function _IOCAF3_SetInterruptHandler
  2155  01C9                     _IOCAF3_SetInterruptHandler:	
  2156                           
  2157                           ;pin_manager.c: 176: IOCAF3_InterruptHandler = InterruptHandler;
  2158                           
  2159                           ;incstack = 0
  2160                           ; Regs used in _IOCAF3_SetInterruptHandler: [wreg]
  2161  01C9  0877               	movf	IOCAF3_SetInterruptHandler@InterruptHandler+1,w
  2162  01CA  00A3               	movwf	_IOCAF3_InterruptHandler+1
  2163  01CB  0876               	movf	IOCAF3_SetInterruptHandler@InterruptHandler,w
  2164  01CC  00A2               	movwf	_IOCAF3_InterruptHandler
  2165  01CD  0008               	return
  2166  01CE                     __end_of_IOCAF3_SetInterruptHandler:	
  2167                           
  2168                           	psect	text10
  2169  01BE                     __ptext10:	
  2170 ;; *************** function _IOCAF2_SetInterruptHandler *****************
  2171 ;; Defined at:
  2172 ;;		line 145 in file "mcc_generated_files/pin_manager.c"
  2173 ;; Parameters:    Size  Location     Type
  2174 ;;  InterruptHan    2    1[COMMON] PTR FTN()void 
  2175 ;;		 -> IOCAF2_DefaultInterruptHandler(1), 
  2176 ;; Auto vars:     Size  Location     Type
  2177 ;;		None
  2178 ;; Return value:  Size  Location     Type
  2179 ;;                  1    wreg      void 
  2180 ;; Registers used:
  2181 ;;		wreg
  2182 ;; Tracked objects:
  2183 ;;		On entry : B1F/7
  2184 ;;		On exit  : B1F/0
  2185 ;;		Unchanged: B00/0
  2186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2187 ;;      Params:         2       0       0       0
  2188 ;;      Locals:         0       0       0       0
  2189 ;;      Temps:          0       0       0       0
  2190 ;;      Totals:         2       0       0       0
  2191 ;;Total ram usage:        2 bytes
  2192 ;; Hardware stack levels used:    1
  2193 ;; Hardware stack levels required when called:    4
  2194 ;; This function calls:
  2195 ;;		Nothing
  2196 ;; This function is called by:
  2197 ;;		_PIN_MANAGER_Initialize
  2198 ;; This function uses a non-reentrant model
  2199 ;;
  2200                           
  2201                           
  2202                           ;psect for function _IOCAF2_SetInterruptHandler
  2203  01BE                     _IOCAF2_SetInterruptHandler:	
  2204                           
  2205                           ;pin_manager.c: 146: IOCAF2_InterruptHandler = InterruptHandler;
  2206                           
  2207                           ;incstack = 0
  2208                           ; Regs used in _IOCAF2_SetInterruptHandler: [wreg]
  2209  01BE  0877               	movf	IOCAF2_SetInterruptHandler@InterruptHandler+1,w
  2210  01BF  0020               	movlb	0	; select bank0
  2211  01C0  00A5               	movwf	_IOCAF2_InterruptHandler+1
  2212  01C1  0876               	movf	IOCAF2_SetInterruptHandler@InterruptHandler,w
  2213  01C2  00A4               	movwf	_IOCAF2_InterruptHandler
  2214  01C3  0008               	return
  2215  01C4                     __end_of_IOCAF2_SetInterruptHandler:	
  2216                           
  2217                           	psect	text11
  2218  01A4                     __ptext11:	
  2219 ;; *************** function _OSCILLATOR_Initialize *****************
  2220 ;; Defined at:
  2221 ;;		line 77 in file "mcc_generated_files/mcc.c"
  2222 ;; Parameters:    Size  Location     Type
  2223 ;;		None
  2224 ;; Auto vars:     Size  Location     Type
  2225 ;;		None
  2226 ;; Return value:  Size  Location     Type
  2227 ;;                  1    wreg      void 
  2228 ;; Registers used:
  2229 ;;		wreg, status,2
  2230 ;; Tracked objects:
  2231 ;;		On entry : B1F/0
  2232 ;;		On exit  : B1F/2
  2233 ;;		Unchanged: B00/0
  2234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2235 ;;      Params:         0       0       0       0
  2236 ;;      Locals:         0       0       0       0
  2237 ;;      Temps:          0       0       0       0
  2238 ;;      Totals:         0       0       0       0
  2239 ;;Total ram usage:        0 bytes
  2240 ;; Hardware stack levels used:    1
  2241 ;; Hardware stack levels required when called:    4
  2242 ;; This function calls:
  2243 ;;		Nothing
  2244 ;; This function is called by:
  2245 ;;		_SYSTEM_Initialize
  2246 ;; This function uses a non-reentrant model
  2247 ;;
  2248                           
  2249                           
  2250                           ;psect for function _OSCILLATOR_Initialize
  2251  01A4                     _OSCILLATOR_Initialize:	
  2252                           
  2253                           ;mcc.c: 80: OSCCON = 0x78;
  2254                           
  2255                           ;incstack = 0
  2256                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2257  01A4  3078               	movlw	120
  2258  01A5  0021               	movlb	1	; select bank1
  2259  01A6  0099               	movwf	25	;volatile
  2260                           
  2261                           ;mcc.c: 82: OSCTUNE = 0x00;
  2262  01A7  0198               	clrf	24	;volatile
  2263                           
  2264                           ;mcc.c: 84: BORCON = 0x00;
  2265  01A8  0022               	movlb	2	; select bank2
  2266  01A9  0196               	clrf	22	;volatile
  2267  01AA  0008               	return
  2268  01AB                     __end_of_OSCILLATOR_Initialize:	
  2269                           
  2270                           	psect	intentry
  2271  0004                     __pintentry:	
  2272 ;; *************** function _INTERRUPT_InterruptManager *****************
  2273 ;; Defined at:
  2274 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  2275 ;; Parameters:    Size  Location     Type
  2276 ;;		None
  2277 ;; Auto vars:     Size  Location     Type
  2278 ;;		None
  2279 ;; Return value:  Size  Location     Type
  2280 ;;                  1    wreg      void 
  2281 ;; Registers used:
  2282 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2283 ;; Tracked objects:
  2284 ;;		On entry : 0/0
  2285 ;;		On exit  : 0/0
  2286 ;;		Unchanged: 0/0
  2287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2288 ;;      Params:         0       0       0       0
  2289 ;;      Locals:         0       0       0       0
  2290 ;;      Temps:          0       0       0       0
  2291 ;;      Totals:         0       0       0       0
  2292 ;;Total ram usage:        0 bytes
  2293 ;; Hardware stack levels used:    1
  2294 ;; Hardware stack levels required when called:    3
  2295 ;; This function calls:
  2296 ;;		_PIN_MANAGER_IOC
  2297 ;;		_TMR0_ISR
  2298 ;; This function is called by:
  2299 ;;		Interrupt level 1
  2300 ;; This function uses a non-reentrant model
  2301 ;;
  2302                           
  2303  0004                     _INTERRUPT_InterruptManager:	
  2304                           
  2305                           ;incstack = 0
  2306  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  2307                           
  2308                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2309  0005  3180               	pagesel	$
  2310                           
  2311                           ;interrupt_manager.c: 54: if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
  2312  0006  1A8B               	btfsc	11,5	;volatile
  2313  0007  1D0B               	btfss	11,2	;volatile
  2314  0008  280B               	goto	i1l102
  2315                           
  2316                           ;interrupt_manager.c: 55: {
  2317                           ;interrupt_manager.c: 56: TMR0_ISR();
  2318  0009  21CE               	fcall	_TMR0_ISR
  2319                           
  2320                           ;interrupt_manager.c: 57: }
  2321  000A  280F               	goto	i1l106
  2322  000B                     i1l102:	
  2323                           
  2324                           ;interrupt_manager.c: 58: else if(INTCONbits.IOCIE == 1 && INTCONbits.IOCIF == 1)
  2325  000B  198B               	btfsc	11,3	;volatile
  2326  000C  1C0B               	btfss	11,0	;volatile
  2327  000D  280F               	goto	i1l106
  2328                           
  2329                           ;interrupt_manager.c: 59: {
  2330                           ;interrupt_manager.c: 60: PIN_MANAGER_IOC();
  2331  000E  21AB               	fcall	_PIN_MANAGER_IOC
  2332  000F                     i1l106:	
  2333                           ;interrupt_manager.c: 61: }
  2334                           
  2335  000F  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2336  0010  0009               	retfie
  2337  0011                     __end_of_INTERRUPT_InterruptManager:	
  2338                           
  2339                           	psect	text13
  2340  01CE                     __ptext13:	
  2341 ;; *************** function _TMR0_ISR *****************
  2342 ;; Defined at:
  2343 ;;		line 104 in file "mcc_generated_files/tmr0.c"
  2344 ;; Parameters:    Size  Location     Type
  2345 ;;		None
  2346 ;; Auto vars:     Size  Location     Type
  2347 ;;		None
  2348 ;; Return value:  Size  Location     Type
  2349 ;;                  1    wreg      void 
  2350 ;; Registers used:
  2351 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2352 ;; Tracked objects:
  2353 ;;		On entry : 0/0
  2354 ;;		On exit  : 0/0
  2355 ;;		Unchanged: 0/0
  2356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2357 ;;      Params:         0       0       0       0
  2358 ;;      Locals:         0       0       0       0
  2359 ;;      Temps:          0       0       0       0
  2360 ;;      Totals:         0       0       0       0
  2361 ;;Total ram usage:        0 bytes
  2362 ;; Hardware stack levels used:    1
  2363 ;; Hardware stack levels required when called:    2
  2364 ;; This function calls:
  2365 ;;		_TMR0_CallBack
  2366 ;; This function is called by:
  2367 ;;		_INTERRUPT_InterruptManager
  2368 ;; This function uses a non-reentrant model
  2369 ;;
  2370                           
  2371                           
  2372                           ;psect for function _TMR0_ISR
  2373  01CE                     _TMR0_ISR:	
  2374                           
  2375                           ;tmr0.c: 108: INTCONbits.TMR0IF = 0;
  2376                           
  2377                           ;incstack = 0
  2378                           ; Regs used in _TMR0_ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2379  01CE  110B               	bcf	11,2	;volatile
  2380                           
  2381                           ;tmr0.c: 110: TMR0 = timer0ReloadVal;
  2382  01CF  0020               	movlb	0	; select bank0
  2383  01D0  0826               	movf	_timer0ReloadVal,w	;volatile
  2384  01D1  0095               	movwf	21	;volatile
  2385                           
  2386                           ;tmr0.c: 114: TMR0_CallBack();
  2387  01D2  299A               	ljmp	i1l1136
  2388  01D3                     __end_of_TMR0_ISR:	
  2389                           
  2390                           	psect	text14
  2391  019A                     __ptext14:	
  2392 ;; *************** function _TMR0_CallBack *****************
  2393 ;; Defined at:
  2394 ;;		line 119 in file "mcc_generated_files/tmr0.c"
  2395 ;; Parameters:    Size  Location     Type
  2396 ;;		None
  2397 ;; Auto vars:     Size  Location     Type
  2398 ;;		None
  2399 ;; Return value:  Size  Location     Type
  2400 ;;                  1    wreg      void 
  2401 ;; Registers used:
  2402 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2403 ;; Tracked objects:
  2404 ;;		On entry : 1F/0
  2405 ;;		On exit  : 0/0
  2406 ;;		Unchanged: 0/0
  2407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2408 ;;      Params:         0       0       0       0
  2409 ;;      Locals:         0       0       0       0
  2410 ;;      Temps:          0       0       0       0
  2411 ;;      Totals:         0       0       0       0
  2412 ;;Total ram usage:        0 bytes
  2413 ;; Hardware stack levels used:    1
  2414 ;; Hardware stack levels required when called:    1
  2415 ;; This function calls:
  2416 ;;		Absolute function
  2417 ;;		_CharlieplexLEDs
  2418 ;; This function is called by:
  2419 ;;		_TMR0_ISR
  2420 ;; This function uses a non-reentrant model
  2421 ;;
  2422                           
  2423                           
  2424                           ;psect for function _TMR0_CallBack
  2425  019A                     _TMR0_CallBack:	
  2426  019A                     i1l1136:	
  2427                           ;incstack = 0
  2428                           ; Regs used in _TMR0_CallBack: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2429                           
  2430                           
  2431                           ;tmr0.c: 123: if(TMR0_InterruptHandler)
  2432  019A  0820               	movf	_TMR0_InterruptHandler,w
  2433  019B  0421               	iorwf	_TMR0_InterruptHandler+1,w
  2434  019C  1903               	btfsc	3,2
  2435  019D  0008               	return
  2436                           
  2437                           ;tmr0.c: 124: {
  2438                           ;tmr0.c: 125: TMR0_InterruptHandler();
  2439  019E  0821               	movf	_TMR0_InterruptHandler+1,w
  2440  019F  008A               	movwf	10
  2441  01A0  0820               	movf	_TMR0_InterruptHandler,w
  2442  01A1  000A               	callw
  2443  01A2  3181               	pagesel	$
  2444  01A3  0008               	return
  2445  01A4                     __end_of_TMR0_CallBack:	
  2446                           
  2447                           	psect	text15
  2448  00F3                     __ptext15:	
  2449 ;; *************** function _CharlieplexLEDs *****************
  2450 ;; Defined at:
  2451 ;;		line 126 in file "main.c"
  2452 ;; Parameters:    Size  Location     Type
  2453 ;;		None
  2454 ;; Auto vars:     Size  Location     Type
  2455 ;;  PortTemp        1    0[COMMON] unsigned char 
  2456 ;; Return value:  Size  Location     Type
  2457 ;;                  1    wreg      void 
  2458 ;; Registers used:
  2459 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2460 ;; Tracked objects:
  2461 ;;		On entry : 1F/0
  2462 ;;		On exit  : 1F/0
  2463 ;;		Unchanged: 0/0
  2464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2465 ;;      Params:         0       0       0       0
  2466 ;;      Locals:         1       0       0       0
  2467 ;;      Temps:          0       0       0       0
  2468 ;;      Totals:         1       0       0       0
  2469 ;;Total ram usage:        1 bytes
  2470 ;; Hardware stack levels used:    1
  2471 ;; This function calls:
  2472 ;;		Nothing
  2473 ;; This function is called by:
  2474 ;;		_main
  2475 ;;		_TMR0_CallBack
  2476 ;; This function uses a non-reentrant model
  2477 ;;
  2478                           
  2479                           
  2480                           ;psect for function _CharlieplexLEDs
  2481  00F3                     _CharlieplexLEDs:	
  2482                           
  2483                           ;main.c: 128: uint8_t PortTemp = 0;
  2484                           
  2485                           ;incstack = 0
  2486                           ; Regs used in _CharlieplexLEDs: [wreg-fsr0h+status,2+status,0]
  2487  00F3  01F5               	clrf	CharlieplexLEDs@PortTemp
  2488                           
  2489                           ;main.c: 130: if (LeftTime)
  2490  00F4  0872               	movf	_LeftTime,w	;volatile
  2491  00F5  0473               	iorwf	_LeftTime+1,w	;volatile
  2492  00F6  1903               	btfsc	3,2
  2493  00F7  28FC               	goto	i1l1020
  2494                           
  2495                           ;main.c: 131: {
  2496                           ;main.c: 132: LeftTime--;
  2497  00F8  3001               	movlw	1
  2498  00F9  02F2               	subwf	_LeftTime,f	;volatile
  2499  00FA  3000               	movlw	0
  2500  00FB  3BF3               	subwfb	_LeftTime+1,f	;volatile
  2501  00FC                     i1l1020:	
  2502                           
  2503                           ;main.c: 133: }
  2504                           ;main.c: 134: if (RightTime)
  2505  00FC  0870               	movf	_RightTime,w	;volatile
  2506  00FD  0471               	iorwf	_RightTime+1,w	;volatile
  2507  00FE  1903               	btfsc	3,2
  2508  00FF  2904               	goto	i1l1024
  2509                           
  2510                           ;main.c: 135: {
  2511                           ;main.c: 136: RightTime--;
  2512  0100  3001               	movlw	1
  2513  0101  02F0               	subwf	_RightTime,f	;volatile
  2514  0102  3000               	movlw	0
  2515  0103  3BF1               	subwfb	_RightTime+1,f	;volatile
  2516  0104                     i1l1024:	
  2517                           
  2518                           ;main.c: 137: }
  2519                           ;main.c: 139: if (LEDOns)
  2520  0104  0874               	movf	_LEDOns,w	;volatile
  2521  0105  1D03               	btfss	3,2
  2522  0106  2934               	goto	i1l1068
  2523  0107  294B               	goto	i1l1078
  2524  0108                     i1l1028:	
  2525                           
  2526                           ;main.c: 144: TRISA = 0xDC;
  2527  0108  30DC               	movlw	220
  2528  0109  0021               	movlb	1	; select bank1
  2529  010A  008C               	movwf	12	;volatile
  2530                           
  2531                           ;main.c: 145: if (LEDOns & 0x08)
  2532  010B  1DF4               	btfss	_LEDOns,3	;volatile
  2533  010C  290F               	goto	i1l1034
  2534                           
  2535                           ;main.c: 146: {
  2536                           ;main.c: 147: PortTemp = 0x02;
  2537  010D  3002               	movlw	2
  2538  010E  00F5               	movwf	CharlieplexLEDs@PortTemp
  2539  010F                     i1l1034:	
  2540                           
  2541                           ;main.c: 148: }
  2542                           ;main.c: 149: if (LEDOns & 0x80)
  2543  010F  1FF4               	btfss	_LEDOns,7	;volatile
  2544  0110  2942               	goto	i1l1070
  2545                           
  2546                           ;main.c: 150: {
  2547                           ;main.c: 151: PortTemp |= 0x20;
  2548  0111  16F5               	bsf	CharlieplexLEDs@PortTemp,5
  2549  0112  2942               	goto	i1l1070
  2550  0113                     i1l1038:	
  2551                           
  2552                           ;main.c: 156: TRISA = 0xEC;
  2553  0113  30EC               	movlw	236
  2554  0114  0021               	movlb	1	; select bank1
  2555  0115  008C               	movwf	12	;volatile
  2556                           
  2557                           ;main.c: 157: if (LEDOns & 0x04)
  2558  0116  1D74               	btfss	_LEDOns,2	;volatile
  2559  0117  291A               	goto	i1l188
  2560                           
  2561                           ;main.c: 158: {
  2562                           ;main.c: 159: PortTemp = 0x01;
  2563  0118  01F5               	clrf	CharlieplexLEDs@PortTemp
  2564  0119  0AF5               	incf	CharlieplexLEDs@PortTemp,f
  2565  011A                     i1l188:	
  2566                           
  2567                           ;main.c: 160: }
  2568                           ;main.c: 161: if (LEDOns & 0x20)
  2569  011A  1EF4               	btfss	_LEDOns,5	;volatile
  2570  011B  2942               	goto	i1l1070
  2571                           
  2572                           ;main.c: 162: {
  2573                           ;main.c: 163: PortTemp |= 0x10;
  2574  011C  1675               	bsf	CharlieplexLEDs@PortTemp,4
  2575  011D  2942               	goto	i1l1070
  2576  011E                     i1l1046:	
  2577                           
  2578                           ;main.c: 168: TRISA = 0xCD;
  2579  011E  30CD               	movlw	205
  2580  011F  0021               	movlb	1	; select bank1
  2581  0120  008C               	movwf	12	;volatile
  2582                           
  2583                           ;main.c: 169: if (LEDOns & 0x02)
  2584  0121  1CF4               	btfss	_LEDOns,1	;volatile
  2585  0122  2925               	goto	i1l1052
  2586                           
  2587                           ;main.c: 170: {
  2588                           ;main.c: 171: PortTemp = 0x20;
  2589  0123  3020               	movlw	32
  2590  0124  00F5               	movwf	CharlieplexLEDs@PortTemp
  2591  0125                     i1l1052:	
  2592                           
  2593                           ;main.c: 172: }
  2594                           ;main.c: 173: if (LEDOns & 0x10)
  2595  0125  1E74               	btfss	_LEDOns,4	;volatile
  2596  0126  2942               	goto	i1l1070
  2597                           
  2598                           ;main.c: 174: {
  2599                           ;main.c: 175: PortTemp |= 0x02;
  2600  0127  14F5               	bsf	CharlieplexLEDs@PortTemp,1
  2601  0128  2942               	goto	i1l1070
  2602  0129                     i1l1056:	
  2603                           
  2604                           ;main.c: 180: TRISA = 0xCE;
  2605  0129  30CE               	movlw	206
  2606  012A  0021               	movlb	1	; select bank1
  2607  012B  008C               	movwf	12	;volatile
  2608                           
  2609                           ;main.c: 181: if (LEDOns & 0x01)
  2610  012C  1C74               	btfss	_LEDOns,0	;volatile
  2611  012D  2930               	goto	i1l1062
  2612                           
  2613                           ;main.c: 182: {
  2614                           ;main.c: 183: PortTemp = 0x10;
  2615  012E  3010               	movlw	16
  2616  012F  00F5               	movwf	CharlieplexLEDs@PortTemp
  2617  0130                     i1l1062:	
  2618                           
  2619                           ;main.c: 184: }
  2620                           ;main.c: 185: if (LEDOns & 0x40)
  2621  0130  1F74               	btfss	_LEDOns,6	;volatile
  2622  0131  2942               	goto	i1l1070
  2623                           
  2624                           ;main.c: 186: {
  2625                           ;main.c: 187: PortTemp |= 0x01;
  2626  0132  1475               	bsf	CharlieplexLEDs@PortTemp,0
  2627  0133  2942               	goto	i1l1070
  2628  0134                     i1l1068:	
  2629  0134  082B               	movf	_LEDState,w
  2630                           
  2631                           ; Switch size 1, requested type "space"
  2632                           ; Number of cases is 4, Range of values is 0 to 3
  2633                           ; switch strategies available:
  2634                           ; Name         Instructions Cycles
  2635                           ; simple_byte           13     7 (average)
  2636                           ; direct_byte           14     6 (fixed)
  2637                           ; jumptable            260     6 (fixed)
  2638                           ;	Chosen strategy is simple_byte
  2639  0135  3A00               	xorlw	0	; case 0
  2640  0136  1903               	skipnz
  2641  0137  2908               	goto	i1l1028
  2642  0138  3A01               	xorlw	1	; case 1
  2643  0139  1903               	skipnz
  2644  013A  2913               	goto	i1l1038
  2645  013B  3A03               	xorlw	3	; case 2
  2646  013C  1903               	skipnz
  2647  013D  291E               	goto	i1l1046
  2648  013E  3A01               	xorlw	1	; case 3
  2649  013F  1903               	skipnz
  2650  0140  2929               	goto	i1l1056
  2651  0141  2942               	goto	i1l1070
  2652  0142                     i1l1070:	
  2653                           
  2654                           ;main.c: 194: PORTA = PortTemp;
  2655  0142  0875               	movf	CharlieplexLEDs@PortTemp,w
  2656  0143  0020               	movlb	0	; select bank0
  2657  0144  008C               	movwf	12	;volatile
  2658  0145  3004               	movlw	4
  2659                           
  2660                           ;main.c: 196: LEDState++;
  2661  0146  0AAB               	incf	_LEDState,f
  2662                           
  2663                           ;main.c: 197: if (LEDState > LED_STATE_3)
  2664  0147  022B               	subwf	_LEDState,w
  2665  0148  1803               	btfsc	3,0
  2666                           
  2667                           ;main.c: 198: {
  2668                           ;main.c: 199: LEDState = LED_STATE_0;
  2669  0149  01AB               	clrf	_LEDState
  2670  014A  0008               	return
  2671  014B                     i1l1078:	
  2672                           
  2673                           ;main.c: 202: else
  2674                           ;main.c: 203: {
  2675                           ;main.c: 205: TRISA = 0xCC;
  2676  014B  30CC               	movlw	204
  2677  014C  0021               	movlb	1	; select bank1
  2678  014D  008C               	movwf	12	;volatile
  2679                           
  2680                           ;main.c: 206: PORTA = 0x00;
  2681  014E  0020               	movlb	0	; select bank0
  2682  014F  018C               	clrf	12	;volatile
  2683  0150  0008               	return
  2684  0151                     __end_of_CharlieplexLEDs:	
  2685                           
  2686                           	psect	text16
  2687  01AB                     __ptext16:	
  2688 ;; *************** function _PIN_MANAGER_IOC *****************
  2689 ;; Defined at:
  2690 ;;		line 110 in file "mcc_generated_files/pin_manager.c"
  2691 ;; Parameters:    Size  Location     Type
  2692 ;;		None
  2693 ;; Auto vars:     Size  Location     Type
  2694 ;;		None
  2695 ;; Return value:  Size  Location     Type
  2696 ;;                  1    wreg      void 
  2697 ;; Registers used:
  2698 ;;		wreg, status,2, status,0, pclath, cstack
  2699 ;; Tracked objects:
  2700 ;;		On entry : 0/0
  2701 ;;		On exit  : 1F/7
  2702 ;;		Unchanged: 0/0
  2703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2704 ;;      Params:         0       0       0       0
  2705 ;;      Locals:         0       0       0       0
  2706 ;;      Temps:          0       0       0       0
  2707 ;;      Totals:         0       0       0       0
  2708 ;;Total ram usage:        0 bytes
  2709 ;; Hardware stack levels used:    1
  2710 ;; Hardware stack levels required when called:    2
  2711 ;; This function calls:
  2712 ;;		_IOCAF2_ISR
  2713 ;;		_IOCAF3_ISR
  2714 ;; This function is called by:
  2715 ;;		_INTERRUPT_InterruptManager
  2716 ;; This function uses a non-reentrant model
  2717 ;;
  2718                           
  2719                           
  2720                           ;psect for function _PIN_MANAGER_IOC
  2721  01AB                     _PIN_MANAGER_IOC:	
  2722                           
  2723                           ;pin_manager.c: 113: if(IOCAFbits.IOCAF2 == 1)
  2724                           
  2725                           ;incstack = 0
  2726                           ; Regs used in _PIN_MANAGER_IOC: [wreg+status,2+status,0+pclath+cstack]
  2727  01AB  0027               	movlb	7	; select bank7
  2728  01AC  1D13               	btfss	19,2	;volatile
  2729  01AD  29AF               	goto	i1l1144
  2730                           
  2731                           ;pin_manager.c: 114: {
  2732                           ;pin_manager.c: 115: IOCAF2_ISR();
  2733  01AE  2182               	fcall	_IOCAF2_ISR
  2734  01AF                     i1l1144:	
  2735                           
  2736                           ;pin_manager.c: 116: }
  2737                           ;pin_manager.c: 119: if(IOCAFbits.IOCAF3 == 1)
  2738  01AF  1D93               	btfss	19,3	;volatile
  2739  01B0  0008               	return
  2740                           
  2741                           ;pin_manager.c: 120: {
  2742                           ;pin_manager.c: 121: IOCAF3_ISR();
  2743  01B1  2975               	ljmp	i1l1120
  2744  01B2                     __end_of_PIN_MANAGER_IOC:	
  2745                           
  2746                           	psect	text17
  2747  0175                     __ptext17:	
  2748 ;; *************** function _IOCAF3_ISR *****************
  2749 ;; Defined at:
  2750 ;;		line 160 in file "mcc_generated_files/pin_manager.c"
  2751 ;; Parameters:    Size  Location     Type
  2752 ;;		None
  2753 ;; Auto vars:     Size  Location     Type
  2754 ;;		None
  2755 ;; Return value:  Size  Location     Type
  2756 ;;                  1    wreg      void 
  2757 ;; Registers used:
  2758 ;;		wreg, status,2, status,0, pclath, cstack
  2759 ;; Tracked objects:
  2760 ;;		On entry : 1F/7
  2761 ;;		On exit  : 1F/7
  2762 ;;		Unchanged: 0/0
  2763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2764 ;;      Params:         0       0       0       0
  2765 ;;      Locals:         0       0       0       0
  2766 ;;      Temps:          0       0       0       0
  2767 ;;      Totals:         0       0       0       0
  2768 ;;Total ram usage:        0 bytes
  2769 ;; Hardware stack levels used:    1
  2770 ;; Hardware stack levels required when called:    1
  2771 ;; This function calls:
  2772 ;;		Absolute function
  2773 ;;		_IOCAF3_DefaultInterruptHandler
  2774 ;; This function is called by:
  2775 ;;		_PIN_MANAGER_IOC
  2776 ;; This function uses a non-reentrant model
  2777 ;;
  2778                           
  2779                           
  2780                           ;psect for function _IOCAF3_ISR
  2781  0175                     _IOCAF3_ISR:	
  2782  0175                     i1l1120:	
  2783                           ;incstack = 0
  2784                           ; Regs used in _IOCAF3_ISR: [wreg+status,2+status,0+pclath+cstack]
  2785                           
  2786                           
  2787                           ;pin_manager.c: 165: if(IOCAF3_InterruptHandler)
  2788  0175  0020               	movlb	0	; select bank0
  2789  0176  0822               	movf	_IOCAF3_InterruptHandler,w
  2790  0177  0423               	iorwf	_IOCAF3_InterruptHandler+1,w
  2791  0178  1903               	btfsc	3,2
  2792  0179  297F               	goto	i1l1124
  2793                           
  2794                           ;pin_manager.c: 166: {
  2795                           ;pin_manager.c: 167: IOCAF3_InterruptHandler();
  2796  017A  0823               	movf	_IOCAF3_InterruptHandler+1,w
  2797  017B  008A               	movwf	10
  2798  017C  0822               	movf	_IOCAF3_InterruptHandler,w
  2799  017D  000A               	callw
  2800  017E  3181               	pagesel	$
  2801  017F                     i1l1124:	
  2802                           
  2803                           ;pin_manager.c: 168: }
  2804                           ;pin_manager.c: 169: IOCAFbits.IOCAF3 = 0;
  2805  017F  0027               	movlb	7	; select bank7
  2806  0180  1193               	bcf	19,3	;volatile
  2807  0181  0008               	return
  2808  0182                     __end_of_IOCAF3_ISR:	
  2809                           
  2810                           	psect	text18
  2811  01E4                     __ptext18:	
  2812 ;; *************** function _IOCAF3_DefaultInterruptHandler *****************
  2813 ;; Defined at:
  2814 ;;		line 182 in file "mcc_generated_files/pin_manager.c"
  2815 ;; Parameters:    Size  Location     Type
  2816 ;;		None
  2817 ;; Auto vars:     Size  Location     Type
  2818 ;;		None
  2819 ;; Return value:  Size  Location     Type
  2820 ;;                  1    wreg      void 
  2821 ;; Registers used:
  2822 ;;		None
  2823 ;; Tracked objects:
  2824 ;;		On entry : 1F/0
  2825 ;;		On exit  : 1F/0
  2826 ;;		Unchanged: 1F/0
  2827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2828 ;;      Params:         0       0       0       0
  2829 ;;      Locals:         0       0       0       0
  2830 ;;      Temps:          0       0       0       0
  2831 ;;      Totals:         0       0       0       0
  2832 ;;Total ram usage:        0 bytes
  2833 ;; Hardware stack levels used:    1
  2834 ;; This function calls:
  2835 ;;		Nothing
  2836 ;; This function is called by:
  2837 ;;		_PIN_MANAGER_Initialize
  2838 ;;		_IOCAF3_ISR
  2839 ;; This function uses a non-reentrant model
  2840 ;;
  2841                           
  2842                           
  2843                           ;psect for function _IOCAF3_DefaultInterruptHandler
  2844  01E4                     _IOCAF3_DefaultInterruptHandler:	
  2845                           
  2846                           ;incstack = 0
  2847                           ; Regs used in _IOCAF3_DefaultInterruptHandler: []
  2848  01E4  0008               	return
  2849  01E5                     __end_of_IOCAF3_DefaultInterruptHandler:	
  2850                           
  2851                           	psect	text19
  2852  0182                     __ptext19:	
  2853 ;; *************** function _IOCAF2_ISR *****************
  2854 ;; Defined at:
  2855 ;;		line 130 in file "mcc_generated_files/pin_manager.c"
  2856 ;; Parameters:    Size  Location     Type
  2857 ;;		None
  2858 ;; Auto vars:     Size  Location     Type
  2859 ;;		None
  2860 ;; Return value:  Size  Location     Type
  2861 ;;                  1    wreg      void 
  2862 ;; Registers used:
  2863 ;;		wreg, status,2, status,0, pclath, cstack
  2864 ;; Tracked objects:
  2865 ;;		On entry : 1F/7
  2866 ;;		On exit  : 1F/7
  2867 ;;		Unchanged: 0/0
  2868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2869 ;;      Params:         0       0       0       0
  2870 ;;      Locals:         0       0       0       0
  2871 ;;      Temps:          0       0       0       0
  2872 ;;      Totals:         0       0       0       0
  2873 ;;Total ram usage:        0 bytes
  2874 ;; Hardware stack levels used:    1
  2875 ;; Hardware stack levels required when called:    1
  2876 ;; This function calls:
  2877 ;;		Absolute function
  2878 ;;		_IOCAF2_DefaultInterruptHandler
  2879 ;; This function is called by:
  2880 ;;		_PIN_MANAGER_IOC
  2881 ;; This function uses a non-reentrant model
  2882 ;;
  2883                           
  2884                           
  2885                           ;psect for function _IOCAF2_ISR
  2886  0182                     _IOCAF2_ISR:	
  2887                           
  2888                           ;pin_manager.c: 135: if(IOCAF2_InterruptHandler)
  2889                           
  2890                           ;incstack = 0
  2891                           ; Regs used in _IOCAF2_ISR: [wreg+status,2+status,0+pclath+cstack]
  2892  0182  0020               	movlb	0	; select bank0
  2893  0183  0824               	movf	_IOCAF2_InterruptHandler,w
  2894  0184  0425               	iorwf	_IOCAF2_InterruptHandler+1,w
  2895  0185  1903               	btfsc	3,2
  2896  0186  298C               	goto	i1l1118
  2897                           
  2898                           ;pin_manager.c: 136: {
  2899                           ;pin_manager.c: 137: IOCAF2_InterruptHandler();
  2900  0187  0825               	movf	_IOCAF2_InterruptHandler+1,w
  2901  0188  008A               	movwf	10
  2902  0189  0824               	movf	_IOCAF2_InterruptHandler,w
  2903  018A  000A               	callw
  2904  018B  3181               	pagesel	$
  2905  018C                     i1l1118:	
  2906                           
  2907                           ;pin_manager.c: 138: }
  2908                           ;pin_manager.c: 139: IOCAFbits.IOCAF2 = 0;
  2909  018C  0027               	movlb	7	; select bank7
  2910  018D  1113               	bcf	19,2	;volatile
  2911  018E  0008               	return
  2912  018F                     __end_of_IOCAF2_ISR:	
  2913                           
  2914                           	psect	text20
  2915  01E5                     __ptext20:	
  2916 ;; *************** function _IOCAF2_DefaultInterruptHandler *****************
  2917 ;; Defined at:
  2918 ;;		line 152 in file "mcc_generated_files/pin_manager.c"
  2919 ;; Parameters:    Size  Location     Type
  2920 ;;		None
  2921 ;; Auto vars:     Size  Location     Type
  2922 ;;		None
  2923 ;; Return value:  Size  Location     Type
  2924 ;;                  1    wreg      void 
  2925 ;; Registers used:
  2926 ;;		None
  2927 ;; Tracked objects:
  2928 ;;		On entry : 1F/0
  2929 ;;		On exit  : 1F/0
  2930 ;;		Unchanged: 1F/0
  2931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2932 ;;      Params:         0       0       0       0
  2933 ;;      Locals:         0       0       0       0
  2934 ;;      Temps:          0       0       0       0
  2935 ;;      Totals:         0       0       0       0
  2936 ;;Total ram usage:        0 bytes
  2937 ;; Hardware stack levels used:    1
  2938 ;; This function calls:
  2939 ;;		Nothing
  2940 ;; This function is called by:
  2941 ;;		_PIN_MANAGER_Initialize
  2942 ;;		_IOCAF2_ISR
  2943 ;; This function uses a non-reentrant model
  2944 ;;
  2945                           
  2946                           
  2947                           ;psect for function _IOCAF2_DefaultInterruptHandler
  2948  01E5                     _IOCAF2_DefaultInterruptHandler:	
  2949                           
  2950                           ;incstack = 0
  2951                           ; Regs used in _IOCAF2_DefaultInterruptHandler: []
  2952  01E5  0008               	return
  2953  01E6                     __end_of_IOCAF2_DefaultInterruptHandler:	
  2954  007E                     btemp	set	126	;btemp
  2955  007E                     int$flags	set	126
  2956  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         6
    Persistent  7
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80      4      12
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CharlieplexLEDs(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CharlieplexLEDs(), Absolute function(), 

    IOCAF3_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCAF3_DefaultInterruptHandler(), 

    IOCAF3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), IOCAF3_DefaultInterruptHandler(), 

    IOCAF2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCAF2_DefaultInterruptHandler(), 

    IOCAF2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), IOCAF2_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _main->_TMR0_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCAF2_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCAF3_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR0_CallBack->_CharlieplexLEDs

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0     584
                                              3 COMMON     2     2      0
                                              0 BANK0      4     4      0
                  _SYSTEM_Initialize
                      _SetAllLEDsOff
                          _SetLEDOff
                           _SetLEDOn
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2      96
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SetLEDOn                                             1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SetLEDOff                                            1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SetAllLEDsOff                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     192
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     192
         _IOCAF2_SetInterruptHandler
         _IOCAF3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCAF3_SetInterruptHandler                           2     0      2      96
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _IOCAF2_SetInterruptHandler                           2     0      2      96
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0      31
                    _PIN_MANAGER_IOC
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0      31
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (6) _TMR0_CallBack                                        0     0      0      31
                   Absolute function *
                    _CharlieplexLEDs *
 ---------------------------------------------------------------------------------
 (7) _CharlieplexLEDs                                      1     1      0      31
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _PIN_MANAGER_IOC                                      0     0      0       0
                         _IOCAF2_ISR
                         _IOCAF3_ISR
 ---------------------------------------------------------------------------------
 (6) _IOCAF3_ISR                                           0     0      0       0
                   Absolute function *
     _IOCAF3_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _IOCAF3_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _IOCAF2_ISR                                           0     0      0       0
                   Absolute function *
     _IOCAF2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _IOCAF2_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCAF2_SetInterruptHandler
       _IOCAF3_SetInterruptHandler
     _TMR0_Initialize
     _WDT_Initialize
   _SetAllLEDsOff
   _SetLEDOff
   _SetLEDOn
   _TMR0_SetInterruptHandler

 _INTERRUPT_InterruptManager (ROOT)
   _PIN_MANAGER_IOC
     _IOCAF2_ISR
       Absolute function(Fake) *
       _IOCAF2_DefaultInterruptHandler *
     _IOCAF3_ISR
       Absolute function(Fake) *
       _IOCAF3_DefaultInterruptHandler *
   _TMR0_ISR
     _TMR0_CallBack
       Absolute function(Fake) *
       _CharlieplexLEDs *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      5       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      16       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      4       C       6       15.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      16      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sun Apr 15 07:26:24 2018

                                         pc 0002                                 __CFG_CP$OFF 0000  
                           _timer0ReloadVal 0026                    main@LastRightButtonState 0028  
                                       l222 00BB                                         l240 00EE  
                                       l234 00C2                                         l237 00CD  
                                       u917 00DD                                __CFG_BORV$LO 0000  
                                       wreg 0009          __end_of_IOCAF2_SetInterruptHandler 01C4  
                _IOCAF2_SetInterruptHandler 01BE                                        S1676 01B2  
                                      S1678 01B8                                __CFG_LVP$OFF 0000  
                                      l1510 007A                                        l1434 018F  
                                      l1530 0095                                        l1522 008A  
                                      l1514 0081                                        l1506 0068  
                                      l1508 0072                               main@LeftState 0029  
                                      l1470 0031                                        l1552 00C5  
                                      l1554 00C6                                        l1538 00A2  
                                      l1490 004C                                        l1482 0041  
                                      l1474 0038                                        l1546 00B1  
                                      l1562 00CF                                        l1466 0027  
                                      l1468 0029                                        l1498 0059  
                                      _LATA 010C                                        _TMR0 0015  
                                      _WPUA 020C                                __CFG_WRT$OFF 0000  
                                      _main 001C                                        fsr0l 0004  
                                      btemp 007E                                        start 0011  
                   __end_of_TMR0_Initialize 019A              __size_of_OSCILLATOR_Initialize 0007  
                       __size_of_IOCAF2_ISR 000D                         __size_of_IOCAF3_ISR 000D  
             __end_of_OSCILLATOR_Initialize 01AB                                       ?_main 0075  
                             __CFG_WDTE$OFF 0000                                       i1l102 000B  
                                     i1l106 000F                                       i1l188 011A  
                                     _PORTA 000C                                       _TRISA 008C  
         __size_of_TMR0_SetInterruptHandler 0005                   ?_TMR0_SetInterruptHandler 0076  
                          __end_of_TMR0_ISR 01D3                     __end_of_PIN_MANAGER_IOC 01B2  
                            _WDT_Initialize 01DB                              __CFG_BOREN$OFF 0000  
                                     pclath 000A                                       status 0003  
                                     wtemp0 007E                                 SetLEDOn@LED 0076  
                            __CFG_MCLRE$OFF 0000                             __initialization 0012  
                              __end_of_main 00F3                            __end_of_SetLEDOn 01E2  
               ?_INTERRUPT_InterruptManager 0075                                      ??_main 0078  
                            main@RightState 002A                              __CFG_PLLEN$OFF 0000  
                    __end_of_WDT_Initialize 01DF                      __size_of_SetAllLEDsOff 0002  
              ??_IOCAF3_SetInterruptHandler 0078                                      _APFCON 011D  
                                    _ANSELA 018C                                      _BORCON 0116  
                                    i1l1020 00FC                                      i1l1120 0175  
                                    i1l1024 0104                                      i1l1034 010F  
                                    i1l1124 017F                                      i1l1052 0125  
                                    i1l1028 0108                                      i1l1118 018C  
                                    i1l1062 0130                                      i1l1046 011E  
                                    i1l1038 0113                                      i1l1070 0142  
                                    i1l1144 01AF                                      i1l1056 0129  
                                    i1l1136 019A                                      i1l1068 0134  
                                    i1l1078 014B                                      _ODCONA 028C  
                                    _LEDOns 0074                                      _OSCCON 0099  
                                    _WDTCON 0097                          __size_of_SetLEDOff 0004  
                            __CFG_PWRTE$OFF 0000                              __CFG_STVREN$ON 0000  
                          ?_TMR0_Initialize 0075         __size_of_IOCAF3_SetInterruptHandler 0005  
                           ?_WDT_Initialize 0075                       __end_of_TMR0_CallBack 01A4  
  TMR0_SetInterruptHandler@InterruptHandler 0076  IOCAF3_SetInterruptHandler@InterruptHandler 0076  
IOCAF2_SetInterruptHandler@InterruptHandler 0076                            ?_PIN_MANAGER_IOC 0075  
                              ??_IOCAF2_ISR 0075                     CharlieplexLEDs@PortTemp 0075  
                              ??_IOCAF3_ISR 0075                           _SYSTEM_Initialize 01D7  
                   __end_of__initialization 0019                     main@LastLeftButtonState 0027  
                        ?_SYSTEM_Initialize 0075                                SetLEDOff@LED 0076  
                             _SetAllLEDsOff 01E2                              __pcstackCOMMON 0075  
                       ??_SYSTEM_Initialize 0078                                   ?_TMR0_ISR 0075  
                        __end_of_IOCAF2_ISR 018F                          __end_of_IOCAF3_ISR 0182  
                         __end_of_SetLEDOff 01D7                              _OPTION_REGbits 0095  
               ?_IOCAF2_SetInterruptHandler 0076            ??_IOCAF2_DefaultInterruptHandler 0075  
           ?_IOCAF2_DefaultInterruptHandler 0075                   __end_of_SYSTEM_Initialize 01DB  
                                __pbssBANK0 002B                                   ?_SetLEDOn 0075  
                  __size_of_CharlieplexLEDs 005E                              ?_SetAllLEDsOff 0075  
                                __pmaintext 001C            __end_of_TMR0_SetInterruptHandler 01C9  
                                ??_TMR0_ISR 0076                                  __pintentry 0004  
        __end_of_IOCAF3_SetInterruptHandler 01CE                  _IOCAF3_SetInterruptHandler 01C9  
                                   _OSCTUNE 0098                                  ??_SetLEDOn 0076  
                                   __ptext1 01C4                                     __ptext2 01DF  
                                   __ptext3 01D3                                     __ptext4 01E2  
                                   __ptext5 01D7                                     __ptext6 01DB  
                                   __ptext7 018F                                     __ptext8 0151  
                                   __ptext9 01C9                       _OSCILLATOR_Initialize 01A4  
                  ??_PIN_MANAGER_Initialize 0078                                   _IOCAFbits 0393  
                                 _IOCANbits 0392                                   _IOCAPbits 0391  
                __size_of_SYSTEM_Initialize 0004                        end_of_initialization 0019  
                           ??_SetAllLEDsOff 0076                           ??_CharlieplexLEDs 0075  
                          ??_WDT_Initialize 0076                    _TMR0_SetInterruptHandler 01C4  
                                 _PORTAbits 000C                            __CFG_FOSC$INTOSC 0000  
                         __size_of_TMR0_ISR 0005                      ?_OSCILLATOR_Initialize 0075  
                       start_initialization 0012                    __size_of_TMR0_Initialize 000B  
           __size_of_PIN_MANAGER_Initialize 0024                                   _SetLEDOff 01D3  
                                 _RightTime 0070                    __size_of_PIN_MANAGER_IOC 0007  
                         __size_of_SetLEDOn 0003      __end_of_IOCAF2_DefaultInterruptHandler 01E6  
   __size_of_IOCAF2_DefaultInterruptHandler 0001              _IOCAF2_DefaultInterruptHandler 01E5  
                          __CFG_LPBOREN$OFF 0000                      __size_of_TMR0_CallBack 000A  
                               __pbssCOMMON 0070                                   ___latbits 0000  
                             __pcstackBANK0 0027                 ?_IOCAF3_SetInterruptHandler 0076  
                                ?_SetLEDOff 0075            ??_IOCAF3_DefaultInterruptHandler 0075  
           ?_IOCAF3_DefaultInterruptHandler 0075                       _TMR0_InterruptHandler 0020  
                                 __pnvBANK0 0020                      _PIN_MANAGER_Initialize 0151  
              ??_INTERRUPT_InterruptManager 0076                                   __pswtext1 01B2  
                                 __pswtext2 01B8                               _TMR0_CallBack 019A  
                         ??_TMR0_Initialize 0076                             _CharlieplexLEDs 00F3  
                                  _LEDState 002B         __size_of_INTERRUPT_InterruptManager 000D  
                ??_TMR0_SetInterruptHandler 0078                                    _TMR0_ISR 01CE  
                         ??_PIN_MANAGER_IOC 0075                                 ??_SetLEDOff 0076  
                            ?_TMR0_CallBack 0075                                    _LeftTime 0072  
                                  _SetLEDOn 01DF                       __end_of_SetAllLEDsOff 01E4  
                   ??_OSCILLATOR_Initialize 0076                     _IOCAF2_InterruptHandler 0024  
                   __end_of_CharlieplexLEDs 0151                ??_IOCAF2_SetInterruptHandler 0078  
                                  __ptext10 01BE                                    __ptext11 01A4  
                                  __ptext20 01E5                                    __ptext13 01CE  
                                  __ptext14 019A                                    __ptext15 00F3  
                                  __ptext16 01AB                                    __ptext17 0175  
                                  __ptext18 01E4                                    __ptext19 0182  
                                _IOCAF2_ISR 0182                                  _IOCAF3_ISR 0175  
                             __size_of_main 00D7                                    int$flags 007E  
        __end_of_INTERRUPT_InterruptManager 0011                  _INTERRUPT_InterruptManager 0004  
       __size_of_IOCAF2_SetInterruptHandler 0006                                  _INTCONbits 000B  
                           ??_TMR0_CallBack 0076                     __size_of_WDT_Initialize 0004  
                                  intlevel1 0000                     ?_PIN_MANAGER_Initialize 0075  
                         __CFG_CLKOUTEN$OFF 0000      __end_of_IOCAF3_DefaultInterruptHandler 01E5  
   __size_of_IOCAF3_DefaultInterruptHandler 0001              _IOCAF3_DefaultInterruptHandler 01E4  
                                _OPTION_REG 0095                             _TMR0_Initialize 018F  
                               _VREGCONbits 0197                            ?_CharlieplexLEDs 0075  
                               ?_IOCAF2_ISR 0075                                 ?_IOCAF3_ISR 0075  
            __end_of_PIN_MANAGER_Initialize 0175                             _PIN_MANAGER_IOC 01AB  
                   _IOCAF3_InterruptHandler 0022  
