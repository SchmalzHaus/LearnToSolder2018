

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Mon Apr 16 13:24:20 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	12F1572
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	swtext1,local,class=CONST,delta=2
    12                           	psect	swtext2,local,class=CONST,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	intentry,global,class=CODE,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	dabs	1,0x7E,2
    34  0000                     
    35                           ; Version 1.45
    36                           ; Generated 16/11/2017 GMT
    37                           ; 
    38                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC12F1572 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69  0000                     	;# 
    70  0001                     	;# 
    71  0002                     	;# 
    72  0003                     	;# 
    73  0004                     	;# 
    74  0005                     	;# 
    75  0006                     	;# 
    76  0007                     	;# 
    77  0008                     	;# 
    78  0009                     	;# 
    79  000A                     	;# 
    80  000B                     	;# 
    81  000C                     	;# 
    82  0011                     	;# 
    83  0012                     	;# 
    84  0013                     	;# 
    85  0015                     	;# 
    86  0016                     	;# 
    87  0016                     	;# 
    88  0017                     	;# 
    89  0018                     	;# 
    90  0019                     	;# 
    91  001A                     	;# 
    92  001B                     	;# 
    93  001C                     	;# 
    94  008C                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0095                     	;# 
    99  0096                     	;# 
   100  0097                     	;# 
   101  0098                     	;# 
   102  0099                     	;# 
   103  009A                     	;# 
   104  009B                     	;# 
   105  009B                     	;# 
   106  009C                     	;# 
   107  009D                     	;# 
   108  009E                     	;# 
   109  009F                     	;# 
   110  010C                     	;# 
   111  0111                     	;# 
   112  0112                     	;# 
   113  0115                     	;# 
   114  0116                     	;# 
   115  0117                     	;# 
   116  0118                     	;# 
   117  0119                     	;# 
   118  011D                     	;# 
   119  011D                     	;# 
   120  018C                     	;# 
   121  0191                     	;# 
   122  0191                     	;# 
   123  0192                     	;# 
   124  0193                     	;# 
   125  0193                     	;# 
   126  0194                     	;# 
   127  0195                     	;# 
   128  0196                     	;# 
   129  0197                     	;# 
   130  0199                     	;# 
   131  019A                     	;# 
   132  019B                     	;# 
   133  019B                     	;# 
   134  019C                     	;# 
   135  019D                     	;# 
   136  019E                     	;# 
   137  019F                     	;# 
   138  020C                     	;# 
   139  028C                     	;# 
   140  030C                     	;# 
   141  038C                     	;# 
   142  0391                     	;# 
   143  0392                     	;# 
   144  0393                     	;# 
   145  0691                     	;# 
   146  0692                     	;# 
   147  0693                     	;# 
   148  0694                     	;# 
   149  0695                     	;# 
   150  0D8E                     	;# 
   151  0D8F                     	;# 
   152  0D90                     	;# 
   153  0D91                     	;# 
   154  0D91                     	;# 
   155  0D92                     	;# 
   156  0D93                     	;# 
   157  0D93                     	;# 
   158  0D94                     	;# 
   159  0D95                     	;# 
   160  0D95                     	;# 
   161  0D96                     	;# 
   162  0D97                     	;# 
   163  0D97                     	;# 
   164  0D98                     	;# 
   165  0D99                     	;# 
   166  0D99                     	;# 
   167  0D9A                     	;# 
   168  0D9B                     	;# 
   169  0D9C                     	;# 
   170  0D9C                     	;# 
   171  0D9D                     	;# 
   172  0D9D                     	;# 
   173  0D9E                     	;# 
   174  0D9F                     	;# 
   175  0DA0                     	;# 
   176  0DA1                     	;# 
   177  0DA1                     	;# 
   178  0DA2                     	;# 
   179  0DA3                     	;# 
   180  0DA3                     	;# 
   181  0DA4                     	;# 
   182  0DA5                     	;# 
   183  0DA5                     	;# 
   184  0DA6                     	;# 
   185  0DA7                     	;# 
   186  0DA7                     	;# 
   187  0DA8                     	;# 
   188  0DA9                     	;# 
   189  0DA9                     	;# 
   190  0DAA                     	;# 
   191  0DAB                     	;# 
   192  0DAC                     	;# 
   193  0DAC                     	;# 
   194  0DAD                     	;# 
   195  0DAD                     	;# 
   196  0DAE                     	;# 
   197  0DAF                     	;# 
   198  0DB0                     	;# 
   199  0DB1                     	;# 
   200  0DB1                     	;# 
   201  0DB2                     	;# 
   202  0DB3                     	;# 
   203  0DB3                     	;# 
   204  0DB4                     	;# 
   205  0DB5                     	;# 
   206  0DB5                     	;# 
   207  0DB6                     	;# 
   208  0DB7                     	;# 
   209  0DB7                     	;# 
   210  0DB8                     	;# 
   211  0DB9                     	;# 
   212  0DB9                     	;# 
   213  0DBA                     	;# 
   214  0DBB                     	;# 
   215  0DBC                     	;# 
   216  0DBC                     	;# 
   217  0DBD                     	;# 
   218  0DBD                     	;# 
   219  0DBE                     	;# 
   220  0DBF                     	;# 
   221  0DC0                     	;# 
   222  0FE4                     	;# 
   223  0FE5                     	;# 
   224  0FE6                     	;# 
   225  0FE7                     	;# 
   226  0FE8                     	;# 
   227  0FE8                     	;# 
   228  0FE9                     	;# 
   229  0FEA                     	;# 
   230  0FEA                     	;# 
   231  0FEB                     	;# 
   232  0FED                     	;# 
   233  0FEE                     	;# 
   234  0FEE                     	;# 
   235  0FEF                     	;# 
   236  0000                     	;# 
   237  0001                     	;# 
   238  0002                     	;# 
   239  0003                     	;# 
   240  0004                     	;# 
   241  0005                     	;# 
   242  0006                     	;# 
   243  0007                     	;# 
   244  0008                     	;# 
   245  0009                     	;# 
   246  000A                     	;# 
   247  000B                     	;# 
   248  000C                     	;# 
   249  0011                     	;# 
   250  0012                     	;# 
   251  0013                     	;# 
   252  0015                     	;# 
   253  0016                     	;# 
   254  0016                     	;# 
   255  0017                     	;# 
   256  0018                     	;# 
   257  0019                     	;# 
   258  001A                     	;# 
   259  001B                     	;# 
   260  001C                     	;# 
   261  008C                     	;# 
   262  0091                     	;# 
   263  0092                     	;# 
   264  0093                     	;# 
   265  0095                     	;# 
   266  0096                     	;# 
   267  0097                     	;# 
   268  0098                     	;# 
   269  0099                     	;# 
   270  009A                     	;# 
   271  009B                     	;# 
   272  009B                     	;# 
   273  009C                     	;# 
   274  009D                     	;# 
   275  009E                     	;# 
   276  009F                     	;# 
   277  010C                     	;# 
   278  0111                     	;# 
   279  0112                     	;# 
   280  0115                     	;# 
   281  0116                     	;# 
   282  0117                     	;# 
   283  0118                     	;# 
   284  0119                     	;# 
   285  011D                     	;# 
   286  011D                     	;# 
   287  018C                     	;# 
   288  0191                     	;# 
   289  0191                     	;# 
   290  0192                     	;# 
   291  0193                     	;# 
   292  0193                     	;# 
   293  0194                     	;# 
   294  0195                     	;# 
   295  0196                     	;# 
   296  0197                     	;# 
   297  0199                     	;# 
   298  019A                     	;# 
   299  019B                     	;# 
   300  019B                     	;# 
   301  019C                     	;# 
   302  019D                     	;# 
   303  019E                     	;# 
   304  019F                     	;# 
   305  020C                     	;# 
   306  028C                     	;# 
   307  030C                     	;# 
   308  038C                     	;# 
   309  0391                     	;# 
   310  0392                     	;# 
   311  0393                     	;# 
   312  0691                     	;# 
   313  0692                     	;# 
   314  0693                     	;# 
   315  0694                     	;# 
   316  0695                     	;# 
   317  0D8E                     	;# 
   318  0D8F                     	;# 
   319  0D90                     	;# 
   320  0D91                     	;# 
   321  0D91                     	;# 
   322  0D92                     	;# 
   323  0D93                     	;# 
   324  0D93                     	;# 
   325  0D94                     	;# 
   326  0D95                     	;# 
   327  0D95                     	;# 
   328  0D96                     	;# 
   329  0D97                     	;# 
   330  0D97                     	;# 
   331  0D98                     	;# 
   332  0D99                     	;# 
   333  0D99                     	;# 
   334  0D9A                     	;# 
   335  0D9B                     	;# 
   336  0D9C                     	;# 
   337  0D9C                     	;# 
   338  0D9D                     	;# 
   339  0D9D                     	;# 
   340  0D9E                     	;# 
   341  0D9F                     	;# 
   342  0DA0                     	;# 
   343  0DA1                     	;# 
   344  0DA1                     	;# 
   345  0DA2                     	;# 
   346  0DA3                     	;# 
   347  0DA3                     	;# 
   348  0DA4                     	;# 
   349  0DA5                     	;# 
   350  0DA5                     	;# 
   351  0DA6                     	;# 
   352  0DA7                     	;# 
   353  0DA7                     	;# 
   354  0DA8                     	;# 
   355  0DA9                     	;# 
   356  0DA9                     	;# 
   357  0DAA                     	;# 
   358  0DAB                     	;# 
   359  0DAC                     	;# 
   360  0DAC                     	;# 
   361  0DAD                     	;# 
   362  0DAD                     	;# 
   363  0DAE                     	;# 
   364  0DAF                     	;# 
   365  0DB0                     	;# 
   366  0DB1                     	;# 
   367  0DB1                     	;# 
   368  0DB2                     	;# 
   369  0DB3                     	;# 
   370  0DB3                     	;# 
   371  0DB4                     	;# 
   372  0DB5                     	;# 
   373  0DB5                     	;# 
   374  0DB6                     	;# 
   375  0DB7                     	;# 
   376  0DB7                     	;# 
   377  0DB8                     	;# 
   378  0DB9                     	;# 
   379  0DB9                     	;# 
   380  0DBA                     	;# 
   381  0DBB                     	;# 
   382  0DBC                     	;# 
   383  0DBC                     	;# 
   384  0DBD                     	;# 
   385  0DBD                     	;# 
   386  0DBE                     	;# 
   387  0DBF                     	;# 
   388  0DC0                     	;# 
   389  0FE4                     	;# 
   390  0FE5                     	;# 
   391  0FE6                     	;# 
   392  0FE7                     	;# 
   393  0FE8                     	;# 
   394  0FE8                     	;# 
   395  0FE9                     	;# 
   396  0FEA                     	;# 
   397  0FEA                     	;# 
   398  0FEB                     	;# 
   399  0FED                     	;# 
   400  0FEE                     	;# 
   401  0FEE                     	;# 
   402  0FEF                     	;# 
   403  0000                     	;# 
   404  0001                     	;# 
   405  0002                     	;# 
   406  0003                     	;# 
   407  0004                     	;# 
   408  0005                     	;# 
   409  0006                     	;# 
   410  0007                     	;# 
   411  0008                     	;# 
   412  0009                     	;# 
   413  000A                     	;# 
   414  000B                     	;# 
   415  000C                     	;# 
   416  0011                     	;# 
   417  0012                     	;# 
   418  0013                     	;# 
   419  0015                     	;# 
   420  0016                     	;# 
   421  0016                     	;# 
   422  0017                     	;# 
   423  0018                     	;# 
   424  0019                     	;# 
   425  001A                     	;# 
   426  001B                     	;# 
   427  001C                     	;# 
   428  008C                     	;# 
   429  0091                     	;# 
   430  0092                     	;# 
   431  0093                     	;# 
   432  0095                     	;# 
   433  0096                     	;# 
   434  0097                     	;# 
   435  0098                     	;# 
   436  0099                     	;# 
   437  009A                     	;# 
   438  009B                     	;# 
   439  009B                     	;# 
   440  009C                     	;# 
   441  009D                     	;# 
   442  009E                     	;# 
   443  009F                     	;# 
   444  010C                     	;# 
   445  0111                     	;# 
   446  0112                     	;# 
   447  0115                     	;# 
   448  0116                     	;# 
   449  0117                     	;# 
   450  0118                     	;# 
   451  0119                     	;# 
   452  011D                     	;# 
   453  011D                     	;# 
   454  018C                     	;# 
   455  0191                     	;# 
   456  0191                     	;# 
   457  0192                     	;# 
   458  0193                     	;# 
   459  0193                     	;# 
   460  0194                     	;# 
   461  0195                     	;# 
   462  0196                     	;# 
   463  0197                     	;# 
   464  0199                     	;# 
   465  019A                     	;# 
   466  019B                     	;# 
   467  019B                     	;# 
   468  019C                     	;# 
   469  019D                     	;# 
   470  019E                     	;# 
   471  019F                     	;# 
   472  020C                     	;# 
   473  028C                     	;# 
   474  030C                     	;# 
   475  038C                     	;# 
   476  0391                     	;# 
   477  0392                     	;# 
   478  0393                     	;# 
   479  0691                     	;# 
   480  0692                     	;# 
   481  0693                     	;# 
   482  0694                     	;# 
   483  0695                     	;# 
   484  0D8E                     	;# 
   485  0D8F                     	;# 
   486  0D90                     	;# 
   487  0D91                     	;# 
   488  0D91                     	;# 
   489  0D92                     	;# 
   490  0D93                     	;# 
   491  0D93                     	;# 
   492  0D94                     	;# 
   493  0D95                     	;# 
   494  0D95                     	;# 
   495  0D96                     	;# 
   496  0D97                     	;# 
   497  0D97                     	;# 
   498  0D98                     	;# 
   499  0D99                     	;# 
   500  0D99                     	;# 
   501  0D9A                     	;# 
   502  0D9B                     	;# 
   503  0D9C                     	;# 
   504  0D9C                     	;# 
   505  0D9D                     	;# 
   506  0D9D                     	;# 
   507  0D9E                     	;# 
   508  0D9F                     	;# 
   509  0DA0                     	;# 
   510  0DA1                     	;# 
   511  0DA1                     	;# 
   512  0DA2                     	;# 
   513  0DA3                     	;# 
   514  0DA3                     	;# 
   515  0DA4                     	;# 
   516  0DA5                     	;# 
   517  0DA5                     	;# 
   518  0DA6                     	;# 
   519  0DA7                     	;# 
   520  0DA7                     	;# 
   521  0DA8                     	;# 
   522  0DA9                     	;# 
   523  0DA9                     	;# 
   524  0DAA                     	;# 
   525  0DAB                     	;# 
   526  0DAC                     	;# 
   527  0DAC                     	;# 
   528  0DAD                     	;# 
   529  0DAD                     	;# 
   530  0DAE                     	;# 
   531  0DAF                     	;# 
   532  0DB0                     	;# 
   533  0DB1                     	;# 
   534  0DB1                     	;# 
   535  0DB2                     	;# 
   536  0DB3                     	;# 
   537  0DB3                     	;# 
   538  0DB4                     	;# 
   539  0DB5                     	;# 
   540  0DB5                     	;# 
   541  0DB6                     	;# 
   542  0DB7                     	;# 
   543  0DB7                     	;# 
   544  0DB8                     	;# 
   545  0DB9                     	;# 
   546  0DB9                     	;# 
   547  0DBA                     	;# 
   548  0DBB                     	;# 
   549  0DBC                     	;# 
   550  0DBC                     	;# 
   551  0DBD                     	;# 
   552  0DBD                     	;# 
   553  0DBE                     	;# 
   554  0DBF                     	;# 
   555  0DC0                     	;# 
   556  0FE4                     	;# 
   557  0FE5                     	;# 
   558  0FE6                     	;# 
   559  0FE7                     	;# 
   560  0FE8                     	;# 
   561  0FE8                     	;# 
   562  0FE9                     	;# 
   563  0FEA                     	;# 
   564  0FEA                     	;# 
   565  0FEB                     	;# 
   566  0FED                     	;# 
   567  0FEE                     	;# 
   568  0FEE                     	;# 
   569  0FEF                     	;# 
   570  0000                     	;# 
   571  0001                     	;# 
   572  0002                     	;# 
   573  0003                     	;# 
   574  0004                     	;# 
   575  0005                     	;# 
   576  0006                     	;# 
   577  0007                     	;# 
   578  0008                     	;# 
   579  0009                     	;# 
   580  000A                     	;# 
   581  000B                     	;# 
   582  000C                     	;# 
   583  0011                     	;# 
   584  0012                     	;# 
   585  0013                     	;# 
   586  0015                     	;# 
   587  0016                     	;# 
   588  0016                     	;# 
   589  0017                     	;# 
   590  0018                     	;# 
   591  0019                     	;# 
   592  001A                     	;# 
   593  001B                     	;# 
   594  001C                     	;# 
   595  008C                     	;# 
   596  0091                     	;# 
   597  0092                     	;# 
   598  0093                     	;# 
   599  0095                     	;# 
   600  0096                     	;# 
   601  0097                     	;# 
   602  0098                     	;# 
   603  0099                     	;# 
   604  009A                     	;# 
   605  009B                     	;# 
   606  009B                     	;# 
   607  009C                     	;# 
   608  009D                     	;# 
   609  009E                     	;# 
   610  009F                     	;# 
   611  010C                     	;# 
   612  0111                     	;# 
   613  0112                     	;# 
   614  0115                     	;# 
   615  0116                     	;# 
   616  0117                     	;# 
   617  0118                     	;# 
   618  0119                     	;# 
   619  011D                     	;# 
   620  011D                     	;# 
   621  018C                     	;# 
   622  0191                     	;# 
   623  0191                     	;# 
   624  0192                     	;# 
   625  0193                     	;# 
   626  0193                     	;# 
   627  0194                     	;# 
   628  0195                     	;# 
   629  0196                     	;# 
   630  0197                     	;# 
   631  0199                     	;# 
   632  019A                     	;# 
   633  019B                     	;# 
   634  019B                     	;# 
   635  019C                     	;# 
   636  019D                     	;# 
   637  019E                     	;# 
   638  019F                     	;# 
   639  020C                     	;# 
   640  028C                     	;# 
   641  030C                     	;# 
   642  038C                     	;# 
   643  0391                     	;# 
   644  0392                     	;# 
   645  0393                     	;# 
   646  0691                     	;# 
   647  0692                     	;# 
   648  0693                     	;# 
   649  0694                     	;# 
   650  0695                     	;# 
   651  0D8E                     	;# 
   652  0D8F                     	;# 
   653  0D90                     	;# 
   654  0D91                     	;# 
   655  0D91                     	;# 
   656  0D92                     	;# 
   657  0D93                     	;# 
   658  0D93                     	;# 
   659  0D94                     	;# 
   660  0D95                     	;# 
   661  0D95                     	;# 
   662  0D96                     	;# 
   663  0D97                     	;# 
   664  0D97                     	;# 
   665  0D98                     	;# 
   666  0D99                     	;# 
   667  0D99                     	;# 
   668  0D9A                     	;# 
   669  0D9B                     	;# 
   670  0D9C                     	;# 
   671  0D9C                     	;# 
   672  0D9D                     	;# 
   673  0D9D                     	;# 
   674  0D9E                     	;# 
   675  0D9F                     	;# 
   676  0DA0                     	;# 
   677  0DA1                     	;# 
   678  0DA1                     	;# 
   679  0DA2                     	;# 
   680  0DA3                     	;# 
   681  0DA3                     	;# 
   682  0DA4                     	;# 
   683  0DA5                     	;# 
   684  0DA5                     	;# 
   685  0DA6                     	;# 
   686  0DA7                     	;# 
   687  0DA7                     	;# 
   688  0DA8                     	;# 
   689  0DA9                     	;# 
   690  0DA9                     	;# 
   691  0DAA                     	;# 
   692  0DAB                     	;# 
   693  0DAC                     	;# 
   694  0DAC                     	;# 
   695  0DAD                     	;# 
   696  0DAD                     	;# 
   697  0DAE                     	;# 
   698  0DAF                     	;# 
   699  0DB0                     	;# 
   700  0DB1                     	;# 
   701  0DB1                     	;# 
   702  0DB2                     	;# 
   703  0DB3                     	;# 
   704  0DB3                     	;# 
   705  0DB4                     	;# 
   706  0DB5                     	;# 
   707  0DB5                     	;# 
   708  0DB6                     	;# 
   709  0DB7                     	;# 
   710  0DB7                     	;# 
   711  0DB8                     	;# 
   712  0DB9                     	;# 
   713  0DB9                     	;# 
   714  0DBA                     	;# 
   715  0DBB                     	;# 
   716  0DBC                     	;# 
   717  0DBC                     	;# 
   718  0DBD                     	;# 
   719  0DBD                     	;# 
   720  0DBE                     	;# 
   721  0DBF                     	;# 
   722  0DC0                     	;# 
   723  0FE4                     	;# 
   724  0FE5                     	;# 
   725  0FE6                     	;# 
   726  0FE7                     	;# 
   727  0FE8                     	;# 
   728  0FE8                     	;# 
   729  0FE9                     	;# 
   730  0FEA                     	;# 
   731  0FEA                     	;# 
   732  0FEB                     	;# 
   733  0FED                     	;# 
   734  0FEE                     	;# 
   735  0FEE                     	;# 
   736  0FEF                     	;# 
   737  0000                     	;# 
   738  0001                     	;# 
   739  0002                     	;# 
   740  0003                     	;# 
   741  0004                     	;# 
   742  0005                     	;# 
   743  0006                     	;# 
   744  0007                     	;# 
   745  0008                     	;# 
   746  0009                     	;# 
   747  000A                     	;# 
   748  000B                     	;# 
   749  000C                     	;# 
   750  0011                     	;# 
   751  0012                     	;# 
   752  0013                     	;# 
   753  0015                     	;# 
   754  0016                     	;# 
   755  0016                     	;# 
   756  0017                     	;# 
   757  0018                     	;# 
   758  0019                     	;# 
   759  001A                     	;# 
   760  001B                     	;# 
   761  001C                     	;# 
   762  008C                     	;# 
   763  0091                     	;# 
   764  0092                     	;# 
   765  0093                     	;# 
   766  0095                     	;# 
   767  0096                     	;# 
   768  0097                     	;# 
   769  0098                     	;# 
   770  0099                     	;# 
   771  009A                     	;# 
   772  009B                     	;# 
   773  009B                     	;# 
   774  009C                     	;# 
   775  009D                     	;# 
   776  009E                     	;# 
   777  009F                     	;# 
   778  010C                     	;# 
   779  0111                     	;# 
   780  0112                     	;# 
   781  0115                     	;# 
   782  0116                     	;# 
   783  0117                     	;# 
   784  0118                     	;# 
   785  0119                     	;# 
   786  011D                     	;# 
   787  011D                     	;# 
   788  018C                     	;# 
   789  0191                     	;# 
   790  0191                     	;# 
   791  0192                     	;# 
   792  0193                     	;# 
   793  0193                     	;# 
   794  0194                     	;# 
   795  0195                     	;# 
   796  0196                     	;# 
   797  0197                     	;# 
   798  0199                     	;# 
   799  019A                     	;# 
   800  019B                     	;# 
   801  019B                     	;# 
   802  019C                     	;# 
   803  019D                     	;# 
   804  019E                     	;# 
   805  019F                     	;# 
   806  020C                     	;# 
   807  028C                     	;# 
   808  030C                     	;# 
   809  038C                     	;# 
   810  0391                     	;# 
   811  0392                     	;# 
   812  0393                     	;# 
   813  0691                     	;# 
   814  0692                     	;# 
   815  0693                     	;# 
   816  0694                     	;# 
   817  0695                     	;# 
   818  0D8E                     	;# 
   819  0D8F                     	;# 
   820  0D90                     	;# 
   821  0D91                     	;# 
   822  0D91                     	;# 
   823  0D92                     	;# 
   824  0D93                     	;# 
   825  0D93                     	;# 
   826  0D94                     	;# 
   827  0D95                     	;# 
   828  0D95                     	;# 
   829  0D96                     	;# 
   830  0D97                     	;# 
   831  0D97                     	;# 
   832  0D98                     	;# 
   833  0D99                     	;# 
   834  0D99                     	;# 
   835  0D9A                     	;# 
   836  0D9B                     	;# 
   837  0D9C                     	;# 
   838  0D9C                     	;# 
   839  0D9D                     	;# 
   840  0D9D                     	;# 
   841  0D9E                     	;# 
   842  0D9F                     	;# 
   843  0DA0                     	;# 
   844  0DA1                     	;# 
   845  0DA1                     	;# 
   846  0DA2                     	;# 
   847  0DA3                     	;# 
   848  0DA3                     	;# 
   849  0DA4                     	;# 
   850  0DA5                     	;# 
   851  0DA5                     	;# 
   852  0DA6                     	;# 
   853  0DA7                     	;# 
   854  0DA7                     	;# 
   855  0DA8                     	;# 
   856  0DA9                     	;# 
   857  0DA9                     	;# 
   858  0DAA                     	;# 
   859  0DAB                     	;# 
   860  0DAC                     	;# 
   861  0DAC                     	;# 
   862  0DAD                     	;# 
   863  0DAD                     	;# 
   864  0DAE                     	;# 
   865  0DAF                     	;# 
   866  0DB0                     	;# 
   867  0DB1                     	;# 
   868  0DB1                     	;# 
   869  0DB2                     	;# 
   870  0DB3                     	;# 
   871  0DB3                     	;# 
   872  0DB4                     	;# 
   873  0DB5                     	;# 
   874  0DB5                     	;# 
   875  0DB6                     	;# 
   876  0DB7                     	;# 
   877  0DB7                     	;# 
   878  0DB8                     	;# 
   879  0DB9                     	;# 
   880  0DB9                     	;# 
   881  0DBA                     	;# 
   882  0DBB                     	;# 
   883  0DBC                     	;# 
   884  0DBC                     	;# 
   885  0DBD                     	;# 
   886  0DBD                     	;# 
   887  0DBE                     	;# 
   888  0DBF                     	;# 
   889  0DC0                     	;# 
   890  0FE4                     	;# 
   891  0FE5                     	;# 
   892  0FE6                     	;# 
   893  0FE7                     	;# 
   894  0FE8                     	;# 
   895  0FE8                     	;# 
   896  0FE9                     	;# 
   897  0FEA                     	;# 
   898  0FEA                     	;# 
   899  0FEB                     	;# 
   900  0FED                     	;# 
   901  0FEE                     	;# 
   902  0FEE                     	;# 
   903  0FEF                     	;# 
   904                           
   905                           	psect	nvBANK0
   906  0020                     __pnvBANK0:	
   907  0020                     _TMR0_InterruptHandler:	
   908  0020                     	ds	2
   909  0022                     _IOCAF3_InterruptHandler:	
   910  0022                     	ds	2
   911  0024                     _IOCAF2_InterruptHandler:	
   912  0024                     	ds	2
   913  0026                     _timer0ReloadVal:	
   914  0026                     	ds	1
   915  000C                     _PORTAbits	set	12
   916  000C                     _PORTA	set	12
   917  0015                     _TMR0	set	21
   918  000B                     _INTCONbits	set	11
   919  0095                     _OPTION_REG	set	149
   920  0097                     _WDTCON	set	151
   921  0098                     _OSCTUNE	set	152
   922  0099                     _OSCCON	set	153
   923  0095                     _OPTION_REGbits	set	149
   924  008C                     _TRISA	set	140
   925  0116                     _BORCON	set	278
   926  011D                     _APFCON	set	285
   927  010C                     _LATA	set	268
   928  0197                     _VREGCONbits	set	407
   929  018C                     _ANSELA	set	396
   930  020C                     _WPUA	set	524
   931  028C                     _ODCONA	set	652
   932  0391                     _IOCAPbits	set	913
   933  0392                     _IOCANbits	set	914
   934  0393                     _IOCAFbits	set	915
   935                           
   936                           ; #config settings
   937  0000                     
   938                           	psect	cinit
   939  0018                     start_initialization:	
   940  0018                     __initialization:	
   941                           
   942                           ; Clear objects allocated to COMMON
   943  0018  01F7               	clrf	__pbssCOMMON& (0+127)
   944  0019  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   945  001A  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   946                           
   947                           ; Clear objects allocated to BANK0
   948  001B  0020               	movlb	0	; select bank0
   949  001C  01AB               	clrf	__pbssBANK0& (0+127)
   950  001D  01AC               	clrf	(__pbssBANK0+1)& (0+127)
   951  001E  01AD               	clrf	(__pbssBANK0+2)& (0+127)
   952  001F                     end_of_initialization:	
   953                           ;End of C runtime variable initialization code
   954                           
   955  001F                     __end_of__initialization:	
   956  001F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   957  0020  0020               	movlb	0
   958  0021  2822               	ljmp	_main	;jump to C main() function
   959                           
   960                           	psect	bssCOMMON
   961  0077                     __pbssCOMMON:	
   962  0077                     _LeftTime:	
   963  0077                     	ds	2
   964  0079                     _LEDOns:	
   965  0079                     	ds	1
   966                           
   967                           	psect	bssBANK0
   968  002B                     __pbssBANK0:	
   969  002B                     _RightTime:	
   970  002B                     	ds	2
   971  002D                     _LEDState:	
   972  002D                     	ds	1
   973                           
   974                           	psect	cstackCOMMON
   975  0070                     __pcstackCOMMON:	
   976  0070                     ?_IOCAF2_DefaultInterruptHandler:	
   977  0070                     ??_IOCAF2_DefaultInterruptHandler:	
   978                           ; 1 bytes @ 0x0
   979                           
   980  0070                     ?_IOCAF3_DefaultInterruptHandler:	
   981                           ; 1 bytes @ 0x0
   982                           
   983  0070                     ??_IOCAF3_DefaultInterruptHandler:	
   984                           ; 1 bytes @ 0x0
   985                           
   986  0070                     ?_IOCAF2_ISR:	
   987                           ; 1 bytes @ 0x0
   988                           
   989  0070                     ??_IOCAF2_ISR:	
   990                           ; 1 bytes @ 0x0
   991                           
   992  0070                     ?_IOCAF3_ISR:	
   993                           ; 1 bytes @ 0x0
   994                           
   995  0070                     ??_IOCAF3_ISR:	
   996                           ; 1 bytes @ 0x0
   997                           
   998  0070                     ?_OSCILLATOR_Initialize:	
   999                           ; 1 bytes @ 0x0
  1000                           
  1001  0070                     ?_WDT_Initialize:	
  1002                           ; 1 bytes @ 0x0
  1003                           
  1004  0070                     ?_TMR0_Initialize:	
  1005                           ; 1 bytes @ 0x0
  1006                           
  1007  0070                     ?_TMR0_ISR:	
  1008                           ; 1 bytes @ 0x0
  1009                           
  1010  0070                     ?_TMR0_CallBack:	
  1011                           ; 1 bytes @ 0x0
  1012                           
  1013  0070                     ?_PIN_MANAGER_Initialize:	
  1014                           ; 1 bytes @ 0x0
  1015                           
  1016  0070                     ?_PIN_MANAGER_IOC:	
  1017                           ; 1 bytes @ 0x0
  1018                           
  1019  0070                     ??_PIN_MANAGER_IOC:	
  1020                           ; 1 bytes @ 0x0
  1021                           
  1022  0070                     ?_SYSTEM_Initialize:	
  1023                           ; 1 bytes @ 0x0
  1024                           
  1025  0070                     ?_INTERRUPT_InterruptManager:	
  1026                           ; 1 bytes @ 0x0
  1027                           
  1028  0070                     ?_SetLEDOn:	
  1029                           ; 1 bytes @ 0x0
  1030                           
  1031  0070                     ?_SetLEDOff:	
  1032                           ; 1 bytes @ 0x0
  1033                           
  1034  0070                     ?_SetAllLEDsOff:	
  1035                           ; 1 bytes @ 0x0
  1036                           
  1037  0070                     ?_CharlieplexLEDs:	
  1038                           ; 1 bytes @ 0x0
  1039                           
  1040  0070                     ??_CharlieplexLEDs:	
  1041                           ; 1 bytes @ 0x0
  1042                           
  1043  0070                     ?_main:	
  1044                           ; 1 bytes @ 0x0
  1045                           
  1046                           
  1047                           ; 1 bytes @ 0x0
  1048  0070                     	ds	1
  1049  0071                     CharlieplexLEDs@PortTemp:	
  1050                           
  1051                           ; 1 bytes @ 0x1
  1052  0071                     	ds	1
  1053  0072                     ??_TMR0_ISR:	
  1054  0072                     ??_TMR0_CallBack:	
  1055                           ; 1 bytes @ 0x2
  1056                           
  1057  0072                     ??_INTERRUPT_InterruptManager:	
  1058                           ; 1 bytes @ 0x2
  1059                           
  1060                           
  1061                           ; 1 bytes @ 0x2
  1062  0072                     	ds	1
  1063  0073                     ?_IOCAF2_SetInterruptHandler:	
  1064  0073                     ?_IOCAF3_SetInterruptHandler:	
  1065                           ; 1 bytes @ 0x3
  1066                           
  1067  0073                     ??_OSCILLATOR_Initialize:	
  1068                           ; 1 bytes @ 0x3
  1069                           
  1070  0073                     ??_WDT_Initialize:	
  1071                           ; 1 bytes @ 0x3
  1072                           
  1073  0073                     ??_TMR0_Initialize:	
  1074                           ; 1 bytes @ 0x3
  1075                           
  1076  0073                     ?_TMR0_SetInterruptHandler:	
  1077                           ; 1 bytes @ 0x3
  1078                           
  1079  0073                     ??_SetLEDOn:	
  1080                           ; 1 bytes @ 0x3
  1081                           
  1082  0073                     ??_SetLEDOff:	
  1083                           ; 1 bytes @ 0x3
  1084                           
  1085  0073                     ??_SetAllLEDsOff:	
  1086                           ; 1 bytes @ 0x3
  1087                           
  1088  0073                     IOCAF2_SetInterruptHandler@InterruptHandler:	
  1089                           ; 1 bytes @ 0x3
  1090                           
  1091  0073                     IOCAF3_SetInterruptHandler@InterruptHandler:	
  1092                           ; 2 bytes @ 0x3
  1093                           
  1094  0073                     TMR0_SetInterruptHandler@InterruptHandler:	
  1095                           ; 2 bytes @ 0x3
  1096                           
  1097                           
  1098                           ; 2 bytes @ 0x3
  1099  0073                     	ds	1
  1100  0074                     SetLEDOn@LED:	
  1101  0074                     SetLEDOff@LED:	
  1102                           ; 1 bytes @ 0x4
  1103                           
  1104                           
  1105                           ; 1 bytes @ 0x4
  1106  0074                     	ds	1
  1107  0075                     ??_IOCAF2_SetInterruptHandler:	
  1108  0075                     ??_IOCAF3_SetInterruptHandler:	
  1109                           ; 1 bytes @ 0x5
  1110                           
  1111  0075                     ??_PIN_MANAGER_Initialize:	
  1112                           ; 1 bytes @ 0x5
  1113                           
  1114  0075                     ??_SYSTEM_Initialize:	
  1115                           ; 1 bytes @ 0x5
  1116                           
  1117  0075                     ??_TMR0_SetInterruptHandler:	
  1118                           ; 1 bytes @ 0x5
  1119                           
  1120  0075                     ??_main:	
  1121                           ; 1 bytes @ 0x5
  1122                           
  1123                           
  1124                           ; 1 bytes @ 0x5
  1125  0075                     	ds	2
  1126                           
  1127                           	psect	cstackBANK0
  1128  0027                     __pcstackBANK0:	
  1129  0027                     main@LastLeftButtonState:	
  1130                           
  1131                           ; 1 bytes @ 0x0
  1132  0027                     	ds	1
  1133  0028                     main@LastRightButtonState:	
  1134                           
  1135                           ; 1 bytes @ 0x1
  1136  0028                     	ds	1
  1137  0029                     main@LeftState:	
  1138                           
  1139                           ; 1 bytes @ 0x2
  1140  0029                     	ds	1
  1141  002A                     main@RightState:	
  1142                           
  1143                           ; 1 bytes @ 0x3
  1144  002A                     	ds	1
  1145                           
  1146                           	psect	maintext
  1147  0022                     __pmaintext:	
  1148 ;;
  1149 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1150 ;;
  1151 ;; *************** function _main *****************
  1152 ;; Defined at:
  1153 ;;		line 217 in file "main.c"
  1154 ;; Parameters:    Size  Location     Type
  1155 ;;		None
  1156 ;; Auto vars:     Size  Location     Type
  1157 ;;  RightState      1    3[BANK0 ] unsigned char 
  1158 ;;  LeftState       1    2[BANK0 ] unsigned char 
  1159 ;;  LastRightBut    1    1[BANK0 ] unsigned char 
  1160 ;;  LastLeftButt    1    0[BANK0 ] unsigned char 
  1161 ;; Return value:  Size  Location     Type
  1162 ;;                  1    wreg      void 
  1163 ;; Registers used:
  1164 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1165 ;; Tracked objects:
  1166 ;;		On entry : B1F/0
  1167 ;;		On exit  : 0/0
  1168 ;;		Unchanged: 0/0
  1169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1170 ;;      Params:         0       0       0       0
  1171 ;;      Locals:         0       4       0       0
  1172 ;;      Temps:          2       0       0       0
  1173 ;;      Totals:         2       4       0       0
  1174 ;;Total ram usage:        6 bytes
  1175 ;; Hardware stack levels required when called:    7
  1176 ;; This function calls:
  1177 ;;		_SYSTEM_Initialize
  1178 ;;		_SetAllLEDsOff
  1179 ;;		_SetLEDOff
  1180 ;;		_SetLEDOn
  1181 ;;		_TMR0_SetInterruptHandler
  1182 ;; This function is called by:
  1183 ;;		Startup code after reset
  1184 ;; This function uses a non-reentrant model
  1185 ;;
  1186                           
  1187                           
  1188                           ;psect for function _main
  1189  0022                     _main:	
  1190                           
  1191                           ;main.c: 220: SYSTEM_Initialize();
  1192                           
  1193                           ;incstack = 0
  1194                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1195  0022  2212               	fcall	_SYSTEM_Initialize
  1196                           
  1197                           ;main.c: 222: TMR0_SetInterruptHandler(CharlieplexLEDs);
  1198  0023  300E               	movlw	low _CharlieplexLEDs
  1199  0024  00F3               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  1200  0025  3001               	movlw	high _CharlieplexLEDs
  1201  0026  00F4               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  1202  0027  21FA               	fcall	_TMR0_SetInterruptHandler
  1203                           
  1204                           ;main.c: 228: (INTCONbits.GIE = 1);
  1205  0028  178B               	bsf	11,7	;volatile
  1206                           
  1207                           ;main.c: 231: (INTCONbits.PEIE = 1);
  1208  0029  170B               	bsf	11,6	;volatile
  1209                           
  1210                           ;main.c: 242: uint8_t LeftState = 0;
  1211  002A  0020               	movlb	0	; select bank0
  1212  002B  01A9               	clrf	main@LeftState
  1213                           
  1214                           ;main.c: 243: uint8_t RightState = 0;
  1215  002C  01AA               	clrf	main@RightState
  1216                           
  1217                           ;main.c: 244: uint8_t LastLeftButtonState = 0;
  1218  002D  01A7               	clrf	main@LastLeftButtonState
  1219  002E  28E9               	goto	l1496
  1220  002F                     l1404:	
  1221                           ;main.c: 257: case 1:
  1222                           
  1223                           ;main.c: 255: break;
  1224                           
  1225                           ;main.c: 252: {
  1226                           ;main.c: 253: case 0:
  1227                           
  1228                           ;main.c: 250: {
  1229                           ;main.c: 251: switch(RightState)
  1230                           
  1231                           ;main.c: 248: {
  1232                           ;main.c: 249: while (LeftState || RightState)
  1233                           
  1234                           ;main.c: 247: while (1)
  1235                           
  1236                           ;main.c: 245: uint8_t LastRightButtonState = 0;
  1237                           
  1238                           
  1239                           ;main.c: 258: SetLEDOn(0x01);
  1240  002F  3001               	movlw	1
  1241  0030  21D9               	fcall	_SetLEDOn
  1242                           
  1243                           ;main.c: 259: SetLEDOff(0x02);
  1244  0031  3002               	movlw	2
  1245  0032  21E0               	fcall	_SetLEDOff
  1246                           
  1247                           ;main.c: 260: SetLEDOff(0x04);
  1248  0033  3004               	movlw	4
  1249  0034  21E0               	fcall	_SetLEDOff
  1250                           
  1251                           ;main.c: 261: SetLEDOff(0x08);
  1252  0035  3008               	movlw	8
  1253  0036  21E0               	fcall	_SetLEDOff
  1254  0037  285E               	goto	L1
  1255  0038                     l1410:	
  1256                           ;main.c: 266: case 2:
  1257                           
  1258                           ;main.c: 264: break;
  1259                           
  1260                           ;main.c: 263: RightState++;
  1261                           
  1262                           ;main.c: 262: RightTime = 2000;
  1263                           
  1264                           
  1265                           ;main.c: 267: if (RightTime == 0)
  1266  0038  082B               	movf	_RightTime,w	;volatile
  1267  0039  042C               	iorwf	_RightTime+1,w	;volatile
  1268  003A  1D03               	btfss	3,2
  1269  003B  28CA               	goto	l1482
  1270                           
  1271                           ;main.c: 268: {
  1272                           ;main.c: 269: SetLEDOff(0x01);
  1273  003C  3001               	movlw	1
  1274  003D  21E0               	fcall	_SetLEDOff
  1275                           
  1276                           ;main.c: 270: SetLEDOn(0x02);
  1277  003E  3002               	movlw	2
  1278  003F  21D9               	fcall	_SetLEDOn
  1279                           
  1280                           ;main.c: 271: SetLEDOff(0x04);
  1281  0040  3004               	movlw	4
  1282  0041  21E0               	fcall	_SetLEDOff
  1283                           
  1284                           ;main.c: 272: SetLEDOff(0x08);
  1285  0042  3008               	movlw	8
  1286  0043  21E0               	fcall	_SetLEDOff
  1287  0044  285E               	goto	L1
  1288  0045                     l1418:	
  1289                           ;main.c: 278: case 3:
  1290                           
  1291                           ;main.c: 275: }
  1292                           ;main.c: 276: break;
  1293                           
  1294                           ;main.c: 274: RightState++;
  1295                           
  1296                           ;main.c: 273: RightTime = 2000;
  1297                           
  1298                           
  1299                           ;main.c: 279: if (RightTime == 0)
  1300  0045  082B               	movf	_RightTime,w	;volatile
  1301  0046  042C               	iorwf	_RightTime+1,w	;volatile
  1302  0047  1D03               	btfss	3,2
  1303  0048  28CA               	goto	l1482
  1304                           
  1305                           ;main.c: 280: {
  1306                           ;main.c: 281: SetLEDOff(0x01);
  1307  0049  3001               	movlw	1
  1308  004A  21E0               	fcall	_SetLEDOff
  1309                           
  1310                           ;main.c: 282: SetLEDOff(0x02);
  1311  004B  3002               	movlw	2
  1312  004C  21E0               	fcall	_SetLEDOff
  1313                           
  1314                           ;main.c: 283: SetLEDOn(0x04);
  1315  004D  3004               	movlw	4
  1316  004E  21D9               	fcall	_SetLEDOn
  1317                           
  1318                           ;main.c: 284: SetLEDOff(0x08);
  1319  004F  3008               	movlw	8
  1320  0050  21E0               	fcall	_SetLEDOff
  1321  0051  285E               	goto	L1
  1322  0052                     l1426:	
  1323                           ;main.c: 290: case 4:
  1324                           
  1325                           ;main.c: 287: }
  1326                           ;main.c: 288: break;
  1327                           
  1328                           ;main.c: 286: RightState++;
  1329                           
  1330                           ;main.c: 285: RightTime = 2000;
  1331                           
  1332                           
  1333                           ;main.c: 291: if (RightTime == 0)
  1334  0052  082B               	movf	_RightTime,w	;volatile
  1335  0053  042C               	iorwf	_RightTime+1,w	;volatile
  1336  0054  1D03               	btfss	3,2
  1337  0055  28CA               	goto	l1482
  1338                           
  1339                           ;main.c: 292: {
  1340                           ;main.c: 293: SetLEDOff(0x01);
  1341  0056  3001               	movlw	1
  1342  0057  21E0               	fcall	_SetLEDOff
  1343                           
  1344                           ;main.c: 294: SetLEDOff(0x02);
  1345  0058  3002               	movlw	2
  1346  0059  21E0               	fcall	_SetLEDOff
  1347                           
  1348                           ;main.c: 295: SetLEDOff(0x04);
  1349  005A  3004               	movlw	4
  1350  005B  21E0               	fcall	_SetLEDOff
  1351                           
  1352                           ;main.c: 296: SetLEDOn(0x08);
  1353  005C  3008               	movlw	8
  1354  005D  21D9               	fcall	_SetLEDOn
  1355  005E                     L1:	
  1356                           
  1357                           ;main.c: 297: RightTime = 2000;
  1358  005E  30D0               	movlw	208
  1359  005F  0020               	movlb	0	; select bank0
  1360  0060  00AB               	movwf	_RightTime	;volatile
  1361  0061  3007               	movlw	7
  1362  0062  00AC               	movwf	_RightTime+1	;volatile
  1363                           
  1364                           ;main.c: 298: RightState++;
  1365  0063  3001               	movlw	1
  1366  0064  00F5               	movwf	??_main
  1367  0065  0875               	movf	??_main,w
  1368  0066  07AA               	addwf	main@RightState,f
  1369                           
  1370                           ;main.c: 299: }
  1371                           ;main.c: 300: break;
  1372  0067  28CA               	goto	l1482
  1373  0068                     l1434:	
  1374                           ;main.c: 302: case 5:
  1375                           
  1376                           
  1377                           ;main.c: 303: if (RightTime == 0)
  1378  0068  082B               	movf	_RightTime,w	;volatile
  1379  0069  042C               	iorwf	_RightTime+1,w	;volatile
  1380  006A  1D03               	btfss	3,2
  1381  006B  28CA               	goto	l1482
  1382                           
  1383                           ;main.c: 304: {
  1384                           ;main.c: 305: SetLEDOff(0x01);
  1385  006C  3001               	movlw	1
  1386  006D  21E0               	fcall	_SetLEDOff
  1387                           
  1388                           ;main.c: 306: SetLEDOff(0x02);
  1389  006E  3002               	movlw	2
  1390  006F  21E0               	fcall	_SetLEDOff
  1391                           
  1392                           ;main.c: 307: SetLEDOff(0x04);
  1393  0070  3004               	movlw	4
  1394  0071  21E0               	fcall	_SetLEDOff
  1395                           
  1396                           ;main.c: 308: SetLEDOff(0x08);
  1397  0072  3008               	movlw	8
  1398  0073  21E0               	fcall	_SetLEDOff
  1399                           
  1400                           ;main.c: 309: RightState = 0;
  1401  0074  0020               	movlb	0	; select bank0
  1402  0075  01AA               	clrf	main@RightState
  1403                           
  1404                           ;main.c: 315: }
  1405                           
  1406                           ;main.c: 314: break;
  1407                           
  1408                           ;main.c: 313: default:
  1409                           
  1410                           ;main.c: 310: }
  1411                           ;main.c: 311: break;
  1412  0076  28CA               	goto	l1482
  1413  0077                     l1442:	
  1414  0077  082A               	movf	main@RightState,w
  1415                           
  1416                           ; Switch size 1, requested type "space"
  1417                           ; Number of cases is 6, Range of values is 0 to 5
  1418                           ; switch strategies available:
  1419                           ; Name         Instructions Cycles
  1420                           ; direct_byte           18     6 (fixed)
  1421                           ; simple_byte           19    10 (average)
  1422                           ; jumptable            260     6 (fixed)
  1423                           ;	Chosen strategy is direct_byte
  1424  0078  0084               	movwf	4
  1425  0079  3006               	movlw	6
  1426  007A  0204               	subwf	4,w
  1427  007B  1803               	skipnc
  1428  007C  28CA               	goto	l1482
  1429  007D  3181               	movlp	high S1588
  1430  007E  30EE               	movlw	low S1588
  1431  007F  0704               	addwf	4,w
  1432  0080  0082               	movwf	2
  1433                           
  1434                           ;main.c: 317: switch(LeftState)
  1435  0081  28CA               	goto	l1482
  1436  0082                     l1444:	
  1437                           ;main.c: 323: case 1:
  1438                           
  1439                           ;main.c: 321: break;
  1440                           
  1441                           ;main.c: 318: {
  1442                           ;main.c: 319: case 0:
  1443                           
  1444                           
  1445                           ;main.c: 324: SetLEDOn(0x40);
  1446  0082  3040               	movlw	64
  1447  0083  21D9               	fcall	_SetLEDOn
  1448                           
  1449                           ;main.c: 325: SetLEDOff(0x80);
  1450  0084  3080               	movlw	128
  1451  0085  21E0               	fcall	_SetLEDOff
  1452                           
  1453                           ;main.c: 326: SetLEDOff(0x10);
  1454  0086  3010               	movlw	16
  1455  0087  21E0               	fcall	_SetLEDOff
  1456                           
  1457                           ;main.c: 327: SetLEDOff(0x20);
  1458  0088  3020               	movlw	32
  1459  0089  21E0               	fcall	_SetLEDOff
  1460  008A  28B1               	goto	L2
  1461  008B                     l1450:	
  1462                           ;main.c: 332: case 2:
  1463                           
  1464                           ;main.c: 330: break;
  1465                           
  1466                           ;main.c: 329: LeftState++;
  1467                           
  1468                           ;main.c: 328: LeftTime = 2000;
  1469                           
  1470                           
  1471                           ;main.c: 333: if (LeftTime == 0)
  1472  008B  0877               	movf	_LeftTime,w	;volatile
  1473  008C  0478               	iorwf	_LeftTime+1,w	;volatile
  1474  008D  1D03               	btfss	3,2
  1475  008E  28D4               	goto	l222
  1476                           
  1477                           ;main.c: 334: {
  1478                           ;main.c: 335: SetLEDOff(0x40);
  1479  008F  3040               	movlw	64
  1480  0090  21E0               	fcall	_SetLEDOff
  1481                           
  1482                           ;main.c: 336: SetLEDOn(0x80);
  1483  0091  3080               	movlw	128
  1484  0092  21D9               	fcall	_SetLEDOn
  1485                           
  1486                           ;main.c: 337: SetLEDOff(0x10);
  1487  0093  3010               	movlw	16
  1488  0094  21E0               	fcall	_SetLEDOff
  1489                           
  1490                           ;main.c: 338: SetLEDOff(0x20);
  1491  0095  3020               	movlw	32
  1492  0096  21E0               	fcall	_SetLEDOff
  1493  0097  28B1               	goto	L2
  1494  0098                     l1458:	
  1495                           ;main.c: 344: case 3:
  1496                           
  1497                           ;main.c: 341: }
  1498                           ;main.c: 342: break;
  1499                           
  1500                           ;main.c: 340: LeftState++;
  1501                           
  1502                           ;main.c: 339: LeftTime = 2000;
  1503                           
  1504                           
  1505                           ;main.c: 345: if (LeftTime == 0)
  1506  0098  0877               	movf	_LeftTime,w	;volatile
  1507  0099  0478               	iorwf	_LeftTime+1,w	;volatile
  1508  009A  1D03               	btfss	3,2
  1509  009B  28D4               	goto	l222
  1510                           
  1511                           ;main.c: 346: {
  1512                           ;main.c: 347: SetLEDOff(0x40);
  1513  009C  3040               	movlw	64
  1514  009D  21E0               	fcall	_SetLEDOff
  1515                           
  1516                           ;main.c: 348: SetLEDOff(0x80);
  1517  009E  3080               	movlw	128
  1518  009F  21E0               	fcall	_SetLEDOff
  1519                           
  1520                           ;main.c: 349: SetLEDOn(0x10);
  1521  00A0  3010               	movlw	16
  1522  00A1  21D9               	fcall	_SetLEDOn
  1523                           
  1524                           ;main.c: 350: SetLEDOff(0x20);
  1525  00A2  3020               	movlw	32
  1526  00A3  21E0               	fcall	_SetLEDOff
  1527  00A4  28B1               	goto	L2
  1528  00A5                     l1466:	
  1529                           ;main.c: 356: case 4:
  1530                           
  1531                           ;main.c: 353: }
  1532                           ;main.c: 354: break;
  1533                           
  1534                           ;main.c: 352: LeftState++;
  1535                           
  1536                           ;main.c: 351: LeftTime = 2000;
  1537                           
  1538                           
  1539                           ;main.c: 357: if (LeftTime == 0)
  1540  00A5  0877               	movf	_LeftTime,w	;volatile
  1541  00A6  0478               	iorwf	_LeftTime+1,w	;volatile
  1542  00A7  1D03               	btfss	3,2
  1543  00A8  28D4               	goto	l222
  1544                           
  1545                           ;main.c: 358: {
  1546                           ;main.c: 359: SetLEDOff(0x40);
  1547  00A9  3040               	movlw	64
  1548  00AA  21E0               	fcall	_SetLEDOff
  1549                           
  1550                           ;main.c: 360: SetLEDOff(0x80);
  1551  00AB  3080               	movlw	128
  1552  00AC  21E0               	fcall	_SetLEDOff
  1553                           
  1554                           ;main.c: 361: SetLEDOff(0x10);
  1555  00AD  3010               	movlw	16
  1556  00AE  21E0               	fcall	_SetLEDOff
  1557                           
  1558                           ;main.c: 362: SetLEDOn(0x20);
  1559  00AF  3020               	movlw	32
  1560  00B0  21D9               	fcall	_SetLEDOn
  1561  00B1                     L2:	
  1562                           
  1563                           ;main.c: 363: LeftTime = 2000;
  1564  00B1  30D0               	movlw	208
  1565  00B2  00F7               	movwf	_LeftTime	;volatile
  1566  00B3  3007               	movlw	7
  1567  00B4  00F8               	movwf	_LeftTime+1	;volatile
  1568                           
  1569                           ;main.c: 364: LeftState++;
  1570  00B5  3001               	movlw	1
  1571  00B6  00F5               	movwf	??_main
  1572  00B7  0875               	movf	??_main,w
  1573  00B8  0020               	movlb	0	; select bank0
  1574  00B9  07A9               	addwf	main@LeftState,f
  1575                           
  1576                           ;main.c: 365: }
  1577                           ;main.c: 366: break;
  1578  00BA  28D4               	goto	l222
  1579  00BB                     l1474:	
  1580                           ;main.c: 368: case 5:
  1581                           
  1582                           
  1583                           ;main.c: 369: if (LeftTime == 0)
  1584  00BB  0877               	movf	_LeftTime,w	;volatile
  1585  00BC  0478               	iorwf	_LeftTime+1,w	;volatile
  1586  00BD  1D03               	btfss	3,2
  1587  00BE  28D4               	goto	l222
  1588                           
  1589                           ;main.c: 370: {
  1590                           ;main.c: 371: SetLEDOff(0x40);
  1591  00BF  3040               	movlw	64
  1592  00C0  21E0               	fcall	_SetLEDOff
  1593                           
  1594                           ;main.c: 372: SetLEDOff(0x80);
  1595  00C1  3080               	movlw	128
  1596  00C2  21E0               	fcall	_SetLEDOff
  1597                           
  1598                           ;main.c: 373: SetLEDOff(0x10);
  1599  00C3  3010               	movlw	16
  1600  00C4  21E0               	fcall	_SetLEDOff
  1601                           
  1602                           ;main.c: 374: SetLEDOff(0x20);
  1603  00C5  3020               	movlw	32
  1604  00C6  21E0               	fcall	_SetLEDOff
  1605                           
  1606                           ;main.c: 375: LeftState = 0;
  1607  00C7  0020               	movlb	0	; select bank0
  1608  00C8  01A9               	clrf	main@LeftState
  1609                           
  1610                           ;main.c: 381: }
  1611                           
  1612                           ;main.c: 380: break;
  1613                           
  1614                           ;main.c: 379: default:
  1615                           
  1616                           ;main.c: 376: }
  1617                           ;main.c: 377: break;
  1618  00C9  28D4               	goto	l222
  1619  00CA                     l1482:	
  1620  00CA  0829               	movf	main@LeftState,w
  1621                           
  1622                           ; Switch size 1, requested type "space"
  1623                           ; Number of cases is 6, Range of values is 0 to 5
  1624                           ; switch strategies available:
  1625                           ; Name         Instructions Cycles
  1626                           ; direct_byte           18     6 (fixed)
  1627                           ; simple_byte           19    10 (average)
  1628                           ; jumptable            260     6 (fixed)
  1629                           ;	Chosen strategy is direct_byte
  1630  00CB  0084               	movwf	4
  1631  00CC  3006               	movlw	6
  1632  00CD  0204               	subwf	4,w
  1633  00CE  1803               	skipnc
  1634  00CF  28D4               	goto	l222
  1635  00D0  3181               	movlp	high S1590
  1636  00D1  30F4               	movlw	low S1590
  1637  00D2  0704               	addwf	4,w
  1638  00D3  0082               	movwf	2
  1639  00D4                     l222:	
  1640                           
  1641                           ;main.c: 384: if (PORTAbits.RA2 == 0)
  1642  00D4  190C               	btfsc	12,2	;volatile
  1643  00D5  28DE               	goto	l1488
  1644                           
  1645                           ;main.c: 385: {
  1646                           ;main.c: 386: if (LastLeftButtonState == 0)
  1647  00D6  0827               	movf	main@LastLeftButtonState,w
  1648  00D7  1D03               	btfss	3,2
  1649  00D8  28DB               	goto	l234
  1650                           
  1651                           ;main.c: 387: {
  1652                           ;main.c: 388: LeftState = 1;
  1653  00D9  01A9               	clrf	main@LeftState
  1654  00DA  0AA9               	incf	main@LeftState,f
  1655  00DB                     l234:	
  1656                           
  1657                           ;main.c: 389: }
  1658                           ;main.c: 390: LastLeftButtonState = 1;
  1659  00DB  01A7               	clrf	main@LastLeftButtonState
  1660  00DC  0AA7               	incf	main@LastLeftButtonState,f
  1661                           
  1662                           ;main.c: 391: }
  1663  00DD  28DF               	goto	l1490
  1664  00DE                     l1488:	
  1665                           
  1666                           ;main.c: 392: else
  1667                           ;main.c: 393: {
  1668                           ;main.c: 394: LastLeftButtonState = 0;
  1669  00DE  01A7               	clrf	main@LastLeftButtonState
  1670  00DF                     l1490:	
  1671                           
  1672                           ;main.c: 395: }
  1673                           ;main.c: 398: if (PORTAbits.RA3 == 0)
  1674  00DF  198C               	btfsc	12,3	;volatile
  1675  00E0  28E9               	goto	l1496
  1676                           
  1677                           ;main.c: 399: {
  1678                           ;main.c: 400: if (LastRightButtonState == 0)
  1679  00E1  0828               	movf	main@LastRightButtonState,w
  1680  00E2  1D03               	btfss	3,2
  1681  00E3  28E6               	goto	l237
  1682                           
  1683                           ;main.c: 401: {
  1684                           ;main.c: 402: RightState = 1;
  1685  00E4  01AA               	clrf	main@RightState
  1686  00E5  0AAA               	incf	main@RightState,f
  1687  00E6                     l237:	
  1688                           
  1689                           ;main.c: 403: }
  1690                           ;main.c: 404: LastRightButtonState = 1;
  1691  00E6  01A8               	clrf	main@LastRightButtonState
  1692  00E7  0AA8               	incf	main@LastRightButtonState,f
  1693                           
  1694                           ;main.c: 405: }
  1695  00E8  28EA               	goto	l1498
  1696  00E9                     l1496:	
  1697                           
  1698                           ;main.c: 406: else
  1699                           ;main.c: 407: {
  1700                           ;main.c: 408: LastRightButtonState = 0;
  1701  00E9  01A8               	clrf	main@LastRightButtonState
  1702  00EA                     l1498:	
  1703  00EA  0829               	movf	main@LeftState,w
  1704  00EB  1D03               	btfss	3,2
  1705  00EC  2877               	goto	l1442
  1706  00ED  082A               	movf	main@RightState,w
  1707  00EE  1D03               	btfss	3,2
  1708  00EF  2877               	goto	l1442
  1709                           
  1710                           ;main.c: 409: }
  1711                           ;main.c: 410: }
  1712                           ;main.c: 413: VREGCONbits.VREGPM = 1;
  1713  00F0  0023               	movlb	3	; select bank3
  1714  00F1  1497               	bsf	23,1	;volatile
  1715                           
  1716                           ;main.c: 415: SetAllLEDsOff();
  1717  00F2  221B               	fcall	_SetAllLEDsOff
  1718                           
  1719                           ;main.c: 417: _delay((unsigned long)((50)*(16000000/4000.0)));
  1720  00F3  3002               	movlw	2
  1721  00F4  00F6               	movwf	??_main+1
  1722  00F5  3004               	movlw	4
  1723  00F6  00F5               	movwf	??_main
  1724  00F7  30BA               	movlw	186
  1725  00F8                     u917:	
  1726  00F8  0B89               	decfsz	9,f
  1727  00F9  28F8               	goto	u917
  1728  00FA  0BF5               	decfsz	??_main,f
  1729  00FB  28F8               	goto	u917
  1730  00FC  0BF6               	decfsz	??_main+1,f
  1731  00FD  28F8               	goto	u917
  1732  00FE  3200               	nop2
  1733  00FF  0063               	sleep	;# 
  1734                           
  1735                           ;main.c: 421: LeftTime = 0;
  1736  0100  01F7               	clrf	_LeftTime	;volatile
  1737  0101  01F8               	clrf	_LeftTime+1	;volatile
  1738                           
  1739                           ;main.c: 422: RightTime = 0;
  1740  0102  0020               	movlb	0	; select bank0
  1741  0103  01AB               	clrf	_RightTime	;volatile
  1742  0104  01AC               	clrf	_RightTime+1	;volatile
  1743                           
  1744                           ;main.c: 424: if (PORTAbits.RA2 == 0)
  1745  0105  190C               	btfsc	12,2	;volatile
  1746  0106  2909               	goto	l240
  1747                           
  1748                           ;main.c: 425: {
  1749                           ;main.c: 426: LeftState = 1;
  1750  0107  01A9               	clrf	main@LeftState
  1751  0108  0AA9               	incf	main@LeftState,f
  1752  0109                     l240:	
  1753                           
  1754                           ;main.c: 427: }
  1755                           ;main.c: 428: if (PORTAbits.RA3 == 0)
  1756  0109  198C               	btfsc	12,3	;volatile
  1757  010A  28EA               	goto	l1498
  1758                           
  1759                           ;main.c: 429: {
  1760                           ;main.c: 430: RightState = 1;
  1761  010B  01AA               	clrf	main@RightState
  1762  010C  0AAA               	incf	main@RightState,f
  1763  010D  28EA               	goto	l1498
  1764  010E                     __end_of_main:	
  1765                           
  1766                           	psect	swtext1
  1767  01EE                     __pswtext1:	
  1768  01EE                     S1588:	
  1769  01EE  28CA               	ljmp	l1482
  1770  01EF  282F               	ljmp	l1404
  1771  01F0  2838               	ljmp	l1410
  1772  01F1  2845               	ljmp	l1418
  1773  01F2  2852               	ljmp	l1426
  1774  01F3  2868               	ljmp	l1434
  1775                           
  1776                           	psect	swtext2
  1777  01F4                     __pswtext2:	
  1778  01F4                     S1590:	
  1779  01F4  28D4               	ljmp	l222
  1780  01F5  2882               	ljmp	l1444
  1781  01F6  288B               	ljmp	l1450
  1782  01F7  2898               	ljmp	l1458
  1783  01F8  28A5               	ljmp	l1466
  1784  01F9  28BB               	ljmp	l1474
  1785                           
  1786                           	psect	text1
  1787  01FA                     __ptext1:	
  1788 ;; *************** function _TMR0_SetInterruptHandler *****************
  1789 ;; Defined at:
  1790 ;;		line 129 in file "mcc_generated_files/tmr0.c"
  1791 ;; Parameters:    Size  Location     Type
  1792 ;;  InterruptHan    2    3[COMMON] PTR FTN()void 
  1793 ;;		 -> CharlieplexLEDs(1), 
  1794 ;; Auto vars:     Size  Location     Type
  1795 ;;		None
  1796 ;; Return value:  Size  Location     Type
  1797 ;;                  1    wreg      void 
  1798 ;; Registers used:
  1799 ;;		wreg
  1800 ;; Tracked objects:
  1801 ;;		On entry : 0/0
  1802 ;;		On exit  : 0/0
  1803 ;;		Unchanged: 0/0
  1804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1805 ;;      Params:         2       0       0       0
  1806 ;;      Locals:         0       0       0       0
  1807 ;;      Temps:          0       0       0       0
  1808 ;;      Totals:         2       0       0       0
  1809 ;;Total ram usage:        2 bytes
  1810 ;; Hardware stack levels used:    1
  1811 ;; Hardware stack levels required when called:    4
  1812 ;; This function calls:
  1813 ;;		Nothing
  1814 ;; This function is called by:
  1815 ;;		_main
  1816 ;; This function uses a non-reentrant model
  1817 ;;
  1818                           
  1819                           
  1820                           ;psect for function _TMR0_SetInterruptHandler
  1821  01FA                     _TMR0_SetInterruptHandler:	
  1822                           
  1823                           ;tmr0.c: 130: TMR0_InterruptHandler = InterruptHandler;
  1824                           
  1825                           ;incstack = 0
  1826                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  1827  01FA  0874               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  1828  01FB  0020               	movlb	0	; select bank0
  1829  01FC  00A1               	movwf	_TMR0_InterruptHandler+1
  1830  01FD  0873               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  1831  01FE  00A0               	movwf	_TMR0_InterruptHandler
  1832  01FF  0008               	return
  1833  0200                     __end_of_TMR0_SetInterruptHandler:	
  1834                           
  1835                           	psect	text2
  1836  01D9                     __ptext2:	
  1837 ;; *************** function _SetLEDOn *****************
  1838 ;; Defined at:
  1839 ;;		line 114 in file "main.c"
  1840 ;; Parameters:    Size  Location     Type
  1841 ;;  LED             1    wreg     unsigned char 
  1842 ;; Auto vars:     Size  Location     Type
  1843 ;;  LED             1    4[COMMON] unsigned char 
  1844 ;; Return value:  Size  Location     Type
  1845 ;;                  1    wreg      void 
  1846 ;; Registers used:
  1847 ;;		wreg, status,2, status,0
  1848 ;; Tracked objects:
  1849 ;;		On entry : 0/0
  1850 ;;		On exit  : 0/0
  1851 ;;		Unchanged: 0/0
  1852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1853 ;;      Params:         0       0       0       0
  1854 ;;      Locals:         1       0       0       0
  1855 ;;      Temps:          1       0       0       0
  1856 ;;      Totals:         2       0       0       0
  1857 ;;Total ram usage:        2 bytes
  1858 ;; Hardware stack levels used:    1
  1859 ;; Hardware stack levels required when called:    4
  1860 ;; This function calls:
  1861 ;;		Nothing
  1862 ;; This function is called by:
  1863 ;;		_main
  1864 ;; This function uses a non-reentrant model
  1865 ;;
  1866                           
  1867                           
  1868                           ;psect for function _SetLEDOn
  1869  01D9                     _SetLEDOn:	
  1870                           
  1871                           ;incstack = 0
  1872                           ; Regs used in _SetLEDOn: [wreg+status,2+status,0]
  1873                           ;SetLEDOn@LED stored from wreg
  1874  01D9  00F4               	movwf	SetLEDOn@LED
  1875                           
  1876                           ;main.c: 116: LEDOns = (uint8_t)(LEDOns | LED);
  1877  01DA  0879               	movf	_LEDOns,w	;volatile
  1878  01DB  0474               	iorwf	SetLEDOn@LED,w
  1879  01DC  00F3               	movwf	??_SetLEDOn
  1880  01DD  0873               	movf	??_SetLEDOn,w
  1881  01DE  00F9               	movwf	_LEDOns	;volatile
  1882  01DF  0008               	return
  1883  01E0                     __end_of_SetLEDOn:	
  1884                           
  1885                           	psect	text3
  1886  01E0                     __ptext3:	
  1887 ;; *************** function _SetLEDOff *****************
  1888 ;; Defined at:
  1889 ;;		line 119 in file "main.c"
  1890 ;; Parameters:    Size  Location     Type
  1891 ;;  LED             1    wreg     unsigned char 
  1892 ;; Auto vars:     Size  Location     Type
  1893 ;;  LED             1    4[COMMON] unsigned char 
  1894 ;; Return value:  Size  Location     Type
  1895 ;;                  1    wreg      void 
  1896 ;; Registers used:
  1897 ;;		wreg, status,2, status,0
  1898 ;; Tracked objects:
  1899 ;;		On entry : 0/0
  1900 ;;		On exit  : 0/0
  1901 ;;		Unchanged: 0/0
  1902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1903 ;;      Params:         0       0       0       0
  1904 ;;      Locals:         1       0       0       0
  1905 ;;      Temps:          1       0       0       0
  1906 ;;      Totals:         2       0       0       0
  1907 ;;Total ram usage:        2 bytes
  1908 ;; Hardware stack levels used:    1
  1909 ;; Hardware stack levels required when called:    4
  1910 ;; This function calls:
  1911 ;;		Nothing
  1912 ;; This function is called by:
  1913 ;;		_main
  1914 ;; This function uses a non-reentrant model
  1915 ;;
  1916                           
  1917                           
  1918                           ;psect for function _SetLEDOff
  1919  01E0                     _SetLEDOff:	
  1920                           
  1921                           ;incstack = 0
  1922                           ; Regs used in _SetLEDOff: [wreg+status,2+status,0]
  1923                           ;SetLEDOff@LED stored from wreg
  1924  01E0  00F4               	movwf	SetLEDOff@LED
  1925                           
  1926                           ;main.c: 121: LEDOns = (uint8_t)(LEDOns & ~LED);
  1927  01E1  0974               	comf	SetLEDOff@LED,w
  1928  01E2  0579               	andwf	_LEDOns,w	;volatile
  1929  01E3  00F3               	movwf	??_SetLEDOff
  1930  01E4  0873               	movf	??_SetLEDOff,w
  1931  01E5  00F9               	movwf	_LEDOns	;volatile
  1932  01E6  0008               	return
  1933  01E7                     __end_of_SetLEDOff:	
  1934                           
  1935                           	psect	text4
  1936  021B                     __ptext4:	
  1937 ;; *************** function _SetAllLEDsOff *****************
  1938 ;; Defined at:
  1939 ;;		line 124 in file "main.c"
  1940 ;; Parameters:    Size  Location     Type
  1941 ;;		None
  1942 ;; Auto vars:     Size  Location     Type
  1943 ;;		None
  1944 ;; Return value:  Size  Location     Type
  1945 ;;                  1    wreg      void 
  1946 ;; Registers used:
  1947 ;;		status,2
  1948 ;; Tracked objects:
  1949 ;;		On entry : 0/0
  1950 ;;		On exit  : 0/0
  1951 ;;		Unchanged: 0/0
  1952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1953 ;;      Params:         0       0       0       0
  1954 ;;      Locals:         0       0       0       0
  1955 ;;      Temps:          0       0       0       0
  1956 ;;      Totals:         0       0       0       0
  1957 ;;Total ram usage:        0 bytes
  1958 ;; Hardware stack levels used:    1
  1959 ;; Hardware stack levels required when called:    4
  1960 ;; This function calls:
  1961 ;;		Nothing
  1962 ;; This function is called by:
  1963 ;;		_main
  1964 ;; This function uses a non-reentrant model
  1965 ;;
  1966                           
  1967                           
  1968                           ;psect for function _SetAllLEDsOff
  1969  021B                     _SetAllLEDsOff:	
  1970                           
  1971                           ;main.c: 126: LEDOns = 0;
  1972                           
  1973                           ;incstack = 0
  1974                           ; Regs used in _SetAllLEDsOff: [status,2]
  1975  021B  01F9               	clrf	_LEDOns	;volatile
  1976  021C  0008               	return
  1977  021D                     __end_of_SetAllLEDsOff:	
  1978                           
  1979                           	psect	text5
  1980  0212                     __ptext5:	
  1981 ;; *************** function _SYSTEM_Initialize *****************
  1982 ;; Defined at:
  1983 ;;		line 68 in file "mcc_generated_files/mcc.c"
  1984 ;; Parameters:    Size  Location     Type
  1985 ;;		None
  1986 ;; Auto vars:     Size  Location     Type
  1987 ;;		None
  1988 ;; Return value:  Size  Location     Type
  1989 ;;                  1    wreg      void 
  1990 ;; Registers used:
  1991 ;;		wreg, status,2, status,0, pclath, cstack
  1992 ;; Tracked objects:
  1993 ;;		On entry : 0/0
  1994 ;;		On exit  : 0/0
  1995 ;;		Unchanged: 0/0
  1996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1997 ;;      Params:         0       0       0       0
  1998 ;;      Locals:         0       0       0       0
  1999 ;;      Temps:          0       0       0       0
  2000 ;;      Totals:         0       0       0       0
  2001 ;;Total ram usage:        0 bytes
  2002 ;; Hardware stack levels used:    1
  2003 ;; Hardware stack levels required when called:    6
  2004 ;; This function calls:
  2005 ;;		_OSCILLATOR_Initialize
  2006 ;;		_PIN_MANAGER_Initialize
  2007 ;;		_TMR0_Initialize
  2008 ;;		_WDT_Initialize
  2009 ;; This function is called by:
  2010 ;;		_main
  2011 ;; This function uses a non-reentrant model
  2012 ;;
  2013                           
  2014                           
  2015                           ;psect for function _SYSTEM_Initialize
  2016  0212                     _SYSTEM_Initialize:	
  2017                           
  2018                           ;mcc.c: 71: PIN_MANAGER_Initialize();
  2019                           
  2020                           ;incstack = 0
  2021                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2022  0212  2178               	fcall	_PIN_MANAGER_Initialize
  2023                           
  2024                           ;mcc.c: 72: OSCILLATOR_Initialize();
  2025  0213  21E7               	fcall	_OSCILLATOR_Initialize
  2026                           
  2027                           ;mcc.c: 73: WDT_Initialize();
  2028  0214  2217               	fcall	_WDT_Initialize
  2029                           
  2030                           ;mcc.c: 74: TMR0_Initialize();
  2031  0215  219C               	fcall	_TMR0_Initialize
  2032  0216  0008               	return
  2033  0217                     __end_of_SYSTEM_Initialize:	
  2034                           
  2035                           	psect	text6
  2036  0217                     __ptext6:	
  2037 ;; *************** function _WDT_Initialize *****************
  2038 ;; Defined at:
  2039 ;;		line 87 in file "mcc_generated_files/mcc.c"
  2040 ;; Parameters:    Size  Location     Type
  2041 ;;		None
  2042 ;; Auto vars:     Size  Location     Type
  2043 ;;		None
  2044 ;; Return value:  Size  Location     Type
  2045 ;;                  1    wreg      void 
  2046 ;; Registers used:
  2047 ;;		wreg
  2048 ;; Tracked objects:
  2049 ;;		On entry : 0/0
  2050 ;;		On exit  : 0/0
  2051 ;;		Unchanged: 0/0
  2052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2053 ;;      Params:         0       0       0       0
  2054 ;;      Locals:         0       0       0       0
  2055 ;;      Temps:          0       0       0       0
  2056 ;;      Totals:         0       0       0       0
  2057 ;;Total ram usage:        0 bytes
  2058 ;; Hardware stack levels used:    1
  2059 ;; Hardware stack levels required when called:    4
  2060 ;; This function calls:
  2061 ;;		Nothing
  2062 ;; This function is called by:
  2063 ;;		_SYSTEM_Initialize
  2064 ;; This function uses a non-reentrant model
  2065 ;;
  2066                           
  2067                           
  2068                           ;psect for function _WDT_Initialize
  2069  0217                     _WDT_Initialize:	
  2070                           
  2071                           ;mcc.c: 90: WDTCON = 0x16;
  2072                           
  2073                           ;incstack = 0
  2074                           ; Regs used in _WDT_Initialize: [wreg]
  2075  0217  3016               	movlw	22
  2076  0218  0021               	movlb	1	; select bank1
  2077  0219  0097               	movwf	23	;volatile
  2078  021A  0008               	return
  2079  021B                     __end_of_WDT_Initialize:	
  2080                           
  2081                           	psect	text7
  2082  019C                     __ptext7:	
  2083 ;; *************** function _TMR0_Initialize *****************
  2084 ;; Defined at:
  2085 ;;		line 63 in file "mcc_generated_files/tmr0.c"
  2086 ;; Parameters:    Size  Location     Type
  2087 ;;		None
  2088 ;; Auto vars:     Size  Location     Type
  2089 ;;		None
  2090 ;; Return value:  Size  Location     Type
  2091 ;;                  1    wreg      void 
  2092 ;; Registers used:
  2093 ;;		wreg, status,2
  2094 ;; Tracked objects:
  2095 ;;		On entry : 0/0
  2096 ;;		On exit  : 0/0
  2097 ;;		Unchanged: 0/0
  2098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2099 ;;      Params:         0       0       0       0
  2100 ;;      Locals:         0       0       0       0
  2101 ;;      Temps:          1       0       0       0
  2102 ;;      Totals:         1       0       0       0
  2103 ;;Total ram usage:        1 bytes
  2104 ;; Hardware stack levels used:    1
  2105 ;; Hardware stack levels required when called:    4
  2106 ;; This function calls:
  2107 ;;		Nothing
  2108 ;; This function is called by:
  2109 ;;		_SYSTEM_Initialize
  2110 ;; This function uses a non-reentrant model
  2111 ;;
  2112                           
  2113                           
  2114                           ;psect for function _TMR0_Initialize
  2115  019C                     _TMR0_Initialize:	
  2116                           
  2117                           ;tmr0.c: 68: OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | 0xD1 & 0x3F);
  2118                           
  2119                           ;incstack = 0
  2120                           ; Regs used in _TMR0_Initialize: [wreg+status,2]
  2121  019C  0021               	movlb	1	; select bank1
  2122  019D  0815               	movf	21,w	;volatile
  2123  019E  39C0               	andlw	192
  2124  019F  3811               	iorlw	17
  2125  01A0  0095               	movwf	21	;volatile
  2126                           
  2127                           ;tmr0.c: 71: TMR0 = 0x06;
  2128  01A1  3006               	movlw	6
  2129  01A2  0020               	movlb	0	; select bank0
  2130  01A3  0095               	movwf	21	;volatile
  2131                           
  2132                           ;tmr0.c: 74: timer0ReloadVal= 0x06;
  2133  01A4  3006               	movlw	6
  2134  01A5  00F3               	movwf	??_TMR0_Initialize
  2135  01A6  0873               	movf	??_TMR0_Initialize,w
  2136  01A7  00A6               	movwf	_timer0ReloadVal	;volatile
  2137                           
  2138                           ;tmr0.c: 77: INTCONbits.TMR0IF = 0;
  2139  01A8  110B               	bcf	11,2	;volatile
  2140                           
  2141                           ;tmr0.c: 80: INTCONbits.TMR0IE = 1;
  2142  01A9  168B               	bsf	11,5	;volatile
  2143  01AA  0008               	return
  2144  01AB                     __end_of_TMR0_Initialize:	
  2145                           
  2146                           	psect	text8
  2147  0178                     __ptext8:	
  2148 ;; *************** function _PIN_MANAGER_Initialize *****************
  2149 ;; Defined at:
  2150 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2151 ;; Parameters:    Size  Location     Type
  2152 ;;		None
  2153 ;; Auto vars:     Size  Location     Type
  2154 ;;		None
  2155 ;; Return value:  Size  Location     Type
  2156 ;;                  1    wreg      void 
  2157 ;; Registers used:
  2158 ;;		wreg, status,2, status,0, pclath, cstack
  2159 ;; Tracked objects:
  2160 ;;		On entry : 0/0
  2161 ;;		On exit  : 0/0
  2162 ;;		Unchanged: 0/0
  2163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2164 ;;      Params:         0       0       0       0
  2165 ;;      Locals:         0       0       0       0
  2166 ;;      Temps:          0       0       0       0
  2167 ;;      Totals:         0       0       0       0
  2168 ;;Total ram usage:        0 bytes
  2169 ;; Hardware stack levels used:    1
  2170 ;; Hardware stack levels required when called:    5
  2171 ;; This function calls:
  2172 ;;		_IOCAF2_SetInterruptHandler
  2173 ;;		_IOCAF3_SetInterruptHandler
  2174 ;; This function is called by:
  2175 ;;		_SYSTEM_Initialize
  2176 ;; This function uses a non-reentrant model
  2177 ;;
  2178                           
  2179                           
  2180                           ;psect for function _PIN_MANAGER_Initialize
  2181  0178                     _PIN_MANAGER_Initialize:	
  2182                           
  2183                           ;pin_manager.c: 60: LATA = 0x00;
  2184                           
  2185                           ;incstack = 0
  2186                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2187  0178  0022               	movlb	2	; select bank2
  2188  0179  018C               	clrf	12	;volatile
  2189                           
  2190                           ;pin_manager.c: 65: TRISA = 0x3F;
  2191  017A  303F               	movlw	63
  2192  017B  0021               	movlb	1	; select bank1
  2193  017C  008C               	movwf	12	;volatile
  2194                           
  2195                           ;pin_manager.c: 70: ANSELA = 0x13;
  2196  017D  3013               	movlw	19
  2197  017E  0023               	movlb	3	; select bank3
  2198  017F  008C               	movwf	12	;volatile
  2199                           
  2200                           ;pin_manager.c: 75: WPUA = 0x0C;
  2201  0180  300C               	movlw	12
  2202  0181  0024               	movlb	4	; select bank4
  2203  0182  008C               	movwf	12	;volatile
  2204                           
  2205                           ;pin_manager.c: 76: OPTION_REGbits.nWPUEN = 0;
  2206  0183  0021               	movlb	1	; select bank1
  2207  0184  1395               	bcf	21,7	;volatile
  2208                           
  2209                           ;pin_manager.c: 81: ODCONA = 0x00;
  2210  0185  0025               	movlb	5	; select bank5
  2211  0186  018C               	clrf	12	;volatile
  2212                           
  2213                           ;pin_manager.c: 86: APFCON = 0x00;
  2214  0187  0022               	movlb	2	; select bank2
  2215  0188  019D               	clrf	29	;volatile
  2216                           
  2217                           ;pin_manager.c: 92: IOCAFbits.IOCAF2 = 0;
  2218  0189  0027               	movlb	7	; select bank7
  2219  018A  1113               	bcf	19,2	;volatile
  2220                           
  2221                           ;pin_manager.c: 93: IOCAFbits.IOCAF3 = 0;
  2222  018B  1193               	bcf	19,3	;volatile
  2223                           
  2224                           ;pin_manager.c: 95: IOCANbits.IOCAN2 = 1;
  2225  018C  1512               	bsf	18,2	;volatile
  2226                           
  2227                           ;pin_manager.c: 96: IOCANbits.IOCAN3 = 1;
  2228  018D  1592               	bsf	18,3	;volatile
  2229                           
  2230                           ;pin_manager.c: 98: IOCAPbits.IOCAP2 = 1;
  2231  018E  1511               	bsf	17,2	;volatile
  2232                           
  2233                           ;pin_manager.c: 99: IOCAPbits.IOCAP3 = 1;
  2234  018F  1591               	bsf	17,3	;volatile
  2235                           
  2236                           ;pin_manager.c: 102: IOCAF2_SetInterruptHandler(IOCAF2_DefaultInterruptHandler);
  2237  0190  301E               	movlw	low _IOCAF2_DefaultInterruptHandler
  2238  0191  00F3               	movwf	IOCAF2_SetInterruptHandler@InterruptHandler
  2239  0192  3002               	movlw	high _IOCAF2_DefaultInterruptHandler
  2240  0193  00F4               	movwf	IOCAF2_SetInterruptHandler@InterruptHandler+1
  2241  0194  2206               	fcall	_IOCAF2_SetInterruptHandler
  2242                           
  2243                           ;pin_manager.c: 103: IOCAF3_SetInterruptHandler(IOCAF3_DefaultInterruptHandler);
  2244  0195  301D               	movlw	low _IOCAF3_DefaultInterruptHandler
  2245  0196  00F3               	movwf	IOCAF3_SetInterruptHandler@InterruptHandler
  2246  0197  3002               	movlw	high _IOCAF3_DefaultInterruptHandler
  2247  0198  00F4               	movwf	IOCAF3_SetInterruptHandler@InterruptHandler+1
  2248  0199  2200               	fcall	_IOCAF3_SetInterruptHandler
  2249                           
  2250                           ;pin_manager.c: 106: INTCONbits.IOCIE = 1;
  2251  019A  158B               	bsf	11,3	;volatile
  2252  019B  0008               	return
  2253  019C                     __end_of_PIN_MANAGER_Initialize:	
  2254                           
  2255                           	psect	text9
  2256  0200                     __ptext9:	
  2257 ;; *************** function _IOCAF3_SetInterruptHandler *****************
  2258 ;; Defined at:
  2259 ;;		line 175 in file "mcc_generated_files/pin_manager.c"
  2260 ;; Parameters:    Size  Location     Type
  2261 ;;  InterruptHan    2    3[COMMON] PTR FTN()void 
  2262 ;;		 -> IOCAF3_DefaultInterruptHandler(1), 
  2263 ;; Auto vars:     Size  Location     Type
  2264 ;;		None
  2265 ;; Return value:  Size  Location     Type
  2266 ;;                  1    wreg      void 
  2267 ;; Registers used:
  2268 ;;		wreg
  2269 ;; Tracked objects:
  2270 ;;		On entry : 0/0
  2271 ;;		On exit  : 0/0
  2272 ;;		Unchanged: 0/0
  2273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2274 ;;      Params:         2       0       0       0
  2275 ;;      Locals:         0       0       0       0
  2276 ;;      Temps:          0       0       0       0
  2277 ;;      Totals:         2       0       0       0
  2278 ;;Total ram usage:        2 bytes
  2279 ;; Hardware stack levels used:    1
  2280 ;; Hardware stack levels required when called:    4
  2281 ;; This function calls:
  2282 ;;		Nothing
  2283 ;; This function is called by:
  2284 ;;		_PIN_MANAGER_Initialize
  2285 ;; This function uses a non-reentrant model
  2286 ;;
  2287                           
  2288                           
  2289                           ;psect for function _IOCAF3_SetInterruptHandler
  2290  0200                     _IOCAF3_SetInterruptHandler:	
  2291                           
  2292                           ;pin_manager.c: 176: IOCAF3_InterruptHandler = InterruptHandler;
  2293                           
  2294                           ;incstack = 0
  2295                           ; Regs used in _IOCAF3_SetInterruptHandler: [wreg]
  2296  0200  0874               	movf	IOCAF3_SetInterruptHandler@InterruptHandler+1,w
  2297  0201  0020               	movlb	0	; select bank0
  2298  0202  00A3               	movwf	_IOCAF3_InterruptHandler+1
  2299  0203  0873               	movf	IOCAF3_SetInterruptHandler@InterruptHandler,w
  2300  0204  00A2               	movwf	_IOCAF3_InterruptHandler
  2301  0205  0008               	return
  2302  0206                     __end_of_IOCAF3_SetInterruptHandler:	
  2303                           
  2304                           	psect	text10
  2305  0206                     __ptext10:	
  2306 ;; *************** function _IOCAF2_SetInterruptHandler *****************
  2307 ;; Defined at:
  2308 ;;		line 145 in file "mcc_generated_files/pin_manager.c"
  2309 ;; Parameters:    Size  Location     Type
  2310 ;;  InterruptHan    2    3[COMMON] PTR FTN()void 
  2311 ;;		 -> IOCAF2_DefaultInterruptHandler(1), 
  2312 ;; Auto vars:     Size  Location     Type
  2313 ;;		None
  2314 ;; Return value:  Size  Location     Type
  2315 ;;                  1    wreg      void 
  2316 ;; Registers used:
  2317 ;;		wreg
  2318 ;; Tracked objects:
  2319 ;;		On entry : 0/0
  2320 ;;		On exit  : 0/0
  2321 ;;		Unchanged: 0/0
  2322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2323 ;;      Params:         2       0       0       0
  2324 ;;      Locals:         0       0       0       0
  2325 ;;      Temps:          0       0       0       0
  2326 ;;      Totals:         2       0       0       0
  2327 ;;Total ram usage:        2 bytes
  2328 ;; Hardware stack levels used:    1
  2329 ;; Hardware stack levels required when called:    4
  2330 ;; This function calls:
  2331 ;;		Nothing
  2332 ;; This function is called by:
  2333 ;;		_PIN_MANAGER_Initialize
  2334 ;; This function uses a non-reentrant model
  2335 ;;
  2336                           
  2337                           
  2338                           ;psect for function _IOCAF2_SetInterruptHandler
  2339  0206                     _IOCAF2_SetInterruptHandler:	
  2340                           
  2341                           ;pin_manager.c: 146: IOCAF2_InterruptHandler = InterruptHandler;
  2342                           
  2343                           ;incstack = 0
  2344                           ; Regs used in _IOCAF2_SetInterruptHandler: [wreg]
  2345  0206  0874               	movf	IOCAF2_SetInterruptHandler@InterruptHandler+1,w
  2346  0207  0020               	movlb	0	; select bank0
  2347  0208  00A5               	movwf	_IOCAF2_InterruptHandler+1
  2348  0209  0873               	movf	IOCAF2_SetInterruptHandler@InterruptHandler,w
  2349  020A  00A4               	movwf	_IOCAF2_InterruptHandler
  2350  020B  0008               	return
  2351  020C                     __end_of_IOCAF2_SetInterruptHandler:	
  2352                           
  2353                           	psect	text11
  2354  01E7                     __ptext11:	
  2355 ;; *************** function _OSCILLATOR_Initialize *****************
  2356 ;; Defined at:
  2357 ;;		line 77 in file "mcc_generated_files/mcc.c"
  2358 ;; Parameters:    Size  Location     Type
  2359 ;;		None
  2360 ;; Auto vars:     Size  Location     Type
  2361 ;;		None
  2362 ;; Return value:  Size  Location     Type
  2363 ;;                  1    wreg      void 
  2364 ;; Registers used:
  2365 ;;		wreg, status,2
  2366 ;; Tracked objects:
  2367 ;;		On entry : 0/0
  2368 ;;		On exit  : 0/0
  2369 ;;		Unchanged: 0/0
  2370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2371 ;;      Params:         0       0       0       0
  2372 ;;      Locals:         0       0       0       0
  2373 ;;      Temps:          0       0       0       0
  2374 ;;      Totals:         0       0       0       0
  2375 ;;Total ram usage:        0 bytes
  2376 ;; Hardware stack levels used:    1
  2377 ;; Hardware stack levels required when called:    4
  2378 ;; This function calls:
  2379 ;;		Nothing
  2380 ;; This function is called by:
  2381 ;;		_SYSTEM_Initialize
  2382 ;; This function uses a non-reentrant model
  2383 ;;
  2384                           
  2385                           
  2386                           ;psect for function _OSCILLATOR_Initialize
  2387  01E7                     _OSCILLATOR_Initialize:	
  2388                           
  2389                           ;mcc.c: 80: OSCCON = 0x78;
  2390                           
  2391                           ;incstack = 0
  2392                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2393  01E7  3078               	movlw	120
  2394  01E8  0021               	movlb	1	; select bank1
  2395  01E9  0099               	movwf	25	;volatile
  2396                           
  2397                           ;mcc.c: 82: OSCTUNE = 0x00;
  2398  01EA  0198               	clrf	24	;volatile
  2399                           
  2400                           ;mcc.c: 84: BORCON = 0x00;
  2401  01EB  0022               	movlb	2	; select bank2
  2402  01EC  0196               	clrf	22	;volatile
  2403  01ED  0008               	return
  2404  01EE                     __end_of_OSCILLATOR_Initialize:	
  2405                           
  2406                           	psect	intentry
  2407  0004                     __pintentry:	
  2408 ;; *************** function _INTERRUPT_InterruptManager *****************
  2409 ;; Defined at:
  2410 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  2411 ;; Parameters:    Size  Location     Type
  2412 ;;		None
  2413 ;; Auto vars:     Size  Location     Type
  2414 ;;		None
  2415 ;; Return value:  Size  Location     Type
  2416 ;;                  1    wreg      void 
  2417 ;; Registers used:
  2418 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2419 ;; Tracked objects:
  2420 ;;		On entry : 0/0
  2421 ;;		On exit  : 0/0
  2422 ;;		Unchanged: 0/0
  2423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2424 ;;      Params:         0       0       0       0
  2425 ;;      Locals:         0       0       0       0
  2426 ;;      Temps:          1       0       0       0
  2427 ;;      Totals:         1       0       0       0
  2428 ;;Total ram usage:        1 bytes
  2429 ;; Hardware stack levels used:    1
  2430 ;; Hardware stack levels required when called:    3
  2431 ;; This function calls:
  2432 ;;		_PIN_MANAGER_IOC
  2433 ;;		_TMR0_ISR
  2434 ;; This function is called by:
  2435 ;;		Interrupt level 1
  2436 ;; This function uses a non-reentrant model
  2437 ;;
  2438                           
  2439  0004                     _INTERRUPT_InterruptManager:	
  2440                           
  2441                           ;incstack = 0
  2442  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  2443                           
  2444                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2445  0005  3180               	pagesel	$
  2446  0006  0020               	movlb	0	; select bank0
  2447  0007  087F               	movf	127,w
  2448  0008  00F2               	movwf	??_INTERRUPT_InterruptManager
  2449                           
  2450                           ;interrupt_manager.c: 54: if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
  2451  0009  1A8B               	btfsc	11,5	;volatile
  2452  000A  1D0B               	btfss	11,2	;volatile
  2453  000B  280E               	goto	i1l102
  2454                           
  2455                           ;interrupt_manager.c: 55: {
  2456                           ;interrupt_manager.c: 56: TMR0_ISR();
  2457  000C  220C               	fcall	_TMR0_ISR
  2458                           
  2459                           ;interrupt_manager.c: 57: }
  2460  000D  2812               	goto	i1l106
  2461  000E                     i1l102:	
  2462                           
  2463                           ;interrupt_manager.c: 58: else if(INTCONbits.IOCIE == 1 && INTCONbits.IOCIF == 1)
  2464  000E  198B               	btfsc	11,3	;volatile
  2465  000F  1C0B               	btfss	11,0	;volatile
  2466  0010  2812               	goto	i1l106
  2467                           
  2468                           ;interrupt_manager.c: 59: {
  2469                           ;interrupt_manager.c: 60: PIN_MANAGER_IOC();
  2470  0011  21D0               	fcall	_PIN_MANAGER_IOC
  2471  0012                     i1l106:	
  2472                           ;interrupt_manager.c: 62: else
  2473                           ;interrupt_manager.c: 63: {
  2474                           
  2475                           ;interrupt_manager.c: 61: }
  2476                           
  2477  0012  0872               	movf	??_INTERRUPT_InterruptManager,w
  2478  0013  0020               	movlb	0	; select bank0
  2479  0014  00FF               	movwf	127
  2480  0015  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2481  0016  0009               	retfie
  2482  0017                     __end_of_INTERRUPT_InterruptManager:	
  2483                           
  2484                           	psect	text13
  2485  020C                     __ptext13:	
  2486 ;; *************** function _TMR0_ISR *****************
  2487 ;; Defined at:
  2488 ;;		line 104 in file "mcc_generated_files/tmr0.c"
  2489 ;; Parameters:    Size  Location     Type
  2490 ;;		None
  2491 ;; Auto vars:     Size  Location     Type
  2492 ;;		None
  2493 ;; Return value:  Size  Location     Type
  2494 ;;                  1    wreg      void 
  2495 ;; Registers used:
  2496 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2497 ;; Tracked objects:
  2498 ;;		On entry : 0/0
  2499 ;;		On exit  : 0/0
  2500 ;;		Unchanged: 0/0
  2501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2502 ;;      Params:         0       0       0       0
  2503 ;;      Locals:         0       0       0       0
  2504 ;;      Temps:          0       0       0       0
  2505 ;;      Totals:         0       0       0       0
  2506 ;;Total ram usage:        0 bytes
  2507 ;; Hardware stack levels used:    1
  2508 ;; Hardware stack levels required when called:    2
  2509 ;; This function calls:
  2510 ;;		_TMR0_CallBack
  2511 ;; This function is called by:
  2512 ;;		_INTERRUPT_InterruptManager
  2513 ;; This function uses a non-reentrant model
  2514 ;;
  2515                           
  2516                           
  2517                           ;psect for function _TMR0_ISR
  2518  020C                     _TMR0_ISR:	
  2519                           
  2520                           ;tmr0.c: 108: INTCONbits.TMR0IF = 0;
  2521                           
  2522                           ;incstack = 0
  2523                           ; Regs used in _TMR0_ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2524  020C  110B               	bcf	11,2	;volatile
  2525                           
  2526                           ;tmr0.c: 110: TMR0 = timer0ReloadVal;
  2527  020D  0020               	movlb	0	; select bank0
  2528  020E  0826               	movf	_timer0ReloadVal,w	;volatile
  2529  020F  0095               	movwf	21	;volatile
  2530                           
  2531                           ;tmr0.c: 114: TMR0_CallBack();
  2532  0210  21C5               	fcall	_TMR0_CallBack
  2533  0211  0008               	return
  2534  0212                     __end_of_TMR0_ISR:	
  2535                           
  2536                           	psect	text14
  2537  01C5                     __ptext14:	
  2538 ;; *************** function _TMR0_CallBack *****************
  2539 ;; Defined at:
  2540 ;;		line 119 in file "mcc_generated_files/tmr0.c"
  2541 ;; Parameters:    Size  Location     Type
  2542 ;;		None
  2543 ;; Auto vars:     Size  Location     Type
  2544 ;;		None
  2545 ;; Return value:  Size  Location     Type
  2546 ;;                  1    wreg      void 
  2547 ;; Registers used:
  2548 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2549 ;; Tracked objects:
  2550 ;;		On entry : 0/0
  2551 ;;		On exit  : 0/0
  2552 ;;		Unchanged: 0/0
  2553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2554 ;;      Params:         0       0       0       0
  2555 ;;      Locals:         0       0       0       0
  2556 ;;      Temps:          0       0       0       0
  2557 ;;      Totals:         0       0       0       0
  2558 ;;Total ram usage:        0 bytes
  2559 ;; Hardware stack levels used:    1
  2560 ;; Hardware stack levels required when called:    1
  2561 ;; This function calls:
  2562 ;;		Absolute function
  2563 ;;		_CharlieplexLEDs
  2564 ;; This function is called by:
  2565 ;;		_TMR0_ISR
  2566 ;; This function uses a non-reentrant model
  2567 ;;
  2568                           
  2569                           
  2570                           ;psect for function _TMR0_CallBack
  2571  01C5                     _TMR0_CallBack:	
  2572                           
  2573                           ;tmr0.c: 123: if(TMR0_InterruptHandler)
  2574                           
  2575                           ;incstack = 0
  2576                           ; Regs used in _TMR0_CallBack: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2577  01C5  0020               	movlb	0	; select bank0
  2578  01C6  0820               	movf	_TMR0_InterruptHandler,w
  2579  01C7  0421               	iorwf	_TMR0_InterruptHandler+1,w
  2580  01C8  1903               	btfsc	3,2
  2581  01C9  0008               	return
  2582                           
  2583                           ;tmr0.c: 124: {
  2584                           ;tmr0.c: 125: TMR0_InterruptHandler();
  2585  01CA  0821               	movf	_TMR0_InterruptHandler+1,w
  2586  01CB  008A               	movwf	10
  2587  01CC  0820               	movf	_TMR0_InterruptHandler,w
  2588  01CD  000A               	callw
  2589  01CE  3181               	pagesel	$
  2590  01CF  0008               	return
  2591  01D0                     __end_of_TMR0_CallBack:	
  2592                           
  2593                           	psect	text15
  2594  010E                     __ptext15:	
  2595 ;; *************** function _CharlieplexLEDs *****************
  2596 ;; Defined at:
  2597 ;;		line 129 in file "main.c"
  2598 ;; Parameters:    Size  Location     Type
  2599 ;;		None
  2600 ;; Auto vars:     Size  Location     Type
  2601 ;;  PortTemp        1    1[COMMON] unsigned char 
  2602 ;; Return value:  Size  Location     Type
  2603 ;;                  1    wreg      void 
  2604 ;; Registers used:
  2605 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2606 ;; Tracked objects:
  2607 ;;		On entry : 0/0
  2608 ;;		On exit  : 0/0
  2609 ;;		Unchanged: 0/0
  2610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2611 ;;      Params:         0       0       0       0
  2612 ;;      Locals:         1       0       0       0
  2613 ;;      Temps:          1       0       0       0
  2614 ;;      Totals:         2       0       0       0
  2615 ;;Total ram usage:        2 bytes
  2616 ;; Hardware stack levels used:    1
  2617 ;; This function calls:
  2618 ;;		Nothing
  2619 ;; This function is called by:
  2620 ;;		_main
  2621 ;;		_TMR0_CallBack
  2622 ;; This function uses a non-reentrant model
  2623 ;;
  2624                           
  2625                           
  2626                           ;psect for function _CharlieplexLEDs
  2627  010E                     _CharlieplexLEDs:	
  2628                           
  2629                           ;main.c: 131: uint8_t PortTemp = 0;
  2630                           
  2631                           ;incstack = 0
  2632                           ; Regs used in _CharlieplexLEDs: [wreg-fsr0h+status,2+status,0]
  2633  010E  01F1               	clrf	CharlieplexLEDs@PortTemp
  2634                           
  2635                           ;main.c: 133: if (LeftTime)
  2636  010F  0877               	movf	_LeftTime,w	;volatile
  2637  0110  0478               	iorwf	_LeftTime+1,w	;volatile
  2638  0111  1903               	btfsc	3,2
  2639  0112  2917               	goto	i1l988
  2640                           
  2641                           ;main.c: 134: {
  2642                           ;main.c: 135: LeftTime--;
  2643  0113  3001               	movlw	1
  2644  0114  02F7               	subwf	_LeftTime,f	;volatile
  2645  0115  3000               	movlw	0
  2646  0116  3BF8               	subwfb	_LeftTime+1,f	;volatile
  2647  0117                     i1l988:	
  2648                           
  2649                           ;main.c: 136: }
  2650                           ;main.c: 137: if (RightTime)
  2651  0117  0020               	movlb	0	; select bank0
  2652  0118  082B               	movf	_RightTime,w	;volatile
  2653  0119  042C               	iorwf	_RightTime+1,w	;volatile
  2654  011A  1903               	btfsc	3,2
  2655  011B  2920               	goto	i1l992
  2656                           
  2657                           ;main.c: 138: {
  2658                           ;main.c: 139: RightTime--;
  2659  011C  3001               	movlw	1
  2660  011D  02AB               	subwf	_RightTime,f	;volatile
  2661  011E  3000               	movlw	0
  2662  011F  3BAC               	subwfb	_RightTime+1,f	;volatile
  2663  0120                     i1l992:	
  2664                           
  2665                           ;main.c: 140: }
  2666                           ;main.c: 142: if (LEDOns)
  2667  0120  0879               	movf	_LEDOns,w	;volatile
  2668  0121  1D03               	btfss	3,2
  2669  0122  2956               	goto	i1l1036
  2670  0123  2972               	goto	i1l1046
  2671  0124                     i1l996:	
  2672                           ;main.c: 145: {
  2673                           ;main.c: 146: case LED_STATE_0:
  2674                           
  2675                           ;main.c: 143: {
  2676                           ;main.c: 144: switch (LEDState)
  2677                           
  2678                           
  2679                           ;main.c: 147: TRISA = 0xDC;
  2680  0124  30DC               	movlw	220
  2681  0125  0021               	movlb	1	; select bank1
  2682  0126  008C               	movwf	12	;volatile
  2683                           
  2684                           ;main.c: 148: if (LEDOns & 0x08)
  2685  0127  1DF9               	btfss	_LEDOns,3	;volatile
  2686  0128  292D               	goto	i1l1002
  2687                           
  2688                           ;main.c: 149: {
  2689                           ;main.c: 150: PortTemp = 0x02;
  2690  0129  3002               	movlw	2
  2691  012A  00F0               	movwf	??_CharlieplexLEDs
  2692  012B  0870               	movf	??_CharlieplexLEDs,w
  2693  012C  00F1               	movwf	CharlieplexLEDs@PortTemp
  2694  012D                     i1l1002:	
  2695                           
  2696                           ;main.c: 151: }
  2697                           ;main.c: 152: if (LEDOns & 0x80)
  2698  012D  1FF9               	btfss	_LEDOns,7	;volatile
  2699  012E  2965               	goto	i1l1038
  2700                           
  2701                           ;main.c: 153: {
  2702                           ;main.c: 154: PortTemp |= 0x20;
  2703  012F  16F1               	bsf	CharlieplexLEDs@PortTemp,5
  2704                           
  2705                           ;main.c: 155: }
  2706                           ;main.c: 156: break;
  2707  0130  2965               	goto	i1l1038
  2708  0131                     i1l1006:	
  2709                           ;main.c: 158: case LED_STATE_1:
  2710                           
  2711                           
  2712                           ;main.c: 159: TRISA = 0xEC;
  2713  0131  30EC               	movlw	236
  2714  0132  0021               	movlb	1	; select bank1
  2715  0133  008C               	movwf	12	;volatile
  2716                           
  2717                           ;main.c: 160: if (LEDOns & 0x04)
  2718  0134  1D79               	btfss	_LEDOns,2	;volatile
  2719  0135  2938               	goto	i1l188
  2720                           
  2721                           ;main.c: 161: {
  2722                           ;main.c: 162: PortTemp = 0x01;
  2723  0136  01F1               	clrf	CharlieplexLEDs@PortTemp
  2724  0137  0AF1               	incf	CharlieplexLEDs@PortTemp,f
  2725  0138                     i1l188:	
  2726                           
  2727                           ;main.c: 163: }
  2728                           ;main.c: 164: if (LEDOns & 0x20)
  2729  0138  1EF9               	btfss	_LEDOns,5	;volatile
  2730  0139  2965               	goto	i1l1038
  2731                           
  2732                           ;main.c: 165: {
  2733                           ;main.c: 166: PortTemp |= 0x10;
  2734  013A  1671               	bsf	CharlieplexLEDs@PortTemp,4
  2735                           
  2736                           ;main.c: 167: }
  2737                           ;main.c: 168: break;
  2738  013B  2965               	goto	i1l1038
  2739  013C                     i1l1014:	
  2740                           ;main.c: 170: case LED_STATE_2:
  2741                           
  2742                           
  2743                           ;main.c: 171: TRISA = 0xCD;
  2744  013C  30CD               	movlw	205
  2745  013D  0021               	movlb	1	; select bank1
  2746  013E  008C               	movwf	12	;volatile
  2747                           
  2748                           ;main.c: 172: if (LEDOns & 0x02)
  2749  013F  1CF9               	btfss	_LEDOns,1	;volatile
  2750  0140  2945               	goto	i1l1020
  2751                           
  2752                           ;main.c: 173: {
  2753                           ;main.c: 174: PortTemp = 0x20;
  2754  0141  3020               	movlw	32
  2755  0142  00F0               	movwf	??_CharlieplexLEDs
  2756  0143  0870               	movf	??_CharlieplexLEDs,w
  2757  0144  00F1               	movwf	CharlieplexLEDs@PortTemp
  2758  0145                     i1l1020:	
  2759                           
  2760                           ;main.c: 175: }
  2761                           ;main.c: 176: if (LEDOns & 0x10)
  2762  0145  1E79               	btfss	_LEDOns,4	;volatile
  2763  0146  2965               	goto	i1l1038
  2764                           
  2765                           ;main.c: 177: {
  2766                           ;main.c: 178: PortTemp |= 0x02;
  2767  0147  14F1               	bsf	CharlieplexLEDs@PortTemp,1
  2768                           
  2769                           ;main.c: 179: }
  2770                           ;main.c: 180: break;
  2771  0148  2965               	goto	i1l1038
  2772  0149                     i1l1024:	
  2773                           ;main.c: 182: case LED_STATE_3:
  2774                           
  2775                           
  2776                           ;main.c: 183: TRISA = 0xCE;
  2777  0149  30CE               	movlw	206
  2778  014A  0021               	movlb	1	; select bank1
  2779  014B  008C               	movwf	12	;volatile
  2780                           
  2781                           ;main.c: 184: if (LEDOns & 0x01)
  2782  014C  1C79               	btfss	_LEDOns,0	;volatile
  2783  014D  2952               	goto	i1l1030
  2784                           
  2785                           ;main.c: 185: {
  2786                           ;main.c: 186: PortTemp = 0x10;
  2787  014E  3010               	movlw	16
  2788  014F  00F0               	movwf	??_CharlieplexLEDs
  2789  0150  0870               	movf	??_CharlieplexLEDs,w
  2790  0151  00F1               	movwf	CharlieplexLEDs@PortTemp
  2791  0152                     i1l1030:	
  2792                           
  2793                           ;main.c: 187: }
  2794                           ;main.c: 188: if (LEDOns & 0x40)
  2795  0152  1F79               	btfss	_LEDOns,6	;volatile
  2796  0153  2965               	goto	i1l1038
  2797                           
  2798                           ;main.c: 189: {
  2799                           ;main.c: 190: PortTemp |= 0x01;
  2800  0154  1471               	bsf	CharlieplexLEDs@PortTemp,0
  2801                           
  2802                           ;main.c: 196: }
  2803                           
  2804                           ;main.c: 195: break;
  2805                           
  2806                           ;main.c: 194: default:
  2807                           
  2808                           ;main.c: 191: }
  2809                           ;main.c: 192: break;
  2810  0155  2965               	goto	i1l1038
  2811  0156                     i1l1036:	
  2812  0156  0020               	movlb	0	; select bank0
  2813  0157  082D               	movf	_LEDState,w
  2814                           
  2815                           ; Switch size 1, requested type "space"
  2816                           ; Number of cases is 4, Range of values is 0 to 3
  2817                           ; switch strategies available:
  2818                           ; Name         Instructions Cycles
  2819                           ; simple_byte           13     7 (average)
  2820                           ; direct_byte           14     6 (fixed)
  2821                           ; jumptable            260     6 (fixed)
  2822                           ;	Chosen strategy is simple_byte
  2823  0158  3A00               	xorlw	0	; case 0
  2824  0159  1903               	skipnz
  2825  015A  2924               	goto	i1l996
  2826  015B  3A01               	xorlw	1	; case 1
  2827  015C  1903               	skipnz
  2828  015D  2931               	goto	i1l1006
  2829  015E  3A03               	xorlw	3	; case 2
  2830  015F  1903               	skipnz
  2831  0160  293C               	goto	i1l1014
  2832  0161  3A01               	xorlw	1	; case 3
  2833  0162  1903               	skipnz
  2834  0163  2949               	goto	i1l1024
  2835  0164  2965               	goto	i1l1038
  2836  0165                     i1l1038:	
  2837                           
  2838                           ;main.c: 197: PORTA = PortTemp;
  2839  0165  0871               	movf	CharlieplexLEDs@PortTemp,w
  2840  0166  0020               	movlb	0	; select bank0
  2841  0167  008C               	movwf	12	;volatile
  2842                           
  2843                           ;main.c: 199: LEDState++;
  2844  0168  3001               	movlw	1
  2845  0169  00F0               	movwf	??_CharlieplexLEDs
  2846  016A  0870               	movf	??_CharlieplexLEDs,w
  2847  016B  07AD               	addwf	_LEDState,f
  2848                           
  2849                           ;main.c: 200: if (LEDState > LED_STATE_3)
  2850  016C  3004               	movlw	4
  2851  016D  022D               	subwf	_LEDState,w
  2852  016E  1C03               	skipc
  2853  016F  0008               	return
  2854                           
  2855                           ;main.c: 201: {
  2856                           ;main.c: 202: LEDState = LED_STATE_0;
  2857  0170  01AD               	clrf	_LEDState
  2858                           
  2859                           ;main.c: 203: }
  2860                           ;main.c: 204: }
  2861  0171  0008               	return
  2862  0172                     i1l1046:	
  2863                           
  2864                           ;main.c: 205: else
  2865                           ;main.c: 206: {
  2866                           ;main.c: 208: TRISA = 0xCC;
  2867  0172  30CC               	movlw	204
  2868  0173  0021               	movlb	1	; select bank1
  2869  0174  008C               	movwf	12	;volatile
  2870                           
  2871                           ;main.c: 209: PORTA = 0x00;
  2872  0175  0020               	movlb	0	; select bank0
  2873  0176  018C               	clrf	12	;volatile
  2874  0177  0008               	return
  2875  0178                     __end_of_CharlieplexLEDs:	
  2876                           
  2877                           	psect	text16
  2878  01D0                     __ptext16:	
  2879 ;; *************** function _PIN_MANAGER_IOC *****************
  2880 ;; Defined at:
  2881 ;;		line 110 in file "mcc_generated_files/pin_manager.c"
  2882 ;; Parameters:    Size  Location     Type
  2883 ;;		None
  2884 ;; Auto vars:     Size  Location     Type
  2885 ;;		None
  2886 ;; Return value:  Size  Location     Type
  2887 ;;                  1    wreg      void 
  2888 ;; Registers used:
  2889 ;;		wreg, status,2, status,0, pclath, cstack
  2890 ;; Tracked objects:
  2891 ;;		On entry : 0/0
  2892 ;;		On exit  : 0/0
  2893 ;;		Unchanged: 0/0
  2894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2895 ;;      Params:         0       0       0       0
  2896 ;;      Locals:         0       0       0       0
  2897 ;;      Temps:          0       0       0       0
  2898 ;;      Totals:         0       0       0       0
  2899 ;;Total ram usage:        0 bytes
  2900 ;; Hardware stack levels used:    1
  2901 ;; Hardware stack levels required when called:    2
  2902 ;; This function calls:
  2903 ;;		_IOCAF2_ISR
  2904 ;;		_IOCAF3_ISR
  2905 ;; This function is called by:
  2906 ;;		_INTERRUPT_InterruptManager
  2907 ;; This function uses a non-reentrant model
  2908 ;;
  2909                           
  2910                           
  2911                           ;psect for function _PIN_MANAGER_IOC
  2912  01D0                     _PIN_MANAGER_IOC:	
  2913                           
  2914                           ;pin_manager.c: 113: if(IOCAFbits.IOCAF2 == 1)
  2915                           
  2916                           ;incstack = 0
  2917                           ; Regs used in _PIN_MANAGER_IOC: [wreg+status,2+status,0+pclath+cstack]
  2918  01D0  0027               	movlb	7	; select bank7
  2919  01D1  1D13               	btfss	19,2	;volatile
  2920  01D2  29D4               	goto	i1l1120
  2921                           
  2922                           ;pin_manager.c: 114: {
  2923                           ;pin_manager.c: 115: IOCAF2_ISR();
  2924  01D3  21B8               	fcall	_IOCAF2_ISR
  2925  01D4                     i1l1120:	
  2926                           
  2927                           ;pin_manager.c: 116: }
  2928                           ;pin_manager.c: 119: if(IOCAFbits.IOCAF3 == 1)
  2929  01D4  0027               	movlb	7	; select bank7
  2930  01D5  1D93               	btfss	19,3	;volatile
  2931  01D6  0008               	return
  2932                           
  2933                           ;pin_manager.c: 120: {
  2934                           ;pin_manager.c: 121: IOCAF3_ISR();
  2935  01D7  21AB               	fcall	_IOCAF3_ISR
  2936  01D8  0008               	return
  2937  01D9                     __end_of_PIN_MANAGER_IOC:	
  2938                           
  2939                           	psect	text17
  2940  01AB                     __ptext17:	
  2941 ;; *************** function _IOCAF3_ISR *****************
  2942 ;; Defined at:
  2943 ;;		line 160 in file "mcc_generated_files/pin_manager.c"
  2944 ;; Parameters:    Size  Location     Type
  2945 ;;		None
  2946 ;; Auto vars:     Size  Location     Type
  2947 ;;		None
  2948 ;; Return value:  Size  Location     Type
  2949 ;;                  1    wreg      void 
  2950 ;; Registers used:
  2951 ;;		wreg, status,2, status,0, pclath, cstack
  2952 ;; Tracked objects:
  2953 ;;		On entry : 0/0
  2954 ;;		On exit  : 0/0
  2955 ;;		Unchanged: 0/0
  2956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2957 ;;      Params:         0       0       0       0
  2958 ;;      Locals:         0       0       0       0
  2959 ;;      Temps:          0       0       0       0
  2960 ;;      Totals:         0       0       0       0
  2961 ;;Total ram usage:        0 bytes
  2962 ;; Hardware stack levels used:    1
  2963 ;; Hardware stack levels required when called:    1
  2964 ;; This function calls:
  2965 ;;		Absolute function
  2966 ;;		_IOCAF3_DefaultInterruptHandler
  2967 ;; This function is called by:
  2968 ;;		_PIN_MANAGER_IOC
  2969 ;; This function uses a non-reentrant model
  2970 ;;
  2971                           
  2972                           
  2973                           ;psect for function _IOCAF3_ISR
  2974  01AB                     _IOCAF3_ISR:	
  2975                           
  2976                           ;pin_manager.c: 165: if(IOCAF3_InterruptHandler)
  2977                           
  2978                           ;incstack = 0
  2979                           ; Regs used in _IOCAF3_ISR: [wreg+status,2+status,0+pclath+cstack]
  2980  01AB  0020               	movlb	0	; select bank0
  2981  01AC  0822               	movf	_IOCAF3_InterruptHandler,w
  2982  01AD  0423               	iorwf	_IOCAF3_InterruptHandler+1,w
  2983  01AE  1903               	btfsc	3,2
  2984  01AF  29B5               	goto	i1l1092
  2985                           
  2986                           ;pin_manager.c: 166: {
  2987                           ;pin_manager.c: 167: IOCAF3_InterruptHandler();
  2988  01B0  0823               	movf	_IOCAF3_InterruptHandler+1,w
  2989  01B1  008A               	movwf	10
  2990  01B2  0822               	movf	_IOCAF3_InterruptHandler,w
  2991  01B3  000A               	callw
  2992  01B4  3181               	pagesel	$
  2993  01B5                     i1l1092:	
  2994                           
  2995                           ;pin_manager.c: 168: }
  2996                           ;pin_manager.c: 169: IOCAFbits.IOCAF3 = 0;
  2997  01B5  0027               	movlb	7	; select bank7
  2998  01B6  1193               	bcf	19,3	;volatile
  2999  01B7  0008               	return
  3000  01B8                     __end_of_IOCAF3_ISR:	
  3001                           
  3002                           	psect	text18
  3003  021D                     __ptext18:	
  3004 ;; *************** function _IOCAF3_DefaultInterruptHandler *****************
  3005 ;; Defined at:
  3006 ;;		line 182 in file "mcc_generated_files/pin_manager.c"
  3007 ;; Parameters:    Size  Location     Type
  3008 ;;		None
  3009 ;; Auto vars:     Size  Location     Type
  3010 ;;		None
  3011 ;; Return value:  Size  Location     Type
  3012 ;;                  1    wreg      void 
  3013 ;; Registers used:
  3014 ;;		None
  3015 ;; Tracked objects:
  3016 ;;		On entry : 0/0
  3017 ;;		On exit  : 0/0
  3018 ;;		Unchanged: 0/0
  3019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3020 ;;      Params:         0       0       0       0
  3021 ;;      Locals:         0       0       0       0
  3022 ;;      Temps:          0       0       0       0
  3023 ;;      Totals:         0       0       0       0
  3024 ;;Total ram usage:        0 bytes
  3025 ;; Hardware stack levels used:    1
  3026 ;; This function calls:
  3027 ;;		Nothing
  3028 ;; This function is called by:
  3029 ;;		_PIN_MANAGER_Initialize
  3030 ;;		_IOCAF3_ISR
  3031 ;; This function uses a non-reentrant model
  3032 ;;
  3033                           
  3034                           
  3035                           ;psect for function _IOCAF3_DefaultInterruptHandler
  3036  021D                     _IOCAF3_DefaultInterruptHandler:	
  3037                           
  3038                           ;incstack = 0
  3039                           ; Regs used in _IOCAF3_DefaultInterruptHandler: []
  3040  021D  0008               	return
  3041  021E                     __end_of_IOCAF3_DefaultInterruptHandler:	
  3042                           
  3043                           	psect	text19
  3044  01B8                     __ptext19:	
  3045 ;; *************** function _IOCAF2_ISR *****************
  3046 ;; Defined at:
  3047 ;;		line 130 in file "mcc_generated_files/pin_manager.c"
  3048 ;; Parameters:    Size  Location     Type
  3049 ;;		None
  3050 ;; Auto vars:     Size  Location     Type
  3051 ;;		None
  3052 ;; Return value:  Size  Location     Type
  3053 ;;                  1    wreg      void 
  3054 ;; Registers used:
  3055 ;;		wreg, status,2, status,0, pclath, cstack
  3056 ;; Tracked objects:
  3057 ;;		On entry : 0/0
  3058 ;;		On exit  : 0/0
  3059 ;;		Unchanged: 0/0
  3060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3061 ;;      Params:         0       0       0       0
  3062 ;;      Locals:         0       0       0       0
  3063 ;;      Temps:          0       0       0       0
  3064 ;;      Totals:         0       0       0       0
  3065 ;;Total ram usage:        0 bytes
  3066 ;; Hardware stack levels used:    1
  3067 ;; Hardware stack levels required when called:    1
  3068 ;; This function calls:
  3069 ;;		Absolute function
  3070 ;;		_IOCAF2_DefaultInterruptHandler
  3071 ;; This function is called by:
  3072 ;;		_PIN_MANAGER_IOC
  3073 ;; This function uses a non-reentrant model
  3074 ;;
  3075                           
  3076                           
  3077                           ;psect for function _IOCAF2_ISR
  3078  01B8                     _IOCAF2_ISR:	
  3079                           
  3080                           ;pin_manager.c: 135: if(IOCAF2_InterruptHandler)
  3081                           
  3082                           ;incstack = 0
  3083                           ; Regs used in _IOCAF2_ISR: [wreg+status,2+status,0+pclath+cstack]
  3084  01B8  0020               	movlb	0	; select bank0
  3085  01B9  0824               	movf	_IOCAF2_InterruptHandler,w
  3086  01BA  0425               	iorwf	_IOCAF2_InterruptHandler+1,w
  3087  01BB  1903               	btfsc	3,2
  3088  01BC  29C2               	goto	i1l1086
  3089                           
  3090                           ;pin_manager.c: 136: {
  3091                           ;pin_manager.c: 137: IOCAF2_InterruptHandler();
  3092  01BD  0825               	movf	_IOCAF2_InterruptHandler+1,w
  3093  01BE  008A               	movwf	10
  3094  01BF  0824               	movf	_IOCAF2_InterruptHandler,w
  3095  01C0  000A               	callw
  3096  01C1  3181               	pagesel	$
  3097  01C2                     i1l1086:	
  3098                           
  3099                           ;pin_manager.c: 138: }
  3100                           ;pin_manager.c: 139: IOCAFbits.IOCAF2 = 0;
  3101  01C2  0027               	movlb	7	; select bank7
  3102  01C3  1113               	bcf	19,2	;volatile
  3103  01C4  0008               	return
  3104  01C5                     __end_of_IOCAF2_ISR:	
  3105                           
  3106                           	psect	text20
  3107  021E                     __ptext20:	
  3108 ;; *************** function _IOCAF2_DefaultInterruptHandler *****************
  3109 ;; Defined at:
  3110 ;;		line 152 in file "mcc_generated_files/pin_manager.c"
  3111 ;; Parameters:    Size  Location     Type
  3112 ;;		None
  3113 ;; Auto vars:     Size  Location     Type
  3114 ;;		None
  3115 ;; Return value:  Size  Location     Type
  3116 ;;                  1    wreg      void 
  3117 ;; Registers used:
  3118 ;;		None
  3119 ;; Tracked objects:
  3120 ;;		On entry : 0/0
  3121 ;;		On exit  : 0/0
  3122 ;;		Unchanged: 0/0
  3123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3124 ;;      Params:         0       0       0       0
  3125 ;;      Locals:         0       0       0       0
  3126 ;;      Temps:          0       0       0       0
  3127 ;;      Totals:         0       0       0       0
  3128 ;;Total ram usage:        0 bytes
  3129 ;; Hardware stack levels used:    1
  3130 ;; This function calls:
  3131 ;;		Nothing
  3132 ;; This function is called by:
  3133 ;;		_PIN_MANAGER_Initialize
  3134 ;;		_IOCAF2_ISR
  3135 ;; This function uses a non-reentrant model
  3136 ;;
  3137                           
  3138                           
  3139                           ;psect for function _IOCAF2_DefaultInterruptHandler
  3140  021E                     _IOCAF2_DefaultInterruptHandler:	
  3141                           
  3142                           ;incstack = 0
  3143                           ; Regs used in _IOCAF2_DefaultInterruptHandler: []
  3144  021E  0008               	return
  3145  021F                     __end_of_IOCAF2_DefaultInterruptHandler:	
  3146  007E                     btemp	set	126	;btemp
  3147  007E                     int$flags	set	126
  3148  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         6
    Persistent  7
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80      4      14
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CharlieplexLEDs(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CharlieplexLEDs(), Absolute function(), 

    IOCAF3_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCAF3_DefaultInterruptHandler(), 

    IOCAF3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), IOCAF3_DefaultInterruptHandler(), 

    IOCAF2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCAF2_DefaultInterruptHandler(), 

    IOCAF2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), IOCAF2_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _main->_SetLEDOff
    _main->_SetLEDOn
    _main->_TMR0_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCAF2_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCAF3_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR0_CallBack->_CharlieplexLEDs

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0     602
                                              5 COMMON     2     2      0
                                              0 BANK0      4     4      0
                  _SYSTEM_Initialize
                      _SetAllLEDsOff
                          _SetLEDOff
                           _SetLEDOn
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2      96
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SetLEDOn                                             2     2      0      31
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _SetLEDOff                                            2     2      0      31
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _SetAllLEDsOff                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     192
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     192
         _IOCAF2_SetInterruptHandler
         _IOCAF3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCAF3_SetInterruptHandler                           2     0      2      96
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _IOCAF2_SetInterruptHandler                           2     0      2      96
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           1     1      0      31
                                              2 COMMON     1     1      0
                    _PIN_MANAGER_IOC
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0      31
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (6) _TMR0_CallBack                                        0     0      0      31
                   Absolute function *
                    _CharlieplexLEDs *
 ---------------------------------------------------------------------------------
 (7) _CharlieplexLEDs                                      2     2      0      31
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) _PIN_MANAGER_IOC                                      0     0      0       0
                         _IOCAF2_ISR
                         _IOCAF3_ISR
 ---------------------------------------------------------------------------------
 (6) _IOCAF3_ISR                                           0     0      0       0
                   Absolute function *
     _IOCAF3_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _IOCAF3_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _IOCAF2_ISR                                           0     0      0       0
                   Absolute function *
     _IOCAF2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _IOCAF2_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCAF2_SetInterruptHandler
       _IOCAF3_SetInterruptHandler
     _TMR0_Initialize
     _WDT_Initialize
   _SetAllLEDsOff
   _SetLEDOff
   _SetLEDOn
   _TMR0_SetInterruptHandler

 _INTERRUPT_InterruptManager (ROOT)
   _PIN_MANAGER_IOC
     _IOCAF2_ISR
       Absolute function(Fake) *
       _IOCAF2_DefaultInterruptHandler *
     _IOCAF3_ISR
       Absolute function(Fake) *
       _IOCAF3_DefaultInterruptHandler *
   _TMR0_ISR
     _TMR0_CallBack
       Absolute function(Fake) *
       _CharlieplexLEDs *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      18       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      4       E       6       17.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      18      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon Apr 16 13:24:20 2018

                                         pc 0002                                 __CFG_CP$OFF 0000  
                           _timer0ReloadVal 0026                    main@LastRightButtonState 0028  
                                       l222 00D4                                         l240 0109  
                                       l234 00DB                                         l237 00E6  
                                       u917 00F8                                __CFG_BORV$LO 0000  
                                       wreg 0009          __end_of_IOCAF2_SetInterruptHandler 020C  
                _IOCAF2_SetInterruptHandler 0206                                        S1590 01F4  
                                      S1588 01EE                                __CFG_LVP$OFF 0000  
                                      l1410 0038                                        l1404 002F  
                                      l1450 008B                                        l1434 0068  
                                      l1426 0052                                        l1418 0045  
                                      l1442 0077                                        l1444 0082  
                             main@LeftState 0029                                        l1490 00DF  
                                      l1474 00BB                                        l1466 00A5  
                                      l1458 0098                                        l1482 00CA  
                                      l1496 00E9                                        l1488 00DE  
                                      l1498 00EA                                        _LATA 010C  
                                      _TMR0 0015                                        _WPUA 020C  
                              __CFG_WRT$OFF 0000                                        _main 0022  
                                      fsr0l 0004                                        btemp 007E  
                                      start 0017                     __end_of_TMR0_Initialize 01AB  
            __size_of_OSCILLATOR_Initialize 0007                         __size_of_IOCAF2_ISR 000D  
                       __size_of_IOCAF3_ISR 000D               __end_of_OSCILLATOR_Initialize 01EE  
                                     ?_main 0070                               __CFG_WDTE$OFF 0000  
                                     i1l102 000E                                       i1l106 0012  
                                     i1l188 0138                                       i1l992 0120  
                                     i1l996 0124                                       i1l988 0117  
                                     _PORTA 000C                                       _TRISA 008C  
         __size_of_TMR0_SetInterruptHandler 0006                   ?_TMR0_SetInterruptHandler 0073  
                          __end_of_TMR0_ISR 0212                     __end_of_PIN_MANAGER_IOC 01D9  
                            _WDT_Initialize 0217                              __CFG_BOREN$OFF 0000  
                                     pclath 000A                                       status 0003  
                                     wtemp0 007E                                 SetLEDOn@LED 0074  
                            __CFG_MCLRE$OFF 0000                             __initialization 0018  
                              __end_of_main 010E                            __end_of_SetLEDOn 01E0  
               ?_INTERRUPT_InterruptManager 0070                                      ??_main 0075  
                            main@RightState 002A                              __CFG_PLLEN$OFF 0000  
                    __end_of_WDT_Initialize 021B                      __size_of_SetAllLEDsOff 0002  
              ??_IOCAF3_SetInterruptHandler 0075                                      _APFCON 011D  
                                    _ANSELA 018C                                      _BORCON 0116  
                                    i1l1002 012D                                      i1l1020 0145  
                                    i1l1030 0152                                      i1l1014 013C  
                                    i1l1006 0131                                      i1l1120 01D4  
                                    i1l1024 0149                                      i1l1036 0156  
                                    i1l1038 0165                                      i1l1046 0172  
                                    i1l1092 01B5                                      i1l1086 01C2  
                                    _ODCONA 028C                                      _LEDOns 0079  
                                    _OSCCON 0099                                      _WDTCON 0097  
                        __size_of_SetLEDOff 0007                              __CFG_PWRTE$OFF 0000  
                            __CFG_STVREN$ON 0000                            ?_TMR0_Initialize 0070  
       __size_of_IOCAF3_SetInterruptHandler 0006                             ?_WDT_Initialize 0070  
                     __end_of_TMR0_CallBack 01D0    TMR0_SetInterruptHandler@InterruptHandler 0073  
IOCAF3_SetInterruptHandler@InterruptHandler 0073  IOCAF2_SetInterruptHandler@InterruptHandler 0073  
                          ?_PIN_MANAGER_IOC 0070                                ??_IOCAF2_ISR 0070  
                   CharlieplexLEDs@PortTemp 0071                                ??_IOCAF3_ISR 0070  
                         _SYSTEM_Initialize 0212                     __end_of__initialization 001F  
                   main@LastLeftButtonState 0027                          ?_SYSTEM_Initialize 0070  
                              SetLEDOff@LED 0074                               _SetAllLEDsOff 021B  
                            __pcstackCOMMON 0070                         ??_SYSTEM_Initialize 0075  
                                 ?_TMR0_ISR 0070                          __end_of_IOCAF2_ISR 01C5  
                        __end_of_IOCAF3_ISR 01B8                           __end_of_SetLEDOff 01E7  
                            _OPTION_REGbits 0095                 ?_IOCAF2_SetInterruptHandler 0073  
          ??_IOCAF2_DefaultInterruptHandler 0070             ?_IOCAF2_DefaultInterruptHandler 0070  
                 __end_of_SYSTEM_Initialize 0217                                  __pbssBANK0 002B  
                                 ?_SetLEDOn 0070                    __size_of_CharlieplexLEDs 006A  
                            ?_SetAllLEDsOff 0070                                  __pmaintext 0022  
          __end_of_TMR0_SetInterruptHandler 0200                                  ??_TMR0_ISR 0072  
                                __pintentry 0004          __end_of_IOCAF3_SetInterruptHandler 0206  
                _IOCAF3_SetInterruptHandler 0200                                     _OSCTUNE 0098  
                                ??_SetLEDOn 0073                                     __ptext1 01FA  
                                   __ptext2 01D9                                     __ptext3 01E0  
                                   __ptext4 021B                                     __ptext5 0212  
                                   __ptext6 0217                                     __ptext7 019C  
                                   __ptext8 0178                                     __ptext9 0200  
                     _OSCILLATOR_Initialize 01E7                    ??_PIN_MANAGER_Initialize 0075  
                                 _IOCAFbits 0393                                   _IOCANbits 0392  
                                 _IOCAPbits 0391                  __size_of_SYSTEM_Initialize 0005  
                      end_of_initialization 001F                             ??_SetAllLEDsOff 0073  
                         ??_CharlieplexLEDs 0070                            ??_WDT_Initialize 0073  
                  _TMR0_SetInterruptHandler 01FA                                   _PORTAbits 000C  
                          __CFG_FOSC$INTOSC 0000                           __size_of_TMR0_ISR 0006  
                    ?_OSCILLATOR_Initialize 0070                         start_initialization 0018  
                  __size_of_TMR0_Initialize 000F             __size_of_PIN_MANAGER_Initialize 0024  
                                 _SetLEDOff 01E0                                   _RightTime 002B  
                  __size_of_PIN_MANAGER_IOC 0009                           __size_of_SetLEDOn 0007  
    __end_of_IOCAF2_DefaultInterruptHandler 021F     __size_of_IOCAF2_DefaultInterruptHandler 0001  
            _IOCAF2_DefaultInterruptHandler 021E                            __CFG_LPBOREN$OFF 0000  
                    __size_of_TMR0_CallBack 000B                                 __pbssCOMMON 0077  
                                 ___latbits 0000                               __pcstackBANK0 0027  
               ?_IOCAF3_SetInterruptHandler 0073                                  ?_SetLEDOff 0070  
          ??_IOCAF3_DefaultInterruptHandler 0070             ?_IOCAF3_DefaultInterruptHandler 0070  
                     _TMR0_InterruptHandler 0020                                   __pnvBANK0 0020  
                    _PIN_MANAGER_Initialize 0178                ??_INTERRUPT_InterruptManager 0072  
                                 __pswtext1 01EE                                   __pswtext2 01F4  
                             _TMR0_CallBack 01C5                           ??_TMR0_Initialize 0073  
                           _CharlieplexLEDs 010E                                    _LEDState 002D  
       __size_of_INTERRUPT_InterruptManager 0013                  ??_TMR0_SetInterruptHandler 0075  
                                  _TMR0_ISR 020C                           ??_PIN_MANAGER_IOC 0070  
                               ??_SetLEDOff 0073                              ?_TMR0_CallBack 0070  
                                  _LeftTime 0077                                    _SetLEDOn 01D9  
                     __end_of_SetAllLEDsOff 021D                     ??_OSCILLATOR_Initialize 0073  
                   _IOCAF2_InterruptHandler 0024                     __end_of_CharlieplexLEDs 0178  
              ??_IOCAF2_SetInterruptHandler 0075                                    __ptext10 0206  
                                  __ptext11 01E7                                    __ptext20 021E  
                                  __ptext13 020C                                    __ptext14 01C5  
                                  __ptext15 010E                                    __ptext16 01D0  
                                  __ptext17 01AB                                    __ptext18 021D  
                                  __ptext19 01B8                                  _IOCAF2_ISR 01B8  
                                _IOCAF3_ISR 01AB                               __size_of_main 00EC  
                                  int$flags 007E          __end_of_INTERRUPT_InterruptManager 0017  
                _INTERRUPT_InterruptManager 0004         __size_of_IOCAF2_SetInterruptHandler 0006  
                                _INTCONbits 000B                             ??_TMR0_CallBack 0072  
                   __size_of_WDT_Initialize 0004                                    intlevel1 0000  
                   ?_PIN_MANAGER_Initialize 0070                           __CFG_CLKOUTEN$OFF 0000  
    __end_of_IOCAF3_DefaultInterruptHandler 021E     __size_of_IOCAF3_DefaultInterruptHandler 0001  
            _IOCAF3_DefaultInterruptHandler 021D                                  _OPTION_REG 0095  
                           _TMR0_Initialize 019C                                 _VREGCONbits 0197  
                          ?_CharlieplexLEDs 0070                                 ?_IOCAF2_ISR 0070  
                               ?_IOCAF3_ISR 0070              __end_of_PIN_MANAGER_Initialize 019C  
                           _PIN_MANAGER_IOC 01D0                     _IOCAF3_InterruptHandler 0022  
