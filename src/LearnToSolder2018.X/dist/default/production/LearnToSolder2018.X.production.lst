

Microchip Technology PIC PRO Macro Assembler V1.45 build -152302408 
                                                                                               Wed May 09 21:58:54 2018

Microchip Technology Omniscient Code Generator v1.45 (PRO mode) build 201711160504
     1                           	processor	12F1572
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	swtext1,local,class=CONST,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	swtext2,local,class=CONST,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	intentry,global,class=CODE,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	pa_nodes0,global,class=CODE,delta=2
    39                           	dabs	1,0x7E,2
    40  0000                     
    41                           ; Version 1.45
    42                           ; Generated 16/11/2017 GMT
    43                           ; 
    44                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC12F1572 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75  0000                     	;# 
    76  0001                     	;# 
    77  0002                     	;# 
    78  0003                     	;# 
    79  0004                     	;# 
    80  0005                     	;# 
    81  0006                     	;# 
    82  0007                     	;# 
    83  0008                     	;# 
    84  0009                     	;# 
    85  000A                     	;# 
    86  000B                     	;# 
    87  000C                     	;# 
    88  0011                     	;# 
    89  0012                     	;# 
    90  0013                     	;# 
    91  0015                     	;# 
    92  0016                     	;# 
    93  0016                     	;# 
    94  0017                     	;# 
    95  0018                     	;# 
    96  0019                     	;# 
    97  001A                     	;# 
    98  001B                     	;# 
    99  001C                     	;# 
   100  008C                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0095                     	;# 
   105  0096                     	;# 
   106  0097                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  010C                     	;# 
   117  0111                     	;# 
   118  0112                     	;# 
   119  0115                     	;# 
   120  0116                     	;# 
   121  0117                     	;# 
   122  0118                     	;# 
   123  0119                     	;# 
   124  011D                     	;# 
   125  011D                     	;# 
   126  018C                     	;# 
   127  0191                     	;# 
   128  0191                     	;# 
   129  0192                     	;# 
   130  0193                     	;# 
   131  0193                     	;# 
   132  0194                     	;# 
   133  0195                     	;# 
   134  0196                     	;# 
   135  0197                     	;# 
   136  0199                     	;# 
   137  019A                     	;# 
   138  019B                     	;# 
   139  019B                     	;# 
   140  019C                     	;# 
   141  019D                     	;# 
   142  019E                     	;# 
   143  019F                     	;# 
   144  020C                     	;# 
   145  028C                     	;# 
   146  030C                     	;# 
   147  038C                     	;# 
   148  0391                     	;# 
   149  0392                     	;# 
   150  0393                     	;# 
   151  0691                     	;# 
   152  0692                     	;# 
   153  0693                     	;# 
   154  0694                     	;# 
   155  0695                     	;# 
   156  0D8E                     	;# 
   157  0D8F                     	;# 
   158  0D90                     	;# 
   159  0D91                     	;# 
   160  0D91                     	;# 
   161  0D92                     	;# 
   162  0D93                     	;# 
   163  0D93                     	;# 
   164  0D94                     	;# 
   165  0D95                     	;# 
   166  0D95                     	;# 
   167  0D96                     	;# 
   168  0D97                     	;# 
   169  0D97                     	;# 
   170  0D98                     	;# 
   171  0D99                     	;# 
   172  0D99                     	;# 
   173  0D9A                     	;# 
   174  0D9B                     	;# 
   175  0D9C                     	;# 
   176  0D9C                     	;# 
   177  0D9D                     	;# 
   178  0D9D                     	;# 
   179  0D9E                     	;# 
   180  0D9F                     	;# 
   181  0DA0                     	;# 
   182  0DA1                     	;# 
   183  0DA1                     	;# 
   184  0DA2                     	;# 
   185  0DA3                     	;# 
   186  0DA3                     	;# 
   187  0DA4                     	;# 
   188  0DA5                     	;# 
   189  0DA5                     	;# 
   190  0DA6                     	;# 
   191  0DA7                     	;# 
   192  0DA7                     	;# 
   193  0DA8                     	;# 
   194  0DA9                     	;# 
   195  0DA9                     	;# 
   196  0DAA                     	;# 
   197  0DAB                     	;# 
   198  0DAC                     	;# 
   199  0DAC                     	;# 
   200  0DAD                     	;# 
   201  0DAD                     	;# 
   202  0DAE                     	;# 
   203  0DAF                     	;# 
   204  0DB0                     	;# 
   205  0DB1                     	;# 
   206  0DB1                     	;# 
   207  0DB2                     	;# 
   208  0DB3                     	;# 
   209  0DB3                     	;# 
   210  0DB4                     	;# 
   211  0DB5                     	;# 
   212  0DB5                     	;# 
   213  0DB6                     	;# 
   214  0DB7                     	;# 
   215  0DB7                     	;# 
   216  0DB8                     	;# 
   217  0DB9                     	;# 
   218  0DB9                     	;# 
   219  0DBA                     	;# 
   220  0DBB                     	;# 
   221  0DBC                     	;# 
   222  0DBC                     	;# 
   223  0DBD                     	;# 
   224  0DBD                     	;# 
   225  0DBE                     	;# 
   226  0DBF                     	;# 
   227  0DC0                     	;# 
   228  0FE4                     	;# 
   229  0FE5                     	;# 
   230  0FE6                     	;# 
   231  0FE7                     	;# 
   232  0FE8                     	;# 
   233  0FE8                     	;# 
   234  0FE9                     	;# 
   235  0FEA                     	;# 
   236  0FEA                     	;# 
   237  0FEB                     	;# 
   238  0FED                     	;# 
   239  0FEE                     	;# 
   240  0FEE                     	;# 
   241  0FEF                     	;# 
   242  0000                     	;# 
   243  0001                     	;# 
   244  0002                     	;# 
   245  0003                     	;# 
   246  0004                     	;# 
   247  0005                     	;# 
   248  0006                     	;# 
   249  0007                     	;# 
   250  0008                     	;# 
   251  0009                     	;# 
   252  000A                     	;# 
   253  000B                     	;# 
   254  000C                     	;# 
   255  0011                     	;# 
   256  0012                     	;# 
   257  0013                     	;# 
   258  0015                     	;# 
   259  0016                     	;# 
   260  0016                     	;# 
   261  0017                     	;# 
   262  0018                     	;# 
   263  0019                     	;# 
   264  001A                     	;# 
   265  001B                     	;# 
   266  001C                     	;# 
   267  008C                     	;# 
   268  0091                     	;# 
   269  0092                     	;# 
   270  0093                     	;# 
   271  0095                     	;# 
   272  0096                     	;# 
   273  0097                     	;# 
   274  0098                     	;# 
   275  0099                     	;# 
   276  009A                     	;# 
   277  009B                     	;# 
   278  009B                     	;# 
   279  009C                     	;# 
   280  009D                     	;# 
   281  009E                     	;# 
   282  009F                     	;# 
   283  010C                     	;# 
   284  0111                     	;# 
   285  0112                     	;# 
   286  0115                     	;# 
   287  0116                     	;# 
   288  0117                     	;# 
   289  0118                     	;# 
   290  0119                     	;# 
   291  011D                     	;# 
   292  011D                     	;# 
   293  018C                     	;# 
   294  0191                     	;# 
   295  0191                     	;# 
   296  0192                     	;# 
   297  0193                     	;# 
   298  0193                     	;# 
   299  0194                     	;# 
   300  0195                     	;# 
   301  0196                     	;# 
   302  0197                     	;# 
   303  0199                     	;# 
   304  019A                     	;# 
   305  019B                     	;# 
   306  019B                     	;# 
   307  019C                     	;# 
   308  019D                     	;# 
   309  019E                     	;# 
   310  019F                     	;# 
   311  020C                     	;# 
   312  028C                     	;# 
   313  030C                     	;# 
   314  038C                     	;# 
   315  0391                     	;# 
   316  0392                     	;# 
   317  0393                     	;# 
   318  0691                     	;# 
   319  0692                     	;# 
   320  0693                     	;# 
   321  0694                     	;# 
   322  0695                     	;# 
   323  0D8E                     	;# 
   324  0D8F                     	;# 
   325  0D90                     	;# 
   326  0D91                     	;# 
   327  0D91                     	;# 
   328  0D92                     	;# 
   329  0D93                     	;# 
   330  0D93                     	;# 
   331  0D94                     	;# 
   332  0D95                     	;# 
   333  0D95                     	;# 
   334  0D96                     	;# 
   335  0D97                     	;# 
   336  0D97                     	;# 
   337  0D98                     	;# 
   338  0D99                     	;# 
   339  0D99                     	;# 
   340  0D9A                     	;# 
   341  0D9B                     	;# 
   342  0D9C                     	;# 
   343  0D9C                     	;# 
   344  0D9D                     	;# 
   345  0D9D                     	;# 
   346  0D9E                     	;# 
   347  0D9F                     	;# 
   348  0DA0                     	;# 
   349  0DA1                     	;# 
   350  0DA1                     	;# 
   351  0DA2                     	;# 
   352  0DA3                     	;# 
   353  0DA3                     	;# 
   354  0DA4                     	;# 
   355  0DA5                     	;# 
   356  0DA5                     	;# 
   357  0DA6                     	;# 
   358  0DA7                     	;# 
   359  0DA7                     	;# 
   360  0DA8                     	;# 
   361  0DA9                     	;# 
   362  0DA9                     	;# 
   363  0DAA                     	;# 
   364  0DAB                     	;# 
   365  0DAC                     	;# 
   366  0DAC                     	;# 
   367  0DAD                     	;# 
   368  0DAD                     	;# 
   369  0DAE                     	;# 
   370  0DAF                     	;# 
   371  0DB0                     	;# 
   372  0DB1                     	;# 
   373  0DB1                     	;# 
   374  0DB2                     	;# 
   375  0DB3                     	;# 
   376  0DB3                     	;# 
   377  0DB4                     	;# 
   378  0DB5                     	;# 
   379  0DB5                     	;# 
   380  0DB6                     	;# 
   381  0DB7                     	;# 
   382  0DB7                     	;# 
   383  0DB8                     	;# 
   384  0DB9                     	;# 
   385  0DB9                     	;# 
   386  0DBA                     	;# 
   387  0DBB                     	;# 
   388  0DBC                     	;# 
   389  0DBC                     	;# 
   390  0DBD                     	;# 
   391  0DBD                     	;# 
   392  0DBE                     	;# 
   393  0DBF                     	;# 
   394  0DC0                     	;# 
   395  0FE4                     	;# 
   396  0FE5                     	;# 
   397  0FE6                     	;# 
   398  0FE7                     	;# 
   399  0FE8                     	;# 
   400  0FE8                     	;# 
   401  0FE9                     	;# 
   402  0FEA                     	;# 
   403  0FEA                     	;# 
   404  0FEB                     	;# 
   405  0FED                     	;# 
   406  0FEE                     	;# 
   407  0FEE                     	;# 
   408  0FEF                     	;# 
   409  0000                     	;# 
   410  0001                     	;# 
   411  0002                     	;# 
   412  0003                     	;# 
   413  0004                     	;# 
   414  0005                     	;# 
   415  0006                     	;# 
   416  0007                     	;# 
   417  0008                     	;# 
   418  0009                     	;# 
   419  000A                     	;# 
   420  000B                     	;# 
   421  000C                     	;# 
   422  0011                     	;# 
   423  0012                     	;# 
   424  0013                     	;# 
   425  0015                     	;# 
   426  0016                     	;# 
   427  0016                     	;# 
   428  0017                     	;# 
   429  0018                     	;# 
   430  0019                     	;# 
   431  001A                     	;# 
   432  001B                     	;# 
   433  001C                     	;# 
   434  008C                     	;# 
   435  0091                     	;# 
   436  0092                     	;# 
   437  0093                     	;# 
   438  0095                     	;# 
   439  0096                     	;# 
   440  0097                     	;# 
   441  0098                     	;# 
   442  0099                     	;# 
   443  009A                     	;# 
   444  009B                     	;# 
   445  009B                     	;# 
   446  009C                     	;# 
   447  009D                     	;# 
   448  009E                     	;# 
   449  009F                     	;# 
   450  010C                     	;# 
   451  0111                     	;# 
   452  0112                     	;# 
   453  0115                     	;# 
   454  0116                     	;# 
   455  0117                     	;# 
   456  0118                     	;# 
   457  0119                     	;# 
   458  011D                     	;# 
   459  011D                     	;# 
   460  018C                     	;# 
   461  0191                     	;# 
   462  0191                     	;# 
   463  0192                     	;# 
   464  0193                     	;# 
   465  0193                     	;# 
   466  0194                     	;# 
   467  0195                     	;# 
   468  0196                     	;# 
   469  0197                     	;# 
   470  0199                     	;# 
   471  019A                     	;# 
   472  019B                     	;# 
   473  019B                     	;# 
   474  019C                     	;# 
   475  019D                     	;# 
   476  019E                     	;# 
   477  019F                     	;# 
   478  020C                     	;# 
   479  028C                     	;# 
   480  030C                     	;# 
   481  038C                     	;# 
   482  0391                     	;# 
   483  0392                     	;# 
   484  0393                     	;# 
   485  0691                     	;# 
   486  0692                     	;# 
   487  0693                     	;# 
   488  0694                     	;# 
   489  0695                     	;# 
   490  0D8E                     	;# 
   491  0D8F                     	;# 
   492  0D90                     	;# 
   493  0D91                     	;# 
   494  0D91                     	;# 
   495  0D92                     	;# 
   496  0D93                     	;# 
   497  0D93                     	;# 
   498  0D94                     	;# 
   499  0D95                     	;# 
   500  0D95                     	;# 
   501  0D96                     	;# 
   502  0D97                     	;# 
   503  0D97                     	;# 
   504  0D98                     	;# 
   505  0D99                     	;# 
   506  0D99                     	;# 
   507  0D9A                     	;# 
   508  0D9B                     	;# 
   509  0D9C                     	;# 
   510  0D9C                     	;# 
   511  0D9D                     	;# 
   512  0D9D                     	;# 
   513  0D9E                     	;# 
   514  0D9F                     	;# 
   515  0DA0                     	;# 
   516  0DA1                     	;# 
   517  0DA1                     	;# 
   518  0DA2                     	;# 
   519  0DA3                     	;# 
   520  0DA3                     	;# 
   521  0DA4                     	;# 
   522  0DA5                     	;# 
   523  0DA5                     	;# 
   524  0DA6                     	;# 
   525  0DA7                     	;# 
   526  0DA7                     	;# 
   527  0DA8                     	;# 
   528  0DA9                     	;# 
   529  0DA9                     	;# 
   530  0DAA                     	;# 
   531  0DAB                     	;# 
   532  0DAC                     	;# 
   533  0DAC                     	;# 
   534  0DAD                     	;# 
   535  0DAD                     	;# 
   536  0DAE                     	;# 
   537  0DAF                     	;# 
   538  0DB0                     	;# 
   539  0DB1                     	;# 
   540  0DB1                     	;# 
   541  0DB2                     	;# 
   542  0DB3                     	;# 
   543  0DB3                     	;# 
   544  0DB4                     	;# 
   545  0DB5                     	;# 
   546  0DB5                     	;# 
   547  0DB6                     	;# 
   548  0DB7                     	;# 
   549  0DB7                     	;# 
   550  0DB8                     	;# 
   551  0DB9                     	;# 
   552  0DB9                     	;# 
   553  0DBA                     	;# 
   554  0DBB                     	;# 
   555  0DBC                     	;# 
   556  0DBC                     	;# 
   557  0DBD                     	;# 
   558  0DBD                     	;# 
   559  0DBE                     	;# 
   560  0DBF                     	;# 
   561  0DC0                     	;# 
   562  0FE4                     	;# 
   563  0FE5                     	;# 
   564  0FE6                     	;# 
   565  0FE7                     	;# 
   566  0FE8                     	;# 
   567  0FE8                     	;# 
   568  0FE9                     	;# 
   569  0FEA                     	;# 
   570  0FEA                     	;# 
   571  0FEB                     	;# 
   572  0FED                     	;# 
   573  0FEE                     	;# 
   574  0FEE                     	;# 
   575  0FEF                     	;# 
   576  0000                     	;# 
   577  0001                     	;# 
   578  0002                     	;# 
   579  0003                     	;# 
   580  0004                     	;# 
   581  0005                     	;# 
   582  0006                     	;# 
   583  0007                     	;# 
   584  0008                     	;# 
   585  0009                     	;# 
   586  000A                     	;# 
   587  000B                     	;# 
   588  000C                     	;# 
   589  0011                     	;# 
   590  0012                     	;# 
   591  0013                     	;# 
   592  0015                     	;# 
   593  0016                     	;# 
   594  0016                     	;# 
   595  0017                     	;# 
   596  0018                     	;# 
   597  0019                     	;# 
   598  001A                     	;# 
   599  001B                     	;# 
   600  001C                     	;# 
   601  008C                     	;# 
   602  0091                     	;# 
   603  0092                     	;# 
   604  0093                     	;# 
   605  0095                     	;# 
   606  0096                     	;# 
   607  0097                     	;# 
   608  0098                     	;# 
   609  0099                     	;# 
   610  009A                     	;# 
   611  009B                     	;# 
   612  009B                     	;# 
   613  009C                     	;# 
   614  009D                     	;# 
   615  009E                     	;# 
   616  009F                     	;# 
   617  010C                     	;# 
   618  0111                     	;# 
   619  0112                     	;# 
   620  0115                     	;# 
   621  0116                     	;# 
   622  0117                     	;# 
   623  0118                     	;# 
   624  0119                     	;# 
   625  011D                     	;# 
   626  011D                     	;# 
   627  018C                     	;# 
   628  0191                     	;# 
   629  0191                     	;# 
   630  0192                     	;# 
   631  0193                     	;# 
   632  0193                     	;# 
   633  0194                     	;# 
   634  0195                     	;# 
   635  0196                     	;# 
   636  0197                     	;# 
   637  0199                     	;# 
   638  019A                     	;# 
   639  019B                     	;# 
   640  019B                     	;# 
   641  019C                     	;# 
   642  019D                     	;# 
   643  019E                     	;# 
   644  019F                     	;# 
   645  020C                     	;# 
   646  028C                     	;# 
   647  030C                     	;# 
   648  038C                     	;# 
   649  0391                     	;# 
   650  0392                     	;# 
   651  0393                     	;# 
   652  0691                     	;# 
   653  0692                     	;# 
   654  0693                     	;# 
   655  0694                     	;# 
   656  0695                     	;# 
   657  0D8E                     	;# 
   658  0D8F                     	;# 
   659  0D90                     	;# 
   660  0D91                     	;# 
   661  0D91                     	;# 
   662  0D92                     	;# 
   663  0D93                     	;# 
   664  0D93                     	;# 
   665  0D94                     	;# 
   666  0D95                     	;# 
   667  0D95                     	;# 
   668  0D96                     	;# 
   669  0D97                     	;# 
   670  0D97                     	;# 
   671  0D98                     	;# 
   672  0D99                     	;# 
   673  0D99                     	;# 
   674  0D9A                     	;# 
   675  0D9B                     	;# 
   676  0D9C                     	;# 
   677  0D9C                     	;# 
   678  0D9D                     	;# 
   679  0D9D                     	;# 
   680  0D9E                     	;# 
   681  0D9F                     	;# 
   682  0DA0                     	;# 
   683  0DA1                     	;# 
   684  0DA1                     	;# 
   685  0DA2                     	;# 
   686  0DA3                     	;# 
   687  0DA3                     	;# 
   688  0DA4                     	;# 
   689  0DA5                     	;# 
   690  0DA5                     	;# 
   691  0DA6                     	;# 
   692  0DA7                     	;# 
   693  0DA7                     	;# 
   694  0DA8                     	;# 
   695  0DA9                     	;# 
   696  0DA9                     	;# 
   697  0DAA                     	;# 
   698  0DAB                     	;# 
   699  0DAC                     	;# 
   700  0DAC                     	;# 
   701  0DAD                     	;# 
   702  0DAD                     	;# 
   703  0DAE                     	;# 
   704  0DAF                     	;# 
   705  0DB0                     	;# 
   706  0DB1                     	;# 
   707  0DB1                     	;# 
   708  0DB2                     	;# 
   709  0DB3                     	;# 
   710  0DB3                     	;# 
   711  0DB4                     	;# 
   712  0DB5                     	;# 
   713  0DB5                     	;# 
   714  0DB6                     	;# 
   715  0DB7                     	;# 
   716  0DB7                     	;# 
   717  0DB8                     	;# 
   718  0DB9                     	;# 
   719  0DB9                     	;# 
   720  0DBA                     	;# 
   721  0DBB                     	;# 
   722  0DBC                     	;# 
   723  0DBC                     	;# 
   724  0DBD                     	;# 
   725  0DBD                     	;# 
   726  0DBE                     	;# 
   727  0DBF                     	;# 
   728  0DC0                     	;# 
   729  0FE4                     	;# 
   730  0FE5                     	;# 
   731  0FE6                     	;# 
   732  0FE7                     	;# 
   733  0FE8                     	;# 
   734  0FE8                     	;# 
   735  0FE9                     	;# 
   736  0FEA                     	;# 
   737  0FEA                     	;# 
   738  0FEB                     	;# 
   739  0FED                     	;# 
   740  0FEE                     	;# 
   741  0FEE                     	;# 
   742  0FEF                     	;# 
   743  0000                     	;# 
   744  0001                     	;# 
   745  0002                     	;# 
   746  0003                     	;# 
   747  0004                     	;# 
   748  0005                     	;# 
   749  0006                     	;# 
   750  0007                     	;# 
   751  0008                     	;# 
   752  0009                     	;# 
   753  000A                     	;# 
   754  000B                     	;# 
   755  000C                     	;# 
   756  0011                     	;# 
   757  0012                     	;# 
   758  0013                     	;# 
   759  0015                     	;# 
   760  0016                     	;# 
   761  0016                     	;# 
   762  0017                     	;# 
   763  0018                     	;# 
   764  0019                     	;# 
   765  001A                     	;# 
   766  001B                     	;# 
   767  001C                     	;# 
   768  008C                     	;# 
   769  0091                     	;# 
   770  0092                     	;# 
   771  0093                     	;# 
   772  0095                     	;# 
   773  0096                     	;# 
   774  0097                     	;# 
   775  0098                     	;# 
   776  0099                     	;# 
   777  009A                     	;# 
   778  009B                     	;# 
   779  009B                     	;# 
   780  009C                     	;# 
   781  009D                     	;# 
   782  009E                     	;# 
   783  009F                     	;# 
   784  010C                     	;# 
   785  0111                     	;# 
   786  0112                     	;# 
   787  0115                     	;# 
   788  0116                     	;# 
   789  0117                     	;# 
   790  0118                     	;# 
   791  0119                     	;# 
   792  011D                     	;# 
   793  011D                     	;# 
   794  018C                     	;# 
   795  0191                     	;# 
   796  0191                     	;# 
   797  0192                     	;# 
   798  0193                     	;# 
   799  0193                     	;# 
   800  0194                     	;# 
   801  0195                     	;# 
   802  0196                     	;# 
   803  0197                     	;# 
   804  0199                     	;# 
   805  019A                     	;# 
   806  019B                     	;# 
   807  019B                     	;# 
   808  019C                     	;# 
   809  019D                     	;# 
   810  019E                     	;# 
   811  019F                     	;# 
   812  020C                     	;# 
   813  028C                     	;# 
   814  030C                     	;# 
   815  038C                     	;# 
   816  0391                     	;# 
   817  0392                     	;# 
   818  0393                     	;# 
   819  0691                     	;# 
   820  0692                     	;# 
   821  0693                     	;# 
   822  0694                     	;# 
   823  0695                     	;# 
   824  0D8E                     	;# 
   825  0D8F                     	;# 
   826  0D90                     	;# 
   827  0D91                     	;# 
   828  0D91                     	;# 
   829  0D92                     	;# 
   830  0D93                     	;# 
   831  0D93                     	;# 
   832  0D94                     	;# 
   833  0D95                     	;# 
   834  0D95                     	;# 
   835  0D96                     	;# 
   836  0D97                     	;# 
   837  0D97                     	;# 
   838  0D98                     	;# 
   839  0D99                     	;# 
   840  0D99                     	;# 
   841  0D9A                     	;# 
   842  0D9B                     	;# 
   843  0D9C                     	;# 
   844  0D9C                     	;# 
   845  0D9D                     	;# 
   846  0D9D                     	;# 
   847  0D9E                     	;# 
   848  0D9F                     	;# 
   849  0DA0                     	;# 
   850  0DA1                     	;# 
   851  0DA1                     	;# 
   852  0DA2                     	;# 
   853  0DA3                     	;# 
   854  0DA3                     	;# 
   855  0DA4                     	;# 
   856  0DA5                     	;# 
   857  0DA5                     	;# 
   858  0DA6                     	;# 
   859  0DA7                     	;# 
   860  0DA7                     	;# 
   861  0DA8                     	;# 
   862  0DA9                     	;# 
   863  0DA9                     	;# 
   864  0DAA                     	;# 
   865  0DAB                     	;# 
   866  0DAC                     	;# 
   867  0DAC                     	;# 
   868  0DAD                     	;# 
   869  0DAD                     	;# 
   870  0DAE                     	;# 
   871  0DAF                     	;# 
   872  0DB0                     	;# 
   873  0DB1                     	;# 
   874  0DB1                     	;# 
   875  0DB2                     	;# 
   876  0DB3                     	;# 
   877  0DB3                     	;# 
   878  0DB4                     	;# 
   879  0DB5                     	;# 
   880  0DB5                     	;# 
   881  0DB6                     	;# 
   882  0DB7                     	;# 
   883  0DB7                     	;# 
   884  0DB8                     	;# 
   885  0DB9                     	;# 
   886  0DB9                     	;# 
   887  0DBA                     	;# 
   888  0DBB                     	;# 
   889  0DBC                     	;# 
   890  0DBC                     	;# 
   891  0DBD                     	;# 
   892  0DBD                     	;# 
   893  0DBE                     	;# 
   894  0DBF                     	;# 
   895  0DC0                     	;# 
   896  0FE4                     	;# 
   897  0FE5                     	;# 
   898  0FE6                     	;# 
   899  0FE7                     	;# 
   900  0FE8                     	;# 
   901  0FE8                     	;# 
   902  0FE9                     	;# 
   903  0FEA                     	;# 
   904  0FEA                     	;# 
   905  0FEB                     	;# 
   906  0FED                     	;# 
   907  0FEE                     	;# 
   908  0FEE                     	;# 
   909  0FEF                     	;# 
   910                           
   911                           	psect	idataCOMMON
   912  0000                     __pidataCOMMON:	
   913                           
   914                           	psect	idataBANK0
   915  0000                     __pidataBANK0:	
   916                           
   917                           	psect	nvBANK0
   918  0030                     __pnvBANK0:	
   919  0030                     _TMR0_InterruptHandler:	
   920  0030                     	ds	2
   921  0032                     _IOCAF3_InterruptHandler:	
   922  0032                     	ds	2
   923  0034                     _IOCAF2_InterruptHandler:	
   924  0034                     	ds	2
   925  0036                     _timer0ReloadVal:	
   926  0036                     	ds	1
   927  000C                     _PORTAbits	set	12
   928  000C                     _PORTA	set	12
   929  0015                     _TMR0	set	21
   930  000B                     _INTCONbits	set	11
   931  0095                     _OPTION_REG	set	149
   932  0097                     _WDTCON	set	151
   933  0098                     _OSCTUNE	set	152
   934  0099                     _OSCCON	set	153
   935  0095                     _OPTION_REGbits	set	149
   936  008C                     _TRISA	set	140
   937  0116                     _BORCON	set	278
   938  011D                     _APFCON	set	285
   939  010C                     _LATA	set	268
   940  0197                     _VREGCONbits	set	407
   941  018C                     _ANSELA	set	396
   942  020C                     _WPUA	set	524
   943  028C                     _ODCONA	set	652
   944  0391                     _IOCAPbits	set	913
   945  0392                     _IOCANbits	set	914
   946  0393                     _IOCAFbits	set	915
   947                           
   948                           ; #config settings
   949  0000                     
   950                           	psect	cinit
   951  0012                     start_initialization:	
   952  0012                     __initialization:	
   953                           
   954                           ;initializer for _LEDTestBit
   955  0012  3001               	movlw	1
   956  0013  00FD               	movwf	__pdataCOMMON& (0+127)
   957                           
   958                           ;initializer for _PORTTable
   959  0014  00A0               	movwf	__pdataBANK0& (0+127)
   960  0015  3002               	movlw	2
   961  0016  00A1               	movwf	(__pdataBANK0+1)& (0+127)
   962  0017  3010               	movlw	16
   963  0018  00A2               	movwf	(__pdataBANK0+2)& (0+127)
   964  0019  3020               	movlw	32
   965  001A  00A3               	movwf	(__pdataBANK0+3)& (0+127)
   966  001B  00A4               	movwf	(__pdataBANK0+4)& (0+127)
   967  001C  3001               	movlw	1
   968  001D  00A5               	movwf	(__pdataBANK0+5)& (0+127)
   969  001E  3010               	movlw	16
   970  001F  00A6               	movwf	(__pdataBANK0+6)& (0+127)
   971  0020  3002               	movlw	2
   972  0021  00A7               	movwf	(__pdataBANK0+7)& (0+127)
   973                           
   974                           ;initializer for _TRISTable
   975  0022  30FC               	movlw	252
   976  0023  00A8               	movwf	(__pdataBANK0+8)& (0+127)
   977  0024  00A9               	movwf	(__pdataBANK0+9)& (0+127)
   978  0025  30CF               	movlw	207
   979  0026  00AA               	movwf	(__pdataBANK0+10)& (0+127)
   980  0027  00AB               	movwf	(__pdataBANK0+11)& (0+127)
   981  0028  30DE               	movlw	222
   982  0029  00AC               	movwf	(__pdataBANK0+12)& (0+127)
   983  002A  00AD               	movwf	(__pdataBANK0+13)& (0+127)
   984  002B  30ED               	movlw	237
   985  002C  00AE               	movwf	(__pdataBANK0+14)& (0+127)
   986  002D  00AF               	movwf	(__pdataBANK0+15)& (0+127)
   987                           
   988                           ; Clear objects allocated to COMMON
   989  002E  01F0               	clrf	__pbssCOMMON& (0+127)
   990  002F  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   991  0030  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   992  0031  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   993  0032  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   994  0033  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   995  0034  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
   996                           
   997                           ; Clear objects allocated to BANK0
   998  0035  01B7               	clrf	__pbssBANK0& (0+127)
   999  0036  01B8               	clrf	(__pbssBANK0+1)& (0+127)
  1000  0037                     end_of_initialization:	
  1001                           ;End of C runtime variable initialization code
  1002                           
  1003  0037                     __end_of__initialization:	
  1004  0037  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  1005  0038  0020               	movlb	0
  1006  0039  28D6               	ljmp	_main	;jump to C main() function
  1007                           
  1008                           	psect	bssCOMMON
  1009  0070                     __pbssCOMMON:	
  1010  0070                     _RightTime:	
  1011  0070                     	ds	2
  1012  0072                     _LeftTime:	
  1013  0072                     	ds	2
  1014  0074                     _Patterns:	
  1015  0074                     	ds	1
  1016  0075                     _LEDState:	
  1017  0075                     	ds	1
  1018  0076                     _LEDOns:	
  1019  0076                     	ds	1
  1020                           
  1021                           	psect	dataCOMMON
  1022  007D                     __pdataCOMMON:	
  1023  007D                     _LEDTestBit:	
  1024  007D                     	ds	1
  1025                           
  1026                           	psect	bssBANK0
  1027  0037                     __pbssBANK0:	
  1028  0037                     _PatternLeftFlashState:	
  1029  0037                     	ds	1
  1030  0038                     _PatternRightFlashState:	
  1031  0038                     	ds	1
  1032                           
  1033                           	psect	dataBANK0
  1034  0020                     __pdataBANK0:	
  1035  0020                     _PORTTable:	
  1036  0020                     	ds	8
  1037  0028                     _TRISTable:	
  1038  0028                     	ds	8
  1039                           
  1040                           	psect	cstackCOMMON
  1041  0077                     __pcstackCOMMON:	
  1042  0077                     ?_IOCAF2_SetInterruptHandler:	
  1043  0077                     ?_IOCAF2_DefaultInterruptHandler:	
  1044                           ; 1 bytes @ 0x0
  1045                           
  1046  0077                     ??_IOCAF2_DefaultInterruptHandler:	
  1047                           ; 1 bytes @ 0x0
  1048                           
  1049  0077                     ?_IOCAF3_SetInterruptHandler:	
  1050                           ; 1 bytes @ 0x0
  1051                           
  1052  0077                     ?_IOCAF3_DefaultInterruptHandler:	
  1053                           ; 1 bytes @ 0x0
  1054                           
  1055  0077                     ??_IOCAF3_DefaultInterruptHandler:	
  1056                           ; 1 bytes @ 0x0
  1057                           
  1058  0077                     ?_IOCAF2_ISR:	
  1059                           ; 1 bytes @ 0x0
  1060                           
  1061  0077                     ??_IOCAF2_ISR:	
  1062                           ; 1 bytes @ 0x0
  1063                           
  1064  0077                     ?_IOCAF3_ISR:	
  1065                           ; 1 bytes @ 0x0
  1066                           
  1067  0077                     ??_IOCAF3_ISR:	
  1068                           ; 1 bytes @ 0x0
  1069                           
  1070  0077                     ?_OSCILLATOR_Initialize:	
  1071                           ; 1 bytes @ 0x0
  1072                           
  1073  0077                     ??_OSCILLATOR_Initialize:	
  1074                           ; 1 bytes @ 0x0
  1075                           
  1076  0077                     ?_WDT_Initialize:	
  1077                           ; 1 bytes @ 0x0
  1078                           
  1079  0077                     ??_WDT_Initialize:	
  1080                           ; 1 bytes @ 0x0
  1081                           
  1082  0077                     ?_TMR0_Initialize:	
  1083                           ; 1 bytes @ 0x0
  1084                           
  1085  0077                     ??_TMR0_Initialize:	
  1086                           ; 1 bytes @ 0x0
  1087                           
  1088  0077                     ?_TMR0_ISR:	
  1089                           ; 1 bytes @ 0x0
  1090                           
  1091  0077                     ??_TMR0_ISR:	
  1092                           ; 1 bytes @ 0x0
  1093                           
  1094  0077                     ?_TMR0_CallBack:	
  1095                           ; 1 bytes @ 0x0
  1096                           
  1097  0077                     ??_TMR0_CallBack:	
  1098                           ; 1 bytes @ 0x0
  1099                           
  1100  0077                     ?_PIN_MANAGER_Initialize:	
  1101                           ; 1 bytes @ 0x0
  1102                           
  1103  0077                     ?_PIN_MANAGER_IOC:	
  1104                           ; 1 bytes @ 0x0
  1105                           
  1106  0077                     ??_PIN_MANAGER_IOC:	
  1107                           ; 1 bytes @ 0x0
  1108                           
  1109  0077                     ?_SYSTEM_Initialize:	
  1110                           ; 1 bytes @ 0x0
  1111                           
  1112  0077                     ?_INTERRUPT_InterruptManager:	
  1113                           ; 1 bytes @ 0x0
  1114                           
  1115  0077                     ??_INTERRUPT_InterruptManager:	
  1116                           ; 1 bytes @ 0x0
  1117                           
  1118  0077                     ?_TMR0_SetInterruptHandler:	
  1119                           ; 1 bytes @ 0x0
  1120                           
  1121  0077                     ?_SetLEDOn:	
  1122                           ; 1 bytes @ 0x0
  1123                           
  1124  0077                     ??_SetLEDOn:	
  1125                           ; 1 bytes @ 0x0
  1126                           
  1127  0077                     ?_SetLEDOff:	
  1128                           ; 1 bytes @ 0x0
  1129                           
  1130  0077                     ??_SetLEDOff:	
  1131                           ; 1 bytes @ 0x0
  1132                           
  1133  0077                     ?_SetAllLEDsOff:	
  1134                           ; 1 bytes @ 0x0
  1135                           
  1136  0077                     ??_SetAllLEDsOff:	
  1137                           ; 1 bytes @ 0x0
  1138                           
  1139  0077                     ?_CharlieplexLEDs:	
  1140                           ; 1 bytes @ 0x0
  1141                           
  1142  0077                     ??_CharlieplexLEDs:	
  1143                           ; 1 bytes @ 0x0
  1144                           
  1145  0077                     ?_RunRightFlash:	
  1146                           ; 1 bytes @ 0x0
  1147                           
  1148  0077                     ?_RunLeftFlash:	
  1149                           ; 1 bytes @ 0x0
  1150                           
  1151  0077                     ?_main:	
  1152                           ; 1 bytes @ 0x0
  1153                           
  1154  0077                     SetLEDOn@LED:	
  1155                           ; 1 bytes @ 0x0
  1156                           
  1157  0077                     SetLEDOff@LED:	
  1158                           ; 1 bytes @ 0x0
  1159                           
  1160  0077                     IOCAF2_SetInterruptHandler@InterruptHandler:	
  1161                           ; 1 bytes @ 0x0
  1162                           
  1163  0077                     IOCAF3_SetInterruptHandler@InterruptHandler:	
  1164                           ; 2 bytes @ 0x0
  1165                           
  1166  0077                     TMR0_SetInterruptHandler@InterruptHandler:	
  1167                           ; 2 bytes @ 0x0
  1168                           
  1169                           
  1170                           ; 2 bytes @ 0x0
  1171  0077                     	ds	1
  1172  0078                     ??_RunRightFlash:	
  1173  0078                     ??_RunLeftFlash:	
  1174                           ; 1 bytes @ 0x1
  1175                           
  1176                           
  1177                           ; 1 bytes @ 0x1
  1178  0078                     	ds	1
  1179  0079                     ??_IOCAF2_SetInterruptHandler:	
  1180  0079                     ??_IOCAF3_SetInterruptHandler:	
  1181                           ; 1 bytes @ 0x2
  1182                           
  1183  0079                     ??_PIN_MANAGER_Initialize:	
  1184                           ; 1 bytes @ 0x2
  1185                           
  1186  0079                     ??_SYSTEM_Initialize:	
  1187                           ; 1 bytes @ 0x2
  1188                           
  1189  0079                     ??_TMR0_SetInterruptHandler:	
  1190                           ; 1 bytes @ 0x2
  1191                           
  1192  0079                     ??_main:	
  1193                           ; 1 bytes @ 0x2
  1194                           
  1195                           
  1196                           ; 1 bytes @ 0x2
  1197  0079                     	ds	2
  1198  007B                     main@LastLeftButtonState:	
  1199                           
  1200                           ; 1 bytes @ 0x4
  1201  007B                     	ds	1
  1202  007C                     main@LastRightButtonState:	
  1203                           
  1204                           ; 1 bytes @ 0x5
  1205  007C                     	ds	1
  1206                           
  1207                           	psect	maintext
  1208  00D6                     __pmaintext:	
  1209 ;;
  1210 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1211 ;;
  1212 ;; *************** function _main *****************
  1213 ;; Defined at:
  1214 ;;		line 325 in file "main.c"
  1215 ;; Parameters:    Size  Location     Type
  1216 ;;		None
  1217 ;; Auto vars:     Size  Location     Type
  1218 ;;  LastRightBut    1    5[COMMON] unsigned char 
  1219 ;;  LastLeftButt    1    4[COMMON] unsigned char 
  1220 ;; Return value:  Size  Location     Type
  1221 ;;                  1    wreg      void 
  1222 ;; Registers used:
  1223 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1224 ;; Tracked objects:
  1225 ;;		On entry : B1F/0
  1226 ;;		On exit  : 1F/0
  1227 ;;		Unchanged: 0/0
  1228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1229 ;;      Params:         0       0       0       0
  1230 ;;      Locals:         2       0       0       0
  1231 ;;      Temps:          2       0       0       0
  1232 ;;      Totals:         4       0       0       0
  1233 ;;Total ram usage:        4 bytes
  1234 ;; Hardware stack levels required when called:    7
  1235 ;; This function calls:
  1236 ;;		_RunLeftFlash
  1237 ;;		_RunRightFlash
  1238 ;;		_SYSTEM_Initialize
  1239 ;;		_SetAllLEDsOff
  1240 ;;		_TMR0_SetInterruptHandler
  1241 ;; This function is called by:
  1242 ;;		Startup code after reset
  1243 ;; This function uses a non-reentrant model
  1244 ;;
  1245                           
  1246                           
  1247                           ;psect for function _main
  1248  00D6                     _main:	
  1249                           
  1250                           ;main.c: 328: SYSTEM_Initialize();
  1251                           
  1252                           ;incstack = 0
  1253                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1254  00D6  21D3               	fcall	_SYSTEM_Initialize
  1255                           
  1256                           ;main.c: 330: TMR0_SetInterruptHandler(CharlieplexLEDs);
  1257  00D7  3020               	movlw	low _CharlieplexLEDs
  1258  00D8  00F7               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  1259  00D9  3001               	movlw	high _CharlieplexLEDs
  1260  00DA  00F8               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  1261  00DB  21C4               	fcall	_TMR0_SetInterruptHandler
  1262                           
  1263                           ;main.c: 336: (INTCONbits.GIE = 1);
  1264  00DC  178B               	bsf	11,7	;volatile
  1265                           
  1266                           ;main.c: 339: (INTCONbits.PEIE = 1);
  1267  00DD  170B               	bsf	11,6	;volatile
  1268                           
  1269                           ;main.c: 347: uint8_t LastLeftButtonState = 0;
  1270  00DE  01FB               	clrf	main@LastLeftButtonState
  1271  00DF                     l1170:	
  1272                           
  1273                           ;main.c: 348: uint8_t LastRightButtonState = 0;
  1274  00DF  01FC               	clrf	main@LastRightButtonState
  1275  00E0                     l1194:	
  1276                           ;main.c: 388: }
  1277                           
  1278  00E0  0874               	movf	_Patterns,w
  1279  00E1  1903               	btfsc	3,2
  1280  00E2  2900               	goto	l231
  1281                           
  1282                           ;main.c: 353: {
  1283                           ;main.c: 354: if (Patterns & 0x01)
  1284  00E3  1C74               	btfss	_Patterns,0
  1285  00E4  28E6               	goto	l1174
  1286                           
  1287                           ;main.c: 355: {
  1288                           ;main.c: 356: RunRightFlash();
  1289  00E5  203A               	fcall	_RunRightFlash
  1290  00E6                     l1174:	
  1291                           
  1292                           ;main.c: 357: }
  1293                           ;main.c: 358: if (Patterns & 0x02)
  1294  00E6  1CF4               	btfss	_Patterns,1
  1295  00E7  28E9               	goto	l1178
  1296                           
  1297                           ;main.c: 359: {
  1298                           ;main.c: 360: RunLeftFlash();
  1299  00E8  208A               	fcall	_RunLeftFlash
  1300  00E9                     l1178:	
  1301                           
  1302                           ;main.c: 361: }
  1303                           ;main.c: 365: if (PORTAbits.RA2 == 0)
  1304  00E9  190C               	btfsc	12,2	;volatile
  1305  00EA  28F4               	goto	l1184
  1306                           
  1307                           ;main.c: 366: {
  1308                           ;main.c: 367: if (LastLeftButtonState == 0)
  1309  00EB  087B               	movf	main@LastLeftButtonState,w
  1310  00EC  1D03               	btfss	3,2
  1311  00ED  28F1               	goto	l226
  1312                           
  1313                           ;main.c: 368: {
  1314                           ;main.c: 369: Patterns |= 0x02;
  1315  00EE  14F4               	bsf	_Patterns,1
  1316                           
  1317                           ;main.c: 370: PatternLeftFlashState = 1;
  1318  00EF  01B7               	clrf	_PatternLeftFlashState
  1319  00F0  0AB7               	incf	_PatternLeftFlashState,f
  1320  00F1                     l226:	
  1321                           
  1322                           ;main.c: 371: }
  1323                           ;main.c: 372: LastLeftButtonState = 1;
  1324  00F1  01FB               	clrf	main@LastLeftButtonState
  1325  00F2  0AFB               	incf	main@LastLeftButtonState,f
  1326                           
  1327                           ;main.c: 373: }
  1328  00F3  28F5               	goto	l1186
  1329  00F4                     l1184:	
  1330                           
  1331                           ;main.c: 374: else
  1332                           ;main.c: 375: {
  1333                           ;main.c: 376: LastLeftButtonState = 0;
  1334  00F4  01FB               	clrf	main@LastLeftButtonState
  1335  00F5                     l1186:	
  1336                           
  1337                           ;main.c: 377: }
  1338                           ;main.c: 380: if (PORTAbits.RA3 == 0)
  1339  00F5  198C               	btfsc	12,3	;volatile
  1340  00F6  28DF               	goto	l1170
  1341                           
  1342                           ;main.c: 381: {
  1343                           ;main.c: 382: if (LastRightButtonState == 0)
  1344  00F7  087C               	movf	main@LastRightButtonState,w
  1345  00F8  1D03               	btfss	3,2
  1346  00F9  28FD               	goto	l229
  1347                           
  1348                           ;main.c: 383: {
  1349                           ;main.c: 384: Patterns |= 0x01;
  1350  00FA  1474               	bsf	_Patterns,0
  1351                           
  1352                           ;main.c: 385: PatternRightFlashState = 1;
  1353  00FB  01B8               	clrf	_PatternRightFlashState
  1354  00FC  0AB8               	incf	_PatternRightFlashState,f
  1355  00FD                     l229:	
  1356                           
  1357                           ;main.c: 386: }
  1358                           ;main.c: 387: LastRightButtonState = 1;
  1359  00FD  01FC               	clrf	main@LastRightButtonState
  1360  00FE  0AFC               	incf	main@LastRightButtonState,f
  1361  00FF  28E0               	goto	l1194
  1362  0100                     l231:	
  1363                           
  1364                           ;main.c: 392: }
  1365                           ;main.c: 393: }
  1366                           ;main.c: 396: VREGCONbits.VREGPM = 1;
  1367  0100  0023               	movlb	3	; select bank3
  1368  0101  1497               	bsf	23,1	;volatile
  1369                           
  1370                           ;main.c: 398: SetAllLEDsOff();
  1371  0102  21E2               	fcall	_SetAllLEDsOff
  1372                           
  1373                           ;main.c: 400: _delay((unsigned long)((50)*(16000000/4000.0)));
  1374  0103  3002               	movlw	2
  1375  0104  00FA               	movwf	??_main+1
  1376  0105  3004               	movlw	4
  1377  0106  00F9               	movwf	??_main
  1378  0107  30BA               	movlw	186
  1379  0108                     u617:	
  1380  0108  0B89               	decfsz	9,f
  1381  0109  2908               	goto	u617
  1382  010A  0BF9               	decfsz	??_main,f
  1383  010B  2908               	goto	u617
  1384  010C  0BFA               	decfsz	??_main+1,f
  1385  010D  2908               	goto	u617
  1386  010E  3200               	nop2
  1387  010F  0063               	sleep	;# 
  1388                           
  1389                           ;main.c: 404: LeftTime = 0;
  1390  0110  01F2               	clrf	_LeftTime	;volatile
  1391  0111  01F3               	clrf	_LeftTime+1	;volatile
  1392                           
  1393                           ;main.c: 405: RightTime = 0;
  1394  0112  01F0               	clrf	_RightTime	;volatile
  1395  0113  01F1               	clrf	_RightTime+1	;volatile
  1396                           
  1397                           ;main.c: 407: if (PORTAbits.RA2 == 0)
  1398  0114  0020               	movlb	0	; select bank0
  1399  0115  190C               	btfsc	12,2	;volatile
  1400  0116  291A               	goto	l232
  1401                           
  1402                           ;main.c: 408: {
  1403                           ;main.c: 409: Patterns |= 0x02;
  1404  0117  14F4               	bsf	_Patterns,1
  1405                           
  1406                           ;main.c: 410: PatternLeftFlashState = 1;
  1407  0118  01B7               	clrf	_PatternLeftFlashState
  1408  0119  0AB7               	incf	_PatternLeftFlashState,f
  1409  011A                     l232:	
  1410                           
  1411                           ;main.c: 411: }
  1412                           ;main.c: 412: if (PORTAbits.RA3 == 0)
  1413  011A  198C               	btfsc	12,3	;volatile
  1414  011B  28E0               	goto	l1194
  1415                           
  1416                           ;main.c: 413: {
  1417                           ;main.c: 414: Patterns |= 0x01;
  1418  011C  1474               	bsf	_Patterns,0
  1419                           
  1420                           ;main.c: 415: PatternRightFlashState = 1;
  1421  011D  01B8               	clrf	_PatternRightFlashState
  1422  011E  0AB8               	incf	_PatternRightFlashState,f
  1423  011F  28E0               	goto	l1194
  1424  0120                     __end_of_main:	
  1425                           
  1426                           	psect	text1
  1427  01C4                     __ptext1:	
  1428 ;; *************** function _TMR0_SetInterruptHandler *****************
  1429 ;; Defined at:
  1430 ;;		line 134 in file "mcc_generated_files/tmr0.c"
  1431 ;; Parameters:    Size  Location     Type
  1432 ;;  InterruptHan    2    0[COMMON] PTR FTN()void 
  1433 ;;		 -> CharlieplexLEDs(1), 
  1434 ;; Auto vars:     Size  Location     Type
  1435 ;;		None
  1436 ;; Return value:  Size  Location     Type
  1437 ;;                  1    wreg      void 
  1438 ;; Registers used:
  1439 ;;		wreg
  1440 ;; Tracked objects:
  1441 ;;		On entry : B1F/0
  1442 ;;		On exit  : B1F/0
  1443 ;;		Unchanged: B00/0
  1444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1445 ;;      Params:         2       0       0       0
  1446 ;;      Locals:         0       0       0       0
  1447 ;;      Temps:          0       0       0       0
  1448 ;;      Totals:         2       0       0       0
  1449 ;;Total ram usage:        2 bytes
  1450 ;; Hardware stack levels used:    1
  1451 ;; Hardware stack levels required when called:    4
  1452 ;; This function calls:
  1453 ;;		Nothing
  1454 ;; This function is called by:
  1455 ;;		_main
  1456 ;; This function uses a non-reentrant model
  1457 ;;
  1458                           
  1459                           
  1460                           ;psect for function _TMR0_SetInterruptHandler
  1461  01C4                     _TMR0_SetInterruptHandler:	
  1462                           
  1463                           ;tmr0.c: 135: TMR0_InterruptHandler = InterruptHandler;
  1464                           
  1465                           ;incstack = 0
  1466                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  1467  01C4  0878               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  1468  01C5  00B1               	movwf	_TMR0_InterruptHandler+1
  1469  01C6  0877               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  1470  01C7  00B0               	movwf	_TMR0_InterruptHandler
  1471  01C8  0008               	return
  1472  01C9                     __end_of_TMR0_SetInterruptHandler:	
  1473                           
  1474                           	psect	text2
  1475  01E2                     __ptext2:	
  1476 ;; *************** function _SetAllLEDsOff *****************
  1477 ;; Defined at:
  1478 ;;		line 140 in file "main.c"
  1479 ;; Parameters:    Size  Location     Type
  1480 ;;		None
  1481 ;; Auto vars:     Size  Location     Type
  1482 ;;		None
  1483 ;; Return value:  Size  Location     Type
  1484 ;;                  1    wreg      void 
  1485 ;; Registers used:
  1486 ;;		status,2
  1487 ;; Tracked objects:
  1488 ;;		On entry : 1F/3
  1489 ;;		On exit  : 1F/3
  1490 ;;		Unchanged: 1E/0
  1491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1492 ;;      Params:         0       0       0       0
  1493 ;;      Locals:         0       0       0       0
  1494 ;;      Temps:          0       0       0       0
  1495 ;;      Totals:         0       0       0       0
  1496 ;;Total ram usage:        0 bytes
  1497 ;; Hardware stack levels used:    1
  1498 ;; Hardware stack levels required when called:    4
  1499 ;; This function calls:
  1500 ;;		Nothing
  1501 ;; This function is called by:
  1502 ;;		_main
  1503 ;; This function uses a non-reentrant model
  1504 ;;
  1505                           
  1506                           
  1507                           ;psect for function _SetAllLEDsOff
  1508  01E2                     _SetAllLEDsOff:	
  1509                           
  1510                           ;main.c: 142: LEDOns = 0;
  1511                           
  1512                           ;incstack = 0
  1513                           ; Regs used in _SetAllLEDsOff: [status,2]
  1514  01E2  01F6               	clrf	_LEDOns	;volatile
  1515  01E3  0008               	return
  1516  01E4                     __end_of_SetAllLEDsOff:	
  1517                           
  1518                           	psect	text3
  1519  01D3                     __ptext3:	
  1520 ;; *************** function _SYSTEM_Initialize *****************
  1521 ;; Defined at:
  1522 ;;		line 68 in file "mcc_generated_files/mcc.c"
  1523 ;; Parameters:    Size  Location     Type
  1524 ;;		None
  1525 ;; Auto vars:     Size  Location     Type
  1526 ;;		None
  1527 ;; Return value:  Size  Location     Type
  1528 ;;                  1    wreg      void 
  1529 ;; Registers used:
  1530 ;;		wreg, status,2, status,0, pclath, cstack
  1531 ;; Tracked objects:
  1532 ;;		On entry : B1F/0
  1533 ;;		On exit  : B1F/0
  1534 ;;		Unchanged: B00/0
  1535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1536 ;;      Params:         0       0       0       0
  1537 ;;      Locals:         0       0       0       0
  1538 ;;      Temps:          0       0       0       0
  1539 ;;      Totals:         0       0       0       0
  1540 ;;Total ram usage:        0 bytes
  1541 ;; Hardware stack levels used:    1
  1542 ;; Hardware stack levels required when called:    6
  1543 ;; This function calls:
  1544 ;;		_OSCILLATOR_Initialize
  1545 ;;		_PIN_MANAGER_Initialize
  1546 ;;		_TMR0_Initialize
  1547 ;;		_WDT_Initialize
  1548 ;; This function is called by:
  1549 ;;		_main
  1550 ;; This function uses a non-reentrant model
  1551 ;;
  1552                           
  1553                           
  1554                           ;psect for function _SYSTEM_Initialize
  1555  01D3                     _SYSTEM_Initialize:	
  1556                           
  1557                           ;mcc.c: 71: PIN_MANAGER_Initialize();
  1558                           
  1559                           ;incstack = 0
  1560                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1561  01D3  2151               	fcall	_PIN_MANAGER_Initialize
  1562                           
  1563                           ;mcc.c: 72: OSCILLATOR_Initialize();
  1564  01D4  21A4               	fcall	_OSCILLATOR_Initialize
  1565                           
  1566                           ;mcc.c: 73: WDT_Initialize();
  1567  01D5  21D7               	fcall	_WDT_Initialize
  1568                           
  1569                           ;mcc.c: 74: TMR0_Initialize();
  1570  01D6  298F               	ljmp	l1012
  1571  01D7                     __end_of_SYSTEM_Initialize:	
  1572                           
  1573                           	psect	text4
  1574  01D7                     __ptext4:	
  1575 ;; *************** function _WDT_Initialize *****************
  1576 ;; Defined at:
  1577 ;;		line 87 in file "mcc_generated_files/mcc.c"
  1578 ;; Parameters:    Size  Location     Type
  1579 ;;		None
  1580 ;; Auto vars:     Size  Location     Type
  1581 ;;		None
  1582 ;; Return value:  Size  Location     Type
  1583 ;;                  1    wreg      void 
  1584 ;; Registers used:
  1585 ;;		wreg
  1586 ;; Tracked objects:
  1587 ;;		On entry : B1F/2
  1588 ;;		On exit  : B1F/1
  1589 ;;		Unchanged: B00/0
  1590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1591 ;;      Params:         0       0       0       0
  1592 ;;      Locals:         0       0       0       0
  1593 ;;      Temps:          0       0       0       0
  1594 ;;      Totals:         0       0       0       0
  1595 ;;Total ram usage:        0 bytes
  1596 ;; Hardware stack levels used:    1
  1597 ;; Hardware stack levels required when called:    4
  1598 ;; This function calls:
  1599 ;;		Nothing
  1600 ;; This function is called by:
  1601 ;;		_SYSTEM_Initialize
  1602 ;; This function uses a non-reentrant model
  1603 ;;
  1604                           
  1605                           
  1606                           ;psect for function _WDT_Initialize
  1607  01D7                     _WDT_Initialize:	
  1608                           
  1609                           ;mcc.c: 90: WDTCON = 0x16;
  1610                           
  1611                           ;incstack = 0
  1612                           ; Regs used in _WDT_Initialize: [wreg]
  1613  01D7  3016               	movlw	22
  1614  01D8  0021               	movlb	1	; select bank1
  1615  01D9  0097               	movwf	23	;volatile
  1616  01DA  0008               	return
  1617  01DB                     __end_of_WDT_Initialize:	
  1618                           
  1619                           	psect	text5
  1620  018F                     __ptext5:	
  1621 ;; *************** function _TMR0_Initialize *****************
  1622 ;; Defined at:
  1623 ;;		line 66 in file "mcc_generated_files/tmr0.c"
  1624 ;; Parameters:    Size  Location     Type
  1625 ;;		None
  1626 ;; Auto vars:     Size  Location     Type
  1627 ;;		None
  1628 ;; Return value:  Size  Location     Type
  1629 ;;                  1    wreg      void 
  1630 ;; Registers used:
  1631 ;;		wreg, status,2
  1632 ;; Tracked objects:
  1633 ;;		On entry : B1F/1
  1634 ;;		On exit  : B1F/0
  1635 ;;		Unchanged: B00/0
  1636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1637 ;;      Params:         0       0       0       0
  1638 ;;      Locals:         0       0       0       0
  1639 ;;      Temps:          0       0       0       0
  1640 ;;      Totals:         0       0       0       0
  1641 ;;Total ram usage:        0 bytes
  1642 ;; Hardware stack levels used:    1
  1643 ;; Hardware stack levels required when called:    4
  1644 ;; This function calls:
  1645 ;;		Nothing
  1646 ;; This function is called by:
  1647 ;;		_SYSTEM_Initialize
  1648 ;; This function uses a non-reentrant model
  1649 ;;
  1650                           
  1651                           
  1652                           ;psect for function _TMR0_Initialize
  1653  018F                     _TMR0_Initialize:	
  1654  018F                     l1012:	
  1655                           ;incstack = 0
  1656                           ; Regs used in _TMR0_Initialize: [wreg+status,2]
  1657                           
  1658                           
  1659                           ;tmr0.c: 71: OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | 0xD1 & 0x3F);
  1660  018F  0815               	movf	21,w	;volatile
  1661  0190  39C0               	andlw	192
  1662  0191  3811               	iorlw	17
  1663  0192  0095               	movwf	21	;volatile
  1664                           
  1665                           ;tmr0.c: 74: TMR0 = 0x90;
  1666  0193  3090               	movlw	144
  1667  0194  0020               	movlb	0	; select bank0
  1668  0195  0095               	movwf	21	;volatile
  1669                           
  1670                           ;tmr0.c: 77: timer0ReloadVal= 0x90;
  1671  0196  00B6               	movwf	_timer0ReloadVal	;volatile
  1672                           
  1673                           ;tmr0.c: 80: INTCONbits.TMR0IF = 0;
  1674  0197  110B               	bcf	11,2	;volatile
  1675                           
  1676                           ;tmr0.c: 83: INTCONbits.TMR0IE = 1;
  1677  0198  168B               	bsf	11,5	;volatile
  1678  0199  0008               	return
  1679  019A                     __end_of_TMR0_Initialize:	
  1680                           
  1681                           	psect	text6
  1682  0151                     __ptext6:	
  1683 ;; *************** function _PIN_MANAGER_Initialize *****************
  1684 ;; Defined at:
  1685 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1686 ;; Parameters:    Size  Location     Type
  1687 ;;		None
  1688 ;; Auto vars:     Size  Location     Type
  1689 ;;		None
  1690 ;; Return value:  Size  Location     Type
  1691 ;;                  1    wreg      void 
  1692 ;; Registers used:
  1693 ;;		wreg, status,2, status,0, pclath, cstack
  1694 ;; Tracked objects:
  1695 ;;		On entry : B1F/0
  1696 ;;		On exit  : B1F/0
  1697 ;;		Unchanged: B00/0
  1698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1699 ;;      Params:         0       0       0       0
  1700 ;;      Locals:         0       0       0       0
  1701 ;;      Temps:          0       0       0       0
  1702 ;;      Totals:         0       0       0       0
  1703 ;;Total ram usage:        0 bytes
  1704 ;; Hardware stack levels used:    1
  1705 ;; Hardware stack levels required when called:    5
  1706 ;; This function calls:
  1707 ;;		_IOCAF2_SetInterruptHandler
  1708 ;;		_IOCAF3_SetInterruptHandler
  1709 ;; This function is called by:
  1710 ;;		_SYSTEM_Initialize
  1711 ;; This function uses a non-reentrant model
  1712 ;;
  1713                           
  1714                           
  1715                           ;psect for function _PIN_MANAGER_Initialize
  1716  0151                     _PIN_MANAGER_Initialize:	
  1717                           
  1718                           ;pin_manager.c: 60: LATA = 0x00;
  1719                           
  1720                           ;incstack = 0
  1721                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1722  0151  0022               	movlb	2	; select bank2
  1723  0152  018C               	clrf	12	;volatile
  1724                           
  1725                           ;pin_manager.c: 65: TRISA = 0x3F;
  1726  0153  303F               	movlw	63
  1727  0154  0021               	movlb	1	; select bank1
  1728  0155  008C               	movwf	12	;volatile
  1729                           
  1730                           ;pin_manager.c: 70: ANSELA = 0x13;
  1731  0156  3013               	movlw	19
  1732  0157  0023               	movlb	3	; select bank3
  1733  0158  008C               	movwf	12	;volatile
  1734                           
  1735                           ;pin_manager.c: 75: WPUA = 0x0C;
  1736  0159  300C               	movlw	12
  1737  015A  0024               	movlb	4	; select bank4
  1738  015B  008C               	movwf	12	;volatile
  1739                           
  1740                           ;pin_manager.c: 76: OPTION_REGbits.nWPUEN = 0;
  1741  015C  0021               	movlb	1	; select bank1
  1742  015D  1395               	bcf	21,7	;volatile
  1743                           
  1744                           ;pin_manager.c: 81: ODCONA = 0x00;
  1745  015E  0025               	movlb	5	; select bank5
  1746  015F  018C               	clrf	12	;volatile
  1747                           
  1748                           ;pin_manager.c: 86: APFCON = 0x00;
  1749  0160  0022               	movlb	2	; select bank2
  1750  0161  019D               	clrf	29	;volatile
  1751                           
  1752                           ;pin_manager.c: 92: IOCAFbits.IOCAF2 = 0;
  1753  0162  0027               	movlb	7	; select bank7
  1754  0163  1113               	bcf	19,2	;volatile
  1755                           
  1756                           ;pin_manager.c: 93: IOCAFbits.IOCAF3 = 0;
  1757  0164  1193               	bcf	19,3	;volatile
  1758                           
  1759                           ;pin_manager.c: 95: IOCANbits.IOCAN2 = 1;
  1760  0165  1512               	bsf	18,2	;volatile
  1761                           
  1762                           ;pin_manager.c: 96: IOCANbits.IOCAN3 = 1;
  1763  0166  1592               	bsf	18,3	;volatile
  1764                           
  1765                           ;pin_manager.c: 98: IOCAPbits.IOCAP2 = 1;
  1766  0167  1511               	bsf	17,2	;volatile
  1767                           
  1768                           ;pin_manager.c: 99: IOCAPbits.IOCAP3 = 1;
  1769  0168  1591               	bsf	17,3	;volatile
  1770                           
  1771                           ;pin_manager.c: 102: IOCAF2_SetInterruptHandler(IOCAF2_DefaultInterruptHandler);
  1772  0169  30E5               	movlw	low _IOCAF2_DefaultInterruptHandler
  1773  016A  00F7               	movwf	IOCAF2_SetInterruptHandler@InterruptHandler
  1774  016B  3001               	movlw	high _IOCAF2_DefaultInterruptHandler
  1775  016C  00F8               	movwf	IOCAF2_SetInterruptHandler@InterruptHandler+1
  1776  016D  21B2               	fcall	_IOCAF2_SetInterruptHandler
  1777                           
  1778                           ;pin_manager.c: 103: IOCAF3_SetInterruptHandler(IOCAF3_DefaultInterruptHandler);
  1779  016E  30E4               	movlw	low _IOCAF3_DefaultInterruptHandler
  1780  016F  00F7               	movwf	IOCAF3_SetInterruptHandler@InterruptHandler
  1781  0170  3001               	movlw	high _IOCAF3_DefaultInterruptHandler
  1782  0171  00F8               	movwf	IOCAF3_SetInterruptHandler@InterruptHandler+1
  1783  0172  21C9               	fcall	_IOCAF3_SetInterruptHandler
  1784                           
  1785                           ;pin_manager.c: 106: INTCONbits.IOCIE = 1;
  1786  0173  158B               	bsf	11,3	;volatile
  1787  0174  0008               	return
  1788  0175                     __end_of_PIN_MANAGER_Initialize:	
  1789                           
  1790                           	psect	text7
  1791  01C9                     __ptext7:	
  1792 ;; *************** function _IOCAF3_SetInterruptHandler *****************
  1793 ;; Defined at:
  1794 ;;		line 175 in file "mcc_generated_files/pin_manager.c"
  1795 ;; Parameters:    Size  Location     Type
  1796 ;;  InterruptHan    2    0[COMMON] PTR FTN()void 
  1797 ;;		 -> IOCAF3_DefaultInterruptHandler(1), 
  1798 ;; Auto vars:     Size  Location     Type
  1799 ;;		None
  1800 ;; Return value:  Size  Location     Type
  1801 ;;                  1    wreg      void 
  1802 ;; Registers used:
  1803 ;;		wreg
  1804 ;; Tracked objects:
  1805 ;;		On entry : B1F/0
  1806 ;;		On exit  : B1F/0
  1807 ;;		Unchanged: B00/0
  1808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1809 ;;      Params:         2       0       0       0
  1810 ;;      Locals:         0       0       0       0
  1811 ;;      Temps:          0       0       0       0
  1812 ;;      Totals:         2       0       0       0
  1813 ;;Total ram usage:        2 bytes
  1814 ;; Hardware stack levels used:    1
  1815 ;; Hardware stack levels required when called:    4
  1816 ;; This function calls:
  1817 ;;		Nothing
  1818 ;; This function is called by:
  1819 ;;		_PIN_MANAGER_Initialize
  1820 ;; This function uses a non-reentrant model
  1821 ;;
  1822                           
  1823                           
  1824                           ;psect for function _IOCAF3_SetInterruptHandler
  1825  01C9                     _IOCAF3_SetInterruptHandler:	
  1826                           
  1827                           ;pin_manager.c: 176: IOCAF3_InterruptHandler = InterruptHandler;
  1828                           
  1829                           ;incstack = 0
  1830                           ; Regs used in _IOCAF3_SetInterruptHandler: [wreg]
  1831  01C9  0878               	movf	IOCAF3_SetInterruptHandler@InterruptHandler+1,w
  1832  01CA  00B3               	movwf	_IOCAF3_InterruptHandler+1
  1833  01CB  0877               	movf	IOCAF3_SetInterruptHandler@InterruptHandler,w
  1834  01CC  00B2               	movwf	_IOCAF3_InterruptHandler
  1835  01CD  0008               	return
  1836  01CE                     __end_of_IOCAF3_SetInterruptHandler:	
  1837                           
  1838                           	psect	text8
  1839  01B2                     __ptext8:	
  1840 ;; *************** function _IOCAF2_SetInterruptHandler *****************
  1841 ;; Defined at:
  1842 ;;		line 145 in file "mcc_generated_files/pin_manager.c"
  1843 ;; Parameters:    Size  Location     Type
  1844 ;;  InterruptHan    2    0[COMMON] PTR FTN()void 
  1845 ;;		 -> IOCAF2_DefaultInterruptHandler(1), 
  1846 ;; Auto vars:     Size  Location     Type
  1847 ;;		None
  1848 ;; Return value:  Size  Location     Type
  1849 ;;                  1    wreg      void 
  1850 ;; Registers used:
  1851 ;;		wreg
  1852 ;; Tracked objects:
  1853 ;;		On entry : B1F/7
  1854 ;;		On exit  : B1F/0
  1855 ;;		Unchanged: B00/0
  1856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1857 ;;      Params:         2       0       0       0
  1858 ;;      Locals:         0       0       0       0
  1859 ;;      Temps:          0       0       0       0
  1860 ;;      Totals:         2       0       0       0
  1861 ;;Total ram usage:        2 bytes
  1862 ;; Hardware stack levels used:    1
  1863 ;; Hardware stack levels required when called:    4
  1864 ;; This function calls:
  1865 ;;		Nothing
  1866 ;; This function is called by:
  1867 ;;		_PIN_MANAGER_Initialize
  1868 ;; This function uses a non-reentrant model
  1869 ;;
  1870                           
  1871                           
  1872                           ;psect for function _IOCAF2_SetInterruptHandler
  1873  01B2                     _IOCAF2_SetInterruptHandler:	
  1874                           
  1875                           ;pin_manager.c: 146: IOCAF2_InterruptHandler = InterruptHandler;
  1876                           
  1877                           ;incstack = 0
  1878                           ; Regs used in _IOCAF2_SetInterruptHandler: [wreg]
  1879  01B2  0878               	movf	IOCAF2_SetInterruptHandler@InterruptHandler+1,w
  1880  01B3  0020               	movlb	0	; select bank0
  1881  01B4  00B5               	movwf	_IOCAF2_InterruptHandler+1
  1882  01B5  0877               	movf	IOCAF2_SetInterruptHandler@InterruptHandler,w
  1883  01B6  00B4               	movwf	_IOCAF2_InterruptHandler
  1884  01B7  0008               	return
  1885  01B8                     __end_of_IOCAF2_SetInterruptHandler:	
  1886                           
  1887                           	psect	text9
  1888  01A4                     __ptext9:	
  1889 ;; *************** function _OSCILLATOR_Initialize *****************
  1890 ;; Defined at:
  1891 ;;		line 77 in file "mcc_generated_files/mcc.c"
  1892 ;; Parameters:    Size  Location     Type
  1893 ;;		None
  1894 ;; Auto vars:     Size  Location     Type
  1895 ;;		None
  1896 ;; Return value:  Size  Location     Type
  1897 ;;                  1    wreg      void 
  1898 ;; Registers used:
  1899 ;;		wreg, status,2
  1900 ;; Tracked objects:
  1901 ;;		On entry : B1F/0
  1902 ;;		On exit  : B1F/2
  1903 ;;		Unchanged: B00/0
  1904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1905 ;;      Params:         0       0       0       0
  1906 ;;      Locals:         0       0       0       0
  1907 ;;      Temps:          0       0       0       0
  1908 ;;      Totals:         0       0       0       0
  1909 ;;Total ram usage:        0 bytes
  1910 ;; Hardware stack levels used:    1
  1911 ;; Hardware stack levels required when called:    4
  1912 ;; This function calls:
  1913 ;;		Nothing
  1914 ;; This function is called by:
  1915 ;;		_SYSTEM_Initialize
  1916 ;; This function uses a non-reentrant model
  1917 ;;
  1918                           
  1919                           
  1920                           ;psect for function _OSCILLATOR_Initialize
  1921  01A4                     _OSCILLATOR_Initialize:	
  1922                           
  1923                           ;mcc.c: 80: OSCCON = 0x78;
  1924                           
  1925                           ;incstack = 0
  1926                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  1927  01A4  3078               	movlw	120
  1928  01A5  0021               	movlb	1	; select bank1
  1929  01A6  0099               	movwf	25	;volatile
  1930                           
  1931                           ;mcc.c: 82: OSCTUNE = 0x00;
  1932  01A7  0198               	clrf	24	;volatile
  1933                           
  1934                           ;mcc.c: 84: BORCON = 0x00;
  1935  01A8  0022               	movlb	2	; select bank2
  1936  01A9  0196               	clrf	22	;volatile
  1937  01AA  0008               	return
  1938  01AB                     __end_of_OSCILLATOR_Initialize:	
  1939                           
  1940                           	psect	text10
  1941  003A                     __ptext10:	
  1942 ;; *************** function _RunRightFlash *****************
  1943 ;; Defined at:
  1944 ;;		line 180 in file "main.c"
  1945 ;; Parameters:    Size  Location     Type
  1946 ;;		None
  1947 ;; Auto vars:     Size  Location     Type
  1948 ;;		None
  1949 ;; Return value:  Size  Location     Type
  1950 ;;                  1    wreg      void 
  1951 ;; Registers used:
  1952 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1953 ;; Tracked objects:
  1954 ;;		On entry : 1F/0
  1955 ;;		On exit  : 1F/0
  1956 ;;		Unchanged: 0/0
  1957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1958 ;;      Params:         0       0       0       0
  1959 ;;      Locals:         0       0       0       0
  1960 ;;      Temps:          0       0       0       0
  1961 ;;      Totals:         0       0       0       0
  1962 ;;Total ram usage:        0 bytes
  1963 ;; Hardware stack levels used:    1
  1964 ;; Hardware stack levels required when called:    5
  1965 ;; This function calls:
  1966 ;;		_SetLEDOff
  1967 ;;		_SetLEDOn
  1968 ;; This function is called by:
  1969 ;;		_main
  1970 ;; This function uses a non-reentrant model
  1971 ;;
  1972                           
  1973                           
  1974                           ;psect for function _RunRightFlash
  1975  003A                     _RunRightFlash:	
  1976                           
  1977                           ;main.c: 182: switch(PatternRightFlashState)
  1978                           
  1979                           ;incstack = 0
  1980                           ; Regs used in _RunRightFlash: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1981  003A  2879               	goto	l1096
  1982  003B                     l1052:	
  1983                           
  1984                           ;main.c: 189: SetLEDOn(0x01);
  1985  003B  3001               	movlw	1
  1986  003C  21DF               	fcall	_SetLEDOn
  1987                           
  1988                           ;main.c: 190: SetLEDOff(0x02);
  1989  003D  3002               	movlw	2
  1990  003E  21DB               	fcall	_SetLEDOff
  1991  003F                     L1:	
  1992                           
  1993                           ;main.c: 191: SetLEDOff(0x04);
  1994  003F  3004               	movlw	4
  1995  0040  21DB               	fcall	_SetLEDOff
  1996  0041                     L2:	
  1997                           
  1998                           ;main.c: 192: SetLEDOff(0x08);
  1999  0041  3008               	movlw	8
  2000  0042  21DB               	fcall	_SetLEDOff
  2001  0043                     l1054:	
  2002                           
  2003                           ;main.c: 193: RightTime = 1000;
  2004                           
  2005                           ;main.c: 194: PatternRightFlashState++;
  2006  0043  2084               	fcall	PL2	;call to abstracted procedure
  2007  0044  0AB8               	incf	_PatternRightFlashState,f
  2008                           
  2009                           ;main.c: 195: break;
  2010  0045  0008               	return
  2011  0046                     l1058:	
  2012                           
  2013                           ;main.c: 198: if (RightTime == 0)
  2014  0046  0870               	movf	_RightTime,w	;volatile
  2015  0047  0471               	iorwf	_RightTime+1,w	;volatile
  2016  0048  1D03               	btfss	3,2
  2017  0049  0008               	return
  2018                           
  2019                           ;main.c: 199: {
  2020                           ;main.c: 200: SetLEDOff(0x01);
  2021  004A  3001               	movlw	1
  2022  004B  21DB               	fcall	_SetLEDOff
  2023                           
  2024                           ;main.c: 201: SetLEDOn(0x02);
  2025  004C  3002               	movlw	2
  2026  004D  21DF               	fcall	_SetLEDOn
  2027  004E  283F               	goto	L1
  2028  004F                     l1066:	
  2029                           ;main.c: 203: SetLEDOff(0x08);
  2030                           
  2031                           ;main.c: 202: SetLEDOff(0x04);
  2032                           
  2033                           
  2034                           ;main.c: 210: if (RightTime == 0)
  2035  004F  0870               	movf	_RightTime,w	;volatile
  2036  0050  0471               	iorwf	_RightTime+1,w	;volatile
  2037  0051  1D03               	btfss	3,2
  2038  0052  0008               	return
  2039                           
  2040                           ;main.c: 211: {
  2041                           ;main.c: 212: SetLEDOff(0x01);
  2042  0053  3001               	movlw	1
  2043  0054  21DB               	fcall	_SetLEDOff
  2044                           
  2045                           ;main.c: 213: SetLEDOff(0x02);
  2046  0055  3002               	movlw	2
  2047  0056  21DB               	fcall	_SetLEDOff
  2048                           
  2049                           ;main.c: 214: SetLEDOn(0x04);
  2050  0057  3004               	movlw	4
  2051  0058  21DF               	fcall	_SetLEDOn
  2052  0059  2841               	goto	L2
  2053  005A                     l1074:	
  2054                           ;main.c: 215: SetLEDOff(0x08);
  2055                           
  2056                           
  2057                           ;main.c: 222: if (RightTime == 0)
  2058  005A  0870               	movf	_RightTime,w	;volatile
  2059  005B  0471               	iorwf	_RightTime+1,w	;volatile
  2060  005C  1D03               	btfss	3,2
  2061  005D  0008               	return
  2062                           
  2063                           ;main.c: 223: {
  2064                           ;main.c: 224: SetLEDOff(0x01);
  2065  005E  3001               	movlw	1
  2066  005F  21DB               	fcall	_SetLEDOff
  2067                           
  2068                           ;main.c: 225: SetLEDOff(0x02);
  2069  0060  3002               	movlw	2
  2070  0061  21DB               	fcall	_SetLEDOff
  2071                           
  2072                           ;main.c: 226: SetLEDOff(0x04);
  2073  0062  3004               	movlw	4
  2074  0063  21DB               	fcall	_SetLEDOff
  2075                           
  2076                           ;main.c: 227: SetLEDOn(0x08);
  2077  0064  3008               	movlw	8
  2078  0065  21DF               	fcall	_SetLEDOn
  2079  0066  2843               	goto	l1054
  2080  0067                     l1082:	
  2081                           
  2082                           ;main.c: 234: if (RightTime == 0)
  2083  0067  0870               	movf	_RightTime,w	;volatile
  2084  0068  0471               	iorwf	_RightTime+1,w	;volatile
  2085  0069  1D03               	btfss	3,2
  2086  006A  0008               	return
  2087                           
  2088                           ;main.c: 235: {
  2089                           ;main.c: 236: SetLEDOff(0x01);
  2090  006B  3001               	movlw	1
  2091  006C  21DB               	fcall	_SetLEDOff
  2092                           
  2093                           ;main.c: 237: SetLEDOff(0x02);
  2094  006D  3002               	movlw	2
  2095  006E  21DB               	fcall	_SetLEDOff
  2096                           
  2097                           ;main.c: 238: SetLEDOff(0x04);
  2098  006F  3004               	movlw	4
  2099  0070  21DB               	fcall	_SetLEDOff
  2100                           
  2101                           ;main.c: 239: SetLEDOff(0x08);
  2102  0071  3008               	movlw	8
  2103  0072  21DB               	fcall	_SetLEDOff
  2104                           
  2105                           ;main.c: 240: RightTime = 1000;
  2106                           
  2107                           ;main.c: 241: PatternRightFlashState = 0;
  2108  0073  2084               	fcall	PL2	;call to abstracted procedure
  2109  0074  01B8               	clrf	_PatternRightFlashState
  2110                           
  2111                           ;main.c: 242: Patterns &= ~0x01;
  2112  0075  1074               	bcf	_Patterns,0
  2113  0076  0008               	return
  2114  0077                     l1092:	
  2115                           
  2116                           ;main.c: 247: PatternRightFlashState = 0;
  2117  0077  01B8               	clrf	_PatternRightFlashState
  2118                           
  2119                           ;main.c: 248: break;
  2120  0078  0008               	return
  2121  0079                     l1096:	
  2122  0079  0838               	movf	_PatternRightFlashState,w
  2123                           
  2124                           ; Switch size 1, requested type "space"
  2125                           ; Number of cases is 6, Range of values is 0 to 5
  2126                           ; switch strategies available:
  2127                           ; Name         Instructions Cycles
  2128                           ; direct_byte           18     6 (fixed)
  2129                           ; simple_byte           19    10 (average)
  2130                           ; jumptable            260     6 (fixed)
  2131                           ;	Chosen strategy is direct_byte
  2132  007A  0084               	movwf	4
  2133  007B  3006               	movlw	6
  2134  007C  0204               	subwf	4,w
  2135  007D  1803               	skipnc
  2136  007E  2877               	goto	l1092
  2137  007F  3181               	movlp	high S1250
  2138  0080  30B8               	movlw	low S1250
  2139  0081  0704               	addwf	4,w
  2140  0082  0082               	movwf	2
  2141  0083                     l199:	
  2142  0083  0008               	return
  2143  0084                     __end_of_RunRightFlash:	
  2144  0084                     PL2:	
  2145  0084  30E8               	movlw	232
  2146  0085  00F0               	movwf	_RightTime	;volatile
  2147  0086  3003               	movlw	3
  2148  0087  00F1               	movwf	_RightTime+1	;volatile
  2149  0088  0020               	movlb	0	; select bank0
  2150  0089  0008               	return
  2151  008A                     __end_ofPL2:	
  2152                           
  2153                           	psect	swtext1
  2154  01B8                     __pswtext1:	
  2155  01B8                     S1250:	
  2156  01B8  2883               	ljmp	l199
  2157  01B9  283B               	ljmp	l1052
  2158  01BA  2846               	ljmp	l1058
  2159  01BB  284F               	ljmp	l1066
  2160  01BC  285A               	ljmp	l1074
  2161  01BD  2867               	ljmp	l1082
  2162                           
  2163                           	psect	text11
  2164  008A                     __ptext11:	
  2165 ;; *************** function _RunLeftFlash *****************
  2166 ;; Defined at:
  2167 ;;		line 252 in file "main.c"
  2168 ;; Parameters:    Size  Location     Type
  2169 ;;		None
  2170 ;; Auto vars:     Size  Location     Type
  2171 ;;		None
  2172 ;; Return value:  Size  Location     Type
  2173 ;;                  1    wreg      void 
  2174 ;; Registers used:
  2175 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2176 ;; Tracked objects:
  2177 ;;		On entry : 1F/0
  2178 ;;		On exit  : 1F/0
  2179 ;;		Unchanged: 0/0
  2180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2181 ;;      Params:         0       0       0       0
  2182 ;;      Locals:         0       0       0       0
  2183 ;;      Temps:          0       0       0       0
  2184 ;;      Totals:         0       0       0       0
  2185 ;;Total ram usage:        0 bytes
  2186 ;; Hardware stack levels used:    1
  2187 ;; Hardware stack levels required when called:    5
  2188 ;; This function calls:
  2189 ;;		_SetLEDOff
  2190 ;;		_SetLEDOn
  2191 ;; This function is called by:
  2192 ;;		_main
  2193 ;; This function uses a non-reentrant model
  2194 ;;
  2195                           
  2196                           
  2197                           ;psect for function _RunLeftFlash
  2198  008A                     _RunLeftFlash:	
  2199                           
  2200                           ;main.c: 254: switch(PatternLeftFlashState)
  2201                           
  2202                           ;incstack = 0
  2203                           ; Regs used in _RunLeftFlash: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2204  008A  28CB               	goto	l1144
  2205  008B                     l1104:	
  2206                           
  2207                           ;main.c: 261: SetLEDOn(0x80);
  2208  008B  3080               	movlw	128
  2209  008C  21DF               	fcall	_SetLEDOn
  2210                           
  2211                           ;main.c: 262: SetLEDOff(0x40);
  2212  008D  3040               	movlw	64
  2213  008E  21DB               	fcall	_SetLEDOff
  2214  008F                     L3:	
  2215                           
  2216                           ;main.c: 263: SetLEDOff(0x20);
  2217  008F  3020               	movlw	32
  2218  0090  21DB               	fcall	_SetLEDOff
  2219  0091                     L4:	
  2220                           
  2221                           ;main.c: 264: SetLEDOff(0x10);
  2222  0091  3010               	movlw	16
  2223  0092  21DB               	fcall	_SetLEDOff
  2224  0093                     l1106:	
  2225                           
  2226                           ;main.c: 265: LeftTime = 1000;
  2227  0093  30E8               	movlw	232
  2228  0094  00F2               	movwf	_LeftTime	;volatile
  2229  0095  3003               	movlw	3
  2230  0096  00F3               	movwf	_LeftTime+1	;volatile
  2231                           
  2232                           ;main.c: 266: PatternLeftFlashState++;
  2233  0097  0020               	movlb	0	; select bank0
  2234  0098  0AB7               	incf	_PatternLeftFlashState,f
  2235                           
  2236                           ;main.c: 267: break;
  2237  0099  0008               	return
  2238  009A                     l1110:	
  2239                           
  2240                           ;main.c: 270: if (LeftTime == 0)
  2241  009A  0872               	movf	_LeftTime,w	;volatile
  2242  009B  0473               	iorwf	_LeftTime+1,w	;volatile
  2243  009C  1D03               	btfss	3,2
  2244  009D  0008               	return
  2245                           
  2246                           ;main.c: 271: {
  2247                           ;main.c: 272: SetLEDOff(0x80);
  2248  009E  3080               	movlw	128
  2249  009F  21DB               	fcall	_SetLEDOff
  2250                           
  2251                           ;main.c: 273: SetLEDOn(0x40);
  2252  00A0  3040               	movlw	64
  2253  00A1  21DF               	fcall	_SetLEDOn
  2254  00A2  288F               	goto	L3
  2255  00A3                     l1118:	
  2256                           ;main.c: 275: SetLEDOff(0x10);
  2257                           
  2258                           ;main.c: 274: SetLEDOff(0x20);
  2259                           
  2260                           
  2261                           ;main.c: 282: if (LeftTime == 0)
  2262  00A3  0872               	movf	_LeftTime,w	;volatile
  2263  00A4  0473               	iorwf	_LeftTime+1,w	;volatile
  2264  00A5  1D03               	btfss	3,2
  2265  00A6  0008               	return
  2266                           
  2267                           ;main.c: 283: {
  2268                           ;main.c: 284: SetLEDOff(0x80);
  2269  00A7  3080               	movlw	128
  2270  00A8  21DB               	fcall	_SetLEDOff
  2271                           
  2272                           ;main.c: 285: SetLEDOff(0x40);
  2273  00A9  3040               	movlw	64
  2274  00AA  21DB               	fcall	_SetLEDOff
  2275                           
  2276                           ;main.c: 286: SetLEDOn(0x20);
  2277  00AB  3020               	movlw	32
  2278  00AC  21DF               	fcall	_SetLEDOn
  2279  00AD  2891               	goto	L4
  2280  00AE                     l1126:	
  2281                           ;main.c: 287: SetLEDOff(0x10);
  2282                           
  2283                           
  2284                           ;main.c: 294: if (LeftTime == 0)
  2285  00AE  0872               	movf	_LeftTime,w	;volatile
  2286  00AF  0473               	iorwf	_LeftTime+1,w	;volatile
  2287  00B0  1D03               	btfss	3,2
  2288  00B1  0008               	return
  2289                           
  2290                           ;main.c: 295: {
  2291                           ;main.c: 296: SetLEDOff(0x80);
  2292  00B2  3080               	movlw	128
  2293  00B3  21DB               	fcall	_SetLEDOff
  2294                           
  2295                           ;main.c: 297: SetLEDOff(0x40);
  2296  00B4  3040               	movlw	64
  2297  00B5  21DB               	fcall	_SetLEDOff
  2298                           
  2299                           ;main.c: 298: SetLEDOff(0x20);
  2300  00B6  3020               	movlw	32
  2301  00B7  21DB               	fcall	_SetLEDOff
  2302                           
  2303                           ;main.c: 299: SetLEDOn(0x10);
  2304  00B8  3010               	movlw	16
  2305  00B9  21DF               	fcall	_SetLEDOn
  2306  00BA  2893               	goto	l1106
  2307  00BB                     l1134:	
  2308                           
  2309                           ;main.c: 306: if (LeftTime == 0)
  2310  00BB  0872               	movf	_LeftTime,w	;volatile
  2311  00BC  0473               	iorwf	_LeftTime+1,w	;volatile
  2312  00BD  1D03               	btfss	3,2
  2313  00BE  0008               	return
  2314                           
  2315                           ;main.c: 307: {
  2316                           ;main.c: 308: SetLEDOff(0x80);
  2317  00BF  3080               	movlw	128
  2318  00C0  21DB               	fcall	_SetLEDOff
  2319                           
  2320                           ;main.c: 309: SetLEDOff(0x40);
  2321  00C1  3040               	movlw	64
  2322  00C2  21DB               	fcall	_SetLEDOff
  2323                           
  2324                           ;main.c: 310: SetLEDOff(0x20);
  2325  00C3  3020               	movlw	32
  2326  00C4  21DB               	fcall	_SetLEDOff
  2327                           
  2328                           ;main.c: 311: SetLEDOff(0x10);
  2329  00C5  3010               	movlw	16
  2330  00C6  21DB               	fcall	_SetLEDOff
  2331                           
  2332                           ;main.c: 312: PatternLeftFlashState = 0;
  2333  00C7  0020               	movlb	0	; select bank0
  2334  00C8  01B7               	clrf	_PatternLeftFlashState
  2335                           
  2336                           ;main.c: 313: Patterns &= ~0x02;
  2337  00C9  10F4               	bcf	_Patterns,1
  2338  00CA  0008               	return
  2339  00CB                     l1144:	
  2340  00CB  0837               	movf	_PatternLeftFlashState,w
  2341                           
  2342                           ; Switch size 1, requested type "space"
  2343                           ; Number of cases is 6, Range of values is 0 to 5
  2344                           ; switch strategies available:
  2345                           ; Name         Instructions Cycles
  2346                           ; direct_byte           18     6 (fixed)
  2347                           ; simple_byte           19    10 (average)
  2348                           ; jumptable            260     6 (fixed)
  2349                           ;	Chosen strategy is direct_byte
  2350  00CC  0084               	movwf	4
  2351  00CD  3006               	movlw	6
  2352  00CE  0204               	subwf	4,w
  2353  00CF  1803               	skipnc
  2354  00D0  0008               	return
  2355  00D1  30BE               	movlw	low S1252
  2356  00D2  3181               	movlp	high S1252
  2357  00D3  0704               	addwf	4,w
  2358  00D4  0082               	movwf	2
  2359  00D5                     l215:	
  2360  00D5  0008               	return
  2361  00D6                     __end_of_RunLeftFlash:	
  2362                           
  2363                           	psect	swtext2
  2364  01BE                     __pswtext2:	
  2365  01BE                     S1252:	
  2366  01BE  28D5               	ljmp	l215
  2367  01BF  288B               	ljmp	l1104
  2368  01C0  289A               	ljmp	l1110
  2369  01C1  28A3               	ljmp	l1118
  2370  01C2  28AE               	ljmp	l1126
  2371  01C3  28BB               	ljmp	l1134
  2372                           
  2373                           	psect	text12
  2374  01DF                     __ptext12:	
  2375 ;; *************** function _SetLEDOn *****************
  2376 ;; Defined at:
  2377 ;;		line 130 in file "main.c"
  2378 ;; Parameters:    Size  Location     Type
  2379 ;;  LED             1    wreg     unsigned char 
  2380 ;; Auto vars:     Size  Location     Type
  2381 ;;  LED             1    0[COMMON] unsigned char 
  2382 ;; Return value:  Size  Location     Type
  2383 ;;                  1    wreg      void 
  2384 ;; Registers used:
  2385 ;;		wreg, status,2, status,0
  2386 ;; Tracked objects:
  2387 ;;		On entry : 0/0
  2388 ;;		On exit  : 0/0
  2389 ;;		Unchanged: 0/0
  2390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2391 ;;      Params:         0       0       0       0
  2392 ;;      Locals:         1       0       0       0
  2393 ;;      Temps:          0       0       0       0
  2394 ;;      Totals:         1       0       0       0
  2395 ;;Total ram usage:        1 bytes
  2396 ;; Hardware stack levels used:    1
  2397 ;; Hardware stack levels required when called:    4
  2398 ;; This function calls:
  2399 ;;		Nothing
  2400 ;; This function is called by:
  2401 ;;		_RunRightFlash
  2402 ;;		_RunLeftFlash
  2403 ;; This function uses a non-reentrant model
  2404 ;;
  2405                           
  2406                           
  2407                           ;psect for function _SetLEDOn
  2408  01DF                     _SetLEDOn:	
  2409                           
  2410                           ;incstack = 0
  2411                           ; Regs used in _SetLEDOn: [wreg+status,2+status,0]
  2412                           ;SetLEDOn@LED stored from wreg
  2413  01DF  00F7               	movwf	SetLEDOn@LED
  2414                           
  2415                           ;main.c: 132: LEDOns = (uint8_t)(LEDOns | LED);
  2416  01E0  04F6               	iorwf	_LEDOns,f	;volatile
  2417  01E1  0008               	return
  2418  01E2                     __end_of_SetLEDOn:	
  2419                           
  2420                           	psect	text13
  2421  01DB                     __ptext13:	
  2422 ;; *************** function _SetLEDOff *****************
  2423 ;; Defined at:
  2424 ;;		line 135 in file "main.c"
  2425 ;; Parameters:    Size  Location     Type
  2426 ;;  LED             1    wreg     unsigned char 
  2427 ;; Auto vars:     Size  Location     Type
  2428 ;;  LED             1    0[COMMON] unsigned char 
  2429 ;; Return value:  Size  Location     Type
  2430 ;;                  1    wreg      void 
  2431 ;; Registers used:
  2432 ;;		wreg, status,2, status,0
  2433 ;; Tracked objects:
  2434 ;;		On entry : 0/0
  2435 ;;		On exit  : 0/0
  2436 ;;		Unchanged: 0/0
  2437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2438 ;;      Params:         0       0       0       0
  2439 ;;      Locals:         1       0       0       0
  2440 ;;      Temps:          0       0       0       0
  2441 ;;      Totals:         1       0       0       0
  2442 ;;Total ram usage:        1 bytes
  2443 ;; Hardware stack levels used:    1
  2444 ;; Hardware stack levels required when called:    4
  2445 ;; This function calls:
  2446 ;;		Nothing
  2447 ;; This function is called by:
  2448 ;;		_RunRightFlash
  2449 ;;		_RunLeftFlash
  2450 ;; This function uses a non-reentrant model
  2451 ;;
  2452                           
  2453                           
  2454                           ;psect for function _SetLEDOff
  2455  01DB                     _SetLEDOff:	
  2456                           
  2457                           ;incstack = 0
  2458                           ; Regs used in _SetLEDOff: [wreg+status,2+status,0]
  2459                           ;SetLEDOff@LED stored from wreg
  2460  01DB  00F7               	movwf	SetLEDOff@LED
  2461                           
  2462                           ;main.c: 137: LEDOns = (uint8_t)(LEDOns & ~LED);
  2463  01DC  0977               	comf	SetLEDOff@LED,w
  2464  01DD  05F6               	andwf	_LEDOns,f	;volatile
  2465  01DE  0008               	return
  2466  01DF                     __end_of_SetLEDOff:	
  2467                           
  2468                           	psect	intentry
  2469  0004                     __pintentry:	
  2470 ;; *************** function _INTERRUPT_InterruptManager *****************
  2471 ;; Defined at:
  2472 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  2473 ;; Parameters:    Size  Location     Type
  2474 ;;		None
  2475 ;; Auto vars:     Size  Location     Type
  2476 ;;		None
  2477 ;; Return value:  Size  Location     Type
  2478 ;;                  1    wreg      void 
  2479 ;; Registers used:
  2480 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2481 ;; Tracked objects:
  2482 ;;		On entry : 0/0
  2483 ;;		On exit  : 0/0
  2484 ;;		Unchanged: 0/0
  2485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2486 ;;      Params:         0       0       0       0
  2487 ;;      Locals:         0       0       0       0
  2488 ;;      Temps:          0       0       0       0
  2489 ;;      Totals:         0       0       0       0
  2490 ;;Total ram usage:        0 bytes
  2491 ;; Hardware stack levels used:    1
  2492 ;; Hardware stack levels required when called:    3
  2493 ;; This function calls:
  2494 ;;		_PIN_MANAGER_IOC
  2495 ;;		_TMR0_ISR
  2496 ;; This function is called by:
  2497 ;;		Interrupt level 1
  2498 ;; This function uses a non-reentrant model
  2499 ;;
  2500                           
  2501  0004                     _INTERRUPT_InterruptManager:	
  2502                           
  2503                           ;incstack = 0
  2504  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  2505                           
  2506                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  2507  0005  3180               	pagesel	$
  2508                           
  2509                           ;interrupt_manager.c: 54: if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
  2510  0006  1A8B               	btfsc	11,5	;volatile
  2511  0007  1D0B               	btfss	11,2	;volatile
  2512  0008  280B               	goto	i1l102
  2513                           
  2514                           ;interrupt_manager.c: 55: {
  2515                           ;interrupt_manager.c: 56: TMR0_ISR();
  2516  0009  21CE               	fcall	_TMR0_ISR
  2517                           
  2518                           ;interrupt_manager.c: 57: }
  2519  000A  280F               	goto	i1l106
  2520  000B                     i1l102:	
  2521                           
  2522                           ;interrupt_manager.c: 58: else if(INTCONbits.IOCIE == 1 && INTCONbits.IOCIF == 1)
  2523  000B  198B               	btfsc	11,3	;volatile
  2524  000C  1C0B               	btfss	11,0	;volatile
  2525  000D  280F               	goto	i1l106
  2526                           
  2527                           ;interrupt_manager.c: 59: {
  2528                           ;interrupt_manager.c: 60: PIN_MANAGER_IOC();
  2529  000E  21AB               	fcall	_PIN_MANAGER_IOC
  2530  000F                     i1l106:	
  2531                           ;interrupt_manager.c: 61: }
  2532                           
  2533  000F  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2534  0010  0009               	retfie
  2535  0011                     __end_of_INTERRUPT_InterruptManager:	
  2536                           
  2537                           	psect	text15
  2538  01CE                     __ptext15:	
  2539 ;; *************** function _TMR0_ISR *****************
  2540 ;; Defined at:
  2541 ;;		line 109 in file "mcc_generated_files/tmr0.c"
  2542 ;; Parameters:    Size  Location     Type
  2543 ;;		None
  2544 ;; Auto vars:     Size  Location     Type
  2545 ;;		None
  2546 ;; Return value:  Size  Location     Type
  2547 ;;                  1    wreg      void 
  2548 ;; Registers used:
  2549 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2550 ;; Tracked objects:
  2551 ;;		On entry : 0/0
  2552 ;;		On exit  : 0/0
  2553 ;;		Unchanged: 0/0
  2554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2555 ;;      Params:         0       0       0       0
  2556 ;;      Locals:         0       0       0       0
  2557 ;;      Temps:          0       0       0       0
  2558 ;;      Totals:         0       0       0       0
  2559 ;;Total ram usage:        0 bytes
  2560 ;; Hardware stack levels used:    1
  2561 ;; Hardware stack levels required when called:    2
  2562 ;; This function calls:
  2563 ;;		_TMR0_CallBack
  2564 ;; This function is called by:
  2565 ;;		_INTERRUPT_InterruptManager
  2566 ;; This function uses a non-reentrant model
  2567 ;;
  2568                           
  2569                           
  2570                           ;psect for function _TMR0_ISR
  2571  01CE                     _TMR0_ISR:	
  2572                           
  2573                           ;tmr0.c: 113: INTCONbits.TMR0IF = 0;
  2574                           
  2575                           ;incstack = 0
  2576                           ; Regs used in _TMR0_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2577  01CE  110B               	bcf	11,2	;volatile
  2578                           
  2579                           ;tmr0.c: 115: TMR0 = timer0ReloadVal;
  2580  01CF  0020               	movlb	0	; select bank0
  2581  01D0  0836               	movf	_timer0ReloadVal,w	;volatile
  2582  01D1  0095               	movwf	21	;volatile
  2583                           
  2584                           ;tmr0.c: 119: TMR0_CallBack();
  2585  01D2  299A               	ljmp	i1l1022
  2586  01D3                     __end_of_TMR0_ISR:	
  2587                           
  2588                           	psect	text16
  2589  019A                     __ptext16:	
  2590 ;; *************** function _TMR0_CallBack *****************
  2591 ;; Defined at:
  2592 ;;		line 124 in file "mcc_generated_files/tmr0.c"
  2593 ;; Parameters:    Size  Location     Type
  2594 ;;		None
  2595 ;; Auto vars:     Size  Location     Type
  2596 ;;		None
  2597 ;; Return value:  Size  Location     Type
  2598 ;;                  1    wreg      void 
  2599 ;; Registers used:
  2600 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2601 ;; Tracked objects:
  2602 ;;		On entry : 1F/0
  2603 ;;		On exit  : 0/0
  2604 ;;		Unchanged: 0/0
  2605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2606 ;;      Params:         0       0       0       0
  2607 ;;      Locals:         0       0       0       0
  2608 ;;      Temps:          0       0       0       0
  2609 ;;      Totals:         0       0       0       0
  2610 ;;Total ram usage:        0 bytes
  2611 ;; Hardware stack levels used:    1
  2612 ;; Hardware stack levels required when called:    1
  2613 ;; This function calls:
  2614 ;;		Absolute function
  2615 ;;		_CharlieplexLEDs
  2616 ;; This function is called by:
  2617 ;;		_TMR0_ISR
  2618 ;; This function uses a non-reentrant model
  2619 ;;
  2620                           
  2621                           
  2622                           ;psect for function _TMR0_CallBack
  2623  019A                     _TMR0_CallBack:	
  2624  019A                     i1l1022:	
  2625                           ;incstack = 0
  2626                           ; Regs used in _TMR0_CallBack: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2627                           
  2628                           
  2629                           ;tmr0.c: 128: if(TMR0_InterruptHandler)
  2630  019A  0830               	movf	_TMR0_InterruptHandler,w
  2631  019B  0431               	iorwf	_TMR0_InterruptHandler+1,w
  2632  019C  1903               	btfsc	3,2
  2633  019D  0008               	return
  2634                           
  2635                           ;tmr0.c: 129: {
  2636                           ;tmr0.c: 130: TMR0_InterruptHandler();
  2637  019E  0831               	movf	_TMR0_InterruptHandler+1,w
  2638  019F  008A               	movwf	10
  2639  01A0  0830               	movf	_TMR0_InterruptHandler,w
  2640  01A1  000A               	callw
  2641  01A2  3181               	pagesel	$
  2642  01A3  0008               	return
  2643  01A4                     __end_of_TMR0_CallBack:	
  2644                           
  2645                           	psect	text17
  2646  0120                     __ptext17:	
  2647 ;; *************** function _CharlieplexLEDs *****************
  2648 ;; Defined at:
  2649 ;;		line 146 in file "main.c"
  2650 ;; Parameters:    Size  Location     Type
  2651 ;;		None
  2652 ;; Auto vars:     Size  Location     Type
  2653 ;;		None
  2654 ;; Return value:  Size  Location     Type
  2655 ;;                  1    wreg      void 
  2656 ;; Registers used:
  2657 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2658 ;; Tracked objects:
  2659 ;;		On entry : 1F/0
  2660 ;;		On exit  : 1F/0
  2661 ;;		Unchanged: 0/0
  2662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2663 ;;      Params:         0       0       0       0
  2664 ;;      Locals:         0       0       0       0
  2665 ;;      Temps:          0       0       0       0
  2666 ;;      Totals:         0       0       0       0
  2667 ;;Total ram usage:        0 bytes
  2668 ;; Hardware stack levels used:    1
  2669 ;; This function calls:
  2670 ;;		Nothing
  2671 ;; This function is called by:
  2672 ;;		_main
  2673 ;;		_TMR0_CallBack
  2674 ;; This function uses a non-reentrant model
  2675 ;;
  2676                           
  2677                           
  2678                           ;psect for function _CharlieplexLEDs
  2679  0120                     _CharlieplexLEDs:	
  2680                           
  2681                           ;main.c: 149: if (LeftTime)
  2682                           
  2683                           ;incstack = 0
  2684                           ; Regs used in _CharlieplexLEDs: [wreg+fsr1l+fsr1h+status,2+status,0]
  2685  0120  0872               	movf	_LeftTime,w	;volatile
  2686  0121  0473               	iorwf	_LeftTime+1,w	;volatile
  2687  0122  1903               	btfsc	3,2
  2688  0123  2928               	goto	i1l940
  2689                           
  2690                           ;main.c: 150: {
  2691                           ;main.c: 151: LeftTime--;
  2692  0124  3001               	movlw	1
  2693  0125  02F2               	subwf	_LeftTime,f	;volatile
  2694  0126  3000               	movlw	0
  2695  0127  3BF3               	subwfb	_LeftTime+1,f	;volatile
  2696  0128                     i1l940:	
  2697                           
  2698                           ;main.c: 152: }
  2699                           ;main.c: 153: if (RightTime)
  2700  0128  0870               	movf	_RightTime,w	;volatile
  2701  0129  0471               	iorwf	_RightTime+1,w	;volatile
  2702  012A  1903               	btfsc	3,2
  2703  012B  2930               	goto	i1l180
  2704                           
  2705                           ;main.c: 154: {
  2706                           ;main.c: 155: RightTime--;
  2707  012C  3001               	movlw	1
  2708  012D  02F0               	subwf	_RightTime,f	;volatile
  2709  012E  3000               	movlw	0
  2710  012F  3BF1               	subwfb	_RightTime+1,f	;volatile
  2711  0130                     i1l180:	
  2712                           
  2713                           ;main.c: 156: }
  2714                           ;main.c: 159: TRISA = 0xCC;
  2715  0130  30CC               	movlw	204
  2716  0131  0021               	movlb	1	; select bank1
  2717  0132  008C               	movwf	12	;volatile
  2718                           
  2719                           ;main.c: 160: PORTA = 0x00;
  2720  0133  0020               	movlb	0	; select bank0
  2721  0134  018C               	clrf	12	;volatile
  2722                           
  2723                           ;main.c: 163: if (LEDTestBit & LEDOns)
  2724  0135  087D               	movf	_LEDTestBit,w	;volatile
  2725  0136  0576               	andwf	_LEDOns,w	;volatile
  2726  0137  1903               	btfsc	3,2
  2727  0138  2946               	goto	i1l950
  2728                           
  2729                           ;main.c: 164: {
  2730                           ;main.c: 166: TRISA = TRISTable[LEDState];
  2731  0139  0875               	movf	_LEDState,w
  2732  013A  3E28               	addlw	(low (_TRISTable| 0))& (0+255)
  2733  013B  0086               	movwf	6
  2734  013C  0187               	clrf	7
  2735  013D  0801               	movf	1,w
  2736  013E  0021               	movlb	1	; select bank1
  2737  013F  008C               	movwf	12	;volatile
  2738                           
  2739                           ;main.c: 167: PORTA = PORTTable[LEDState];
  2740  0140  0875               	movf	_LEDState,w
  2741  0141  3E20               	addlw	(low (_PORTTable| 0))& (0+255)
  2742  0142  0086               	movwf	6
  2743  0143  0801               	movf	1,w
  2744  0144  0020               	movlb	0	; select bank0
  2745  0145  008C               	movwf	12	;volatile
  2746  0146                     i1l950:	
  2747                           
  2748                           ;main.c: 168: }
  2749                           ;main.c: 171: LEDState++;
  2750  0146  0AF5               	incf	_LEDState,f
  2751                           
  2752                           ;main.c: 172: LEDTestBit = (uint8_t)(LEDTestBit << 1);
  2753  0147  357D               	lslf	_LEDTestBit,w	;volatile
  2754  0148  00FD               	movwf	_LEDTestBit	;volatile
  2755                           
  2756                           ;main.c: 173: if (LEDState == 8)
  2757  0149  3008               	movlw	8
  2758  014A  0675               	xorwf	_LEDState,w
  2759  014B  1D03               	btfss	3,2
  2760  014C  0008               	return
  2761  014D  3001               	movlw	1
  2762                           
  2763                           ;main.c: 174: {
  2764                           ;main.c: 175: LEDState = 0;
  2765  014E  01F5               	clrf	_LEDState
  2766                           
  2767                           ;main.c: 176: LEDTestBit = 0x01;
  2768  014F  00FD               	movwf	_LEDTestBit	;volatile
  2769  0150  0008               	return
  2770  0151                     __end_of_CharlieplexLEDs:	
  2771                           
  2772                           	psect	text18
  2773  01AB                     __ptext18:	
  2774 ;; *************** function _PIN_MANAGER_IOC *****************
  2775 ;; Defined at:
  2776 ;;		line 110 in file "mcc_generated_files/pin_manager.c"
  2777 ;; Parameters:    Size  Location     Type
  2778 ;;		None
  2779 ;; Auto vars:     Size  Location     Type
  2780 ;;		None
  2781 ;; Return value:  Size  Location     Type
  2782 ;;                  1    wreg      void 
  2783 ;; Registers used:
  2784 ;;		wreg, status,2, status,0, pclath, cstack
  2785 ;; Tracked objects:
  2786 ;;		On entry : 0/0
  2787 ;;		On exit  : 1F/7
  2788 ;;		Unchanged: 0/0
  2789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2790 ;;      Params:         0       0       0       0
  2791 ;;      Locals:         0       0       0       0
  2792 ;;      Temps:          0       0       0       0
  2793 ;;      Totals:         0       0       0       0
  2794 ;;Total ram usage:        0 bytes
  2795 ;; Hardware stack levels used:    1
  2796 ;; Hardware stack levels required when called:    2
  2797 ;; This function calls:
  2798 ;;		_IOCAF2_ISR
  2799 ;;		_IOCAF3_ISR
  2800 ;; This function is called by:
  2801 ;;		_INTERRUPT_InterruptManager
  2802 ;; This function uses a non-reentrant model
  2803 ;;
  2804                           
  2805                           
  2806                           ;psect for function _PIN_MANAGER_IOC
  2807  01AB                     _PIN_MANAGER_IOC:	
  2808                           
  2809                           ;pin_manager.c: 113: if(IOCAFbits.IOCAF2 == 1)
  2810                           
  2811                           ;incstack = 0
  2812                           ; Regs used in _PIN_MANAGER_IOC: [wreg+status,2+status,0+pclath+cstack]
  2813  01AB  0027               	movlb	7	; select bank7
  2814  01AC  1D13               	btfss	19,2	;volatile
  2815  01AD  29AF               	goto	i1l1034
  2816                           
  2817                           ;pin_manager.c: 114: {
  2818                           ;pin_manager.c: 115: IOCAF2_ISR();
  2819  01AE  2182               	fcall	_IOCAF2_ISR
  2820  01AF                     i1l1034:	
  2821                           
  2822                           ;pin_manager.c: 116: }
  2823                           ;pin_manager.c: 119: if(IOCAFbits.IOCAF3 == 1)
  2824  01AF  1D93               	btfss	19,3	;volatile
  2825  01B0  0008               	return
  2826                           
  2827                           ;pin_manager.c: 120: {
  2828                           ;pin_manager.c: 121: IOCAF3_ISR();
  2829  01B1  2975               	ljmp	i1l998
  2830  01B2                     __end_of_PIN_MANAGER_IOC:	
  2831                           
  2832                           	psect	text19
  2833  0175                     __ptext19:	
  2834 ;; *************** function _IOCAF3_ISR *****************
  2835 ;; Defined at:
  2836 ;;		line 160 in file "mcc_generated_files/pin_manager.c"
  2837 ;; Parameters:    Size  Location     Type
  2838 ;;		None
  2839 ;; Auto vars:     Size  Location     Type
  2840 ;;		None
  2841 ;; Return value:  Size  Location     Type
  2842 ;;                  1    wreg      void 
  2843 ;; Registers used:
  2844 ;;		wreg, status,2, status,0, pclath, cstack
  2845 ;; Tracked objects:
  2846 ;;		On entry : 1F/7
  2847 ;;		On exit  : 1F/7
  2848 ;;		Unchanged: 0/0
  2849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2850 ;;      Params:         0       0       0       0
  2851 ;;      Locals:         0       0       0       0
  2852 ;;      Temps:          0       0       0       0
  2853 ;;      Totals:         0       0       0       0
  2854 ;;Total ram usage:        0 bytes
  2855 ;; Hardware stack levels used:    1
  2856 ;; Hardware stack levels required when called:    1
  2857 ;; This function calls:
  2858 ;;		Absolute function
  2859 ;;		_IOCAF3_DefaultInterruptHandler
  2860 ;; This function is called by:
  2861 ;;		_PIN_MANAGER_IOC
  2862 ;; This function uses a non-reentrant model
  2863 ;;
  2864                           
  2865                           
  2866                           ;psect for function _IOCAF3_ISR
  2867  0175                     _IOCAF3_ISR:	
  2868  0175                     i1l998:	
  2869                           ;incstack = 0
  2870                           ; Regs used in _IOCAF3_ISR: [wreg+status,2+status,0+pclath+cstack]
  2871                           
  2872                           
  2873                           ;pin_manager.c: 165: if(IOCAF3_InterruptHandler)
  2874  0175  0020               	movlb	0	; select bank0
  2875  0176  0832               	movf	_IOCAF3_InterruptHandler,w
  2876  0177  0433               	iorwf	_IOCAF3_InterruptHandler+1,w
  2877  0178  1903               	btfsc	3,2
  2878  0179  297F               	goto	i1l1002
  2879                           
  2880                           ;pin_manager.c: 166: {
  2881                           ;pin_manager.c: 167: IOCAF3_InterruptHandler();
  2882  017A  0833               	movf	_IOCAF3_InterruptHandler+1,w
  2883  017B  008A               	movwf	10
  2884  017C  0832               	movf	_IOCAF3_InterruptHandler,w
  2885  017D  000A               	callw
  2886  017E  3181               	pagesel	$
  2887  017F                     i1l1002:	
  2888                           
  2889                           ;pin_manager.c: 168: }
  2890                           ;pin_manager.c: 169: IOCAFbits.IOCAF3 = 0;
  2891  017F  0027               	movlb	7	; select bank7
  2892  0180  1193               	bcf	19,3	;volatile
  2893  0181  0008               	return
  2894  0182                     __end_of_IOCAF3_ISR:	
  2895                           
  2896                           	psect	text20
  2897  01E4                     __ptext20:	
  2898 ;; *************** function _IOCAF3_DefaultInterruptHandler *****************
  2899 ;; Defined at:
  2900 ;;		line 182 in file "mcc_generated_files/pin_manager.c"
  2901 ;; Parameters:    Size  Location     Type
  2902 ;;		None
  2903 ;; Auto vars:     Size  Location     Type
  2904 ;;		None
  2905 ;; Return value:  Size  Location     Type
  2906 ;;                  1    wreg      void 
  2907 ;; Registers used:
  2908 ;;		None
  2909 ;; Tracked objects:
  2910 ;;		On entry : 1F/0
  2911 ;;		On exit  : 1F/0
  2912 ;;		Unchanged: 1F/0
  2913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2914 ;;      Params:         0       0       0       0
  2915 ;;      Locals:         0       0       0       0
  2916 ;;      Temps:          0       0       0       0
  2917 ;;      Totals:         0       0       0       0
  2918 ;;Total ram usage:        0 bytes
  2919 ;; Hardware stack levels used:    1
  2920 ;; This function calls:
  2921 ;;		Nothing
  2922 ;; This function is called by:
  2923 ;;		_PIN_MANAGER_Initialize
  2924 ;;		_IOCAF3_ISR
  2925 ;; This function uses a non-reentrant model
  2926 ;;
  2927                           
  2928                           
  2929                           ;psect for function _IOCAF3_DefaultInterruptHandler
  2930  01E4                     _IOCAF3_DefaultInterruptHandler:	
  2931                           
  2932                           ;incstack = 0
  2933                           ; Regs used in _IOCAF3_DefaultInterruptHandler: []
  2934  01E4  0008               	return
  2935  01E5                     __end_of_IOCAF3_DefaultInterruptHandler:	
  2936                           
  2937                           	psect	text21
  2938  0182                     __ptext21:	
  2939 ;; *************** function _IOCAF2_ISR *****************
  2940 ;; Defined at:
  2941 ;;		line 130 in file "mcc_generated_files/pin_manager.c"
  2942 ;; Parameters:    Size  Location     Type
  2943 ;;		None
  2944 ;; Auto vars:     Size  Location     Type
  2945 ;;		None
  2946 ;; Return value:  Size  Location     Type
  2947 ;;                  1    wreg      void 
  2948 ;; Registers used:
  2949 ;;		wreg, status,2, status,0, pclath, cstack
  2950 ;; Tracked objects:
  2951 ;;		On entry : 1F/7
  2952 ;;		On exit  : 1F/7
  2953 ;;		Unchanged: 0/0
  2954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2955 ;;      Params:         0       0       0       0
  2956 ;;      Locals:         0       0       0       0
  2957 ;;      Temps:          0       0       0       0
  2958 ;;      Totals:         0       0       0       0
  2959 ;;Total ram usage:        0 bytes
  2960 ;; Hardware stack levels used:    1
  2961 ;; Hardware stack levels required when called:    1
  2962 ;; This function calls:
  2963 ;;		Absolute function
  2964 ;;		_IOCAF2_DefaultInterruptHandler
  2965 ;; This function is called by:
  2966 ;;		_PIN_MANAGER_IOC
  2967 ;; This function uses a non-reentrant model
  2968 ;;
  2969                           
  2970                           
  2971                           ;psect for function _IOCAF2_ISR
  2972  0182                     _IOCAF2_ISR:	
  2973                           
  2974                           ;pin_manager.c: 135: if(IOCAF2_InterruptHandler)
  2975                           
  2976                           ;incstack = 0
  2977                           ; Regs used in _IOCAF2_ISR: [wreg+status,2+status,0+pclath+cstack]
  2978  0182  0020               	movlb	0	; select bank0
  2979  0183  0834               	movf	_IOCAF2_InterruptHandler,w
  2980  0184  0435               	iorwf	_IOCAF2_InterruptHandler+1,w
  2981  0185  1903               	btfsc	3,2
  2982  0186  298C               	goto	i1l996
  2983                           
  2984                           ;pin_manager.c: 136: {
  2985                           ;pin_manager.c: 137: IOCAF2_InterruptHandler();
  2986  0187  0835               	movf	_IOCAF2_InterruptHandler+1,w
  2987  0188  008A               	movwf	10
  2988  0189  0834               	movf	_IOCAF2_InterruptHandler,w
  2989  018A  000A               	callw
  2990  018B  3181               	pagesel	$
  2991  018C                     i1l996:	
  2992                           
  2993                           ;pin_manager.c: 138: }
  2994                           ;pin_manager.c: 139: IOCAFbits.IOCAF2 = 0;
  2995  018C  0027               	movlb	7	; select bank7
  2996  018D  1113               	bcf	19,2	;volatile
  2997  018E  0008               	return
  2998  018F                     __end_of_IOCAF2_ISR:	
  2999                           
  3000                           	psect	text22
  3001  01E5                     __ptext22:	
  3002 ;; *************** function _IOCAF2_DefaultInterruptHandler *****************
  3003 ;; Defined at:
  3004 ;;		line 152 in file "mcc_generated_files/pin_manager.c"
  3005 ;; Parameters:    Size  Location     Type
  3006 ;;		None
  3007 ;; Auto vars:     Size  Location     Type
  3008 ;;		None
  3009 ;; Return value:  Size  Location     Type
  3010 ;;                  1    wreg      void 
  3011 ;; Registers used:
  3012 ;;		None
  3013 ;; Tracked objects:
  3014 ;;		On entry : 1F/0
  3015 ;;		On exit  : 1F/0
  3016 ;;		Unchanged: 1F/0
  3017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3018 ;;      Params:         0       0       0       0
  3019 ;;      Locals:         0       0       0       0
  3020 ;;      Temps:          0       0       0       0
  3021 ;;      Totals:         0       0       0       0
  3022 ;;Total ram usage:        0 bytes
  3023 ;; Hardware stack levels used:    1
  3024 ;; This function calls:
  3025 ;;		Nothing
  3026 ;; This function is called by:
  3027 ;;		_PIN_MANAGER_Initialize
  3028 ;;		_IOCAF2_ISR
  3029 ;; This function uses a non-reentrant model
  3030 ;;
  3031                           
  3032                           
  3033                           ;psect for function _IOCAF2_DefaultInterruptHandler
  3034  01E5                     _IOCAF2_DefaultInterruptHandler:	
  3035                           
  3036                           ;incstack = 0
  3037                           ; Regs used in _IOCAF2_DefaultInterruptHandler: []
  3038  01E5  0008               	return
  3039  01E6                     __end_of_IOCAF2_DefaultInterruptHandler:	
  3040  007E                     btemp	set	126	;btemp
  3041  007E                     int$flags	set	126
  3042  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        17
    BSS         9
    Persistent  7
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      14
    BANK0            80      0      25
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CharlieplexLEDs(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CharlieplexLEDs(), Absolute function(), 

    IOCAF3_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCAF3_DefaultInterruptHandler(), 

    IOCAF3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), IOCAF3_DefaultInterruptHandler(), 

    IOCAF2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCAF2_DefaultInterruptHandler(), 

    IOCAF2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), IOCAF2_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _main->_TMR0_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCAF2_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCAF3_SetInterruptHandler
    _RunRightFlash->_SetLEDOff
    _RunRightFlash->_SetLEDOn
    _RunLeftFlash->_SetLEDOff
    _RunLeftFlash->_SetLEDOn

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     363
                                              2 COMMON     4     4      0
                       _RunLeftFlash
                      _RunRightFlash
                  _SYSTEM_Initialize
                      _SetAllLEDsOff
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2      75
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SetAllLEDsOff                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     150
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     150
         _IOCAF2_SetInterruptHandler
         _IOCAF3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCAF3_SetInterruptHandler                           2     0      2      75
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _IOCAF2_SetInterruptHandler                           2     0      2      75
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RunRightFlash                                        0     0      0      44
                          _SetLEDOff
                           _SetLEDOn
 ---------------------------------------------------------------------------------
 (1) _RunLeftFlash                                         0     0      0      44
                          _SetLEDOff
                           _SetLEDOn
 ---------------------------------------------------------------------------------
 (2) _SetLEDOn                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SetLEDOff                                            1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0       0
                    _PIN_MANAGER_IOC
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0       0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (6) _TMR0_CallBack                                        0     0      0       0
                   Absolute function *
                    _CharlieplexLEDs *
 ---------------------------------------------------------------------------------
 (7) _CharlieplexLEDs                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _PIN_MANAGER_IOC                                      0     0      0       0
                         _IOCAF2_ISR
                         _IOCAF3_ISR
 ---------------------------------------------------------------------------------
 (6) _IOCAF3_ISR                                           0     0      0       0
                   Absolute function *
     _IOCAF3_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _IOCAF3_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _IOCAF2_ISR                                           0     0      0       0
                   Absolute function *
     _IOCAF2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _IOCAF2_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _RunLeftFlash
     _SetLEDOff
     _SetLEDOn
   _RunRightFlash
     _SetLEDOff
     _SetLEDOn
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCAF2_SetInterruptHandler
       _IOCAF3_SetInterruptHandler
     _TMR0_Initialize
     _WDT_Initialize
   _SetAllLEDsOff
   _TMR0_SetInterruptHandler

 _INTERRUPT_InterruptManager (ROOT)
   _PIN_MANAGER_IOC
     _IOCAF2_ISR
       Absolute function(Fake) *
       _IOCAF2_DefaultInterruptHandler *
     _IOCAF3_ISR
       Absolute function(Fake) *
       _IOCAF3_DefaultInterruptHandler *
   _TMR0_ISR
     _TMR0_CallBack
       Absolute function(Fake) *
       _CharlieplexLEDs *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      27       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      0      19       6       31.3%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      27      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed May 09 21:58:54 2018

                           ??_RunRightFlash 0078                                           pc 0002  
                               __CFG_CP$OFF 0000                                          PL2 0084  
                           _timer0ReloadVal 0036                    main@LastRightButtonState 007C  
                                       l215 00D5                                         l231 0100  
                                       l232 011A                                         l226 00F1  
                                       l229 00FD                                         l199 0083  
                                       u617 0108                                __CFG_BORV$LO 0000  
                                       wreg 0009          __end_of_IOCAF2_SetInterruptHandler 01B8  
                _IOCAF2_SetInterruptHandler 01B2                                        S1250 01B8  
                                      S1252 01BE                                __CFG_LVP$OFF 0000  
                                      l1012 018F                                        l1110 009A  
                                      l1104 008B                                        l1106 0093  
                                      l1052 003B                                        l1134 00BB  
                                      l1126 00AE                                        l1118 00A3  
                                      l1054 0043                                        l1144 00CB  
                                      l1082 0067                                        l1074 005A  
                                      l1066 004F                                        l1058 0046  
                                      l1170 00DF                                        l1092 0077  
                                      l1174 00E6                                        l1096 0079  
                                      l1184 00F4                                        l1186 00F5  
                                      l1178 00E9                                        l1194 00E0  
                                      _LATA 010C                                        _TMR0 0015  
                                      _WPUA 020C                                __CFG_WRT$OFF 0000  
                                      _main 00D6                                        fsr1h 0007  
                                      fsr0l 0004                                        indf1 0001  
                                      fsr1l 0006                                        btemp 007E  
                                      start 0011                     __end_of_TMR0_Initialize 019A  
            __size_of_OSCILLATOR_Initialize 0007                         __size_of_IOCAF2_ISR 000D  
                       __size_of_IOCAF3_ISR 000D               __end_of_OSCILLATOR_Initialize 01AB  
                                     ?_main 0077                               __CFG_WDTE$OFF 0000  
                                     i1l102 000B                                       i1l106 000F  
                                     i1l180 0130                                       i1l940 0128  
                                     i1l950 0146                                       i1l996 018C  
                                     i1l998 0175                                       _PORTA 000C  
                                     _TRISA 008C           __size_of_TMR0_SetInterruptHandler 0005  
                 ?_TMR0_SetInterruptHandler 0077                            __end_of_TMR0_ISR 01D3  
                   __end_of_PIN_MANAGER_IOC 01B2                              _WDT_Initialize 01D7  
                            __CFG_BOREN$OFF 0000                                       pclath 000A  
                                     status 0003                                       wtemp0 007E  
                               SetLEDOn@LED 0077                              __CFG_MCLRE$OFF 0000  
                           __initialization 0012                                __end_of_main 0120  
                          __end_of_SetLEDOn 01E2                 ?_INTERRUPT_InterruptManager 0077  
                                    ??_main 0079                              __CFG_PLLEN$OFF 0000  
                    __end_of_WDT_Initialize 01DB                      __size_of_SetAllLEDsOff 0002  
              ??_IOCAF3_SetInterruptHandler 0079                                      _APFCON 011D  
                                    _ANSELA 018C                                      _BORCON 0116  
                                    i1l1002 017F                                      i1l1022 019A  
                                    i1l1034 01AF                                      _ODCONA 028C  
                                    _LEDOns 0076                                      _OSCCON 0099  
                                    _WDTCON 0097                          __size_of_SetLEDOff 0004  
                            __CFG_PWRTE$OFF 0000                              __CFG_STVREN$ON 0000  
                          ?_TMR0_Initialize 0077         __size_of_IOCAF3_SetInterruptHandler 0005  
                              __pdataCOMMON 007D                             ?_WDT_Initialize 0077  
                     __end_of_TMR0_CallBack 01A4    TMR0_SetInterruptHandler@InterruptHandler 0077  
IOCAF3_SetInterruptHandler@InterruptHandler 0077  IOCAF2_SetInterruptHandler@InterruptHandler 0077  
                          ?_PIN_MANAGER_IOC 0077                                ??_IOCAF2_ISR 0077  
                              ??_IOCAF3_ISR 0077                           _SYSTEM_Initialize 01D3  
                   __end_of__initialization 0037                     main@LastLeftButtonState 007B  
                        ?_SYSTEM_Initialize 0077                                SetLEDOff@LED 0077  
                             _SetAllLEDsOff 01E2                              __pcstackCOMMON 0077  
                              __pidataBANK0 0000                         ??_SYSTEM_Initialize 0079  
                                 ?_TMR0_ISR 0077                                  __end_ofPL2 008A  
                        __end_of_IOCAF2_ISR 018F                          __end_of_IOCAF3_ISR 0182  
                         __end_of_SetLEDOff 01DF                              _OPTION_REGbits 0095  
               ?_IOCAF2_SetInterruptHandler 0077            ??_IOCAF2_DefaultInterruptHandler 0077  
           ?_IOCAF2_DefaultInterruptHandler 0077                   __end_of_SYSTEM_Initialize 01D7  
                                __pbssBANK0 0037                                   ?_SetLEDOn 0077  
                  __size_of_CharlieplexLEDs 0031                              ?_SetAllLEDsOff 0077  
                                __pmaintext 00D6            __end_of_TMR0_SetInterruptHandler 01C9  
                                ??_TMR0_ISR 0077                                  __pintentry 0004  
                     __end_of_RunRightFlash 0084          __end_of_IOCAF3_SetInterruptHandler 01CE  
                _IOCAF3_SetInterruptHandler 01C9                                     _OSCTUNE 0098  
                                ??_SetLEDOn 0077                               ?_RunLeftFlash 0077  
                                   __ptext1 01C4                                     __ptext2 01E2  
                                   __ptext3 01D3                                     __ptext4 01D7  
                                   __ptext5 018F                                     __ptext6 0151  
                                   __ptext7 01C9                                     __ptext8 01B2  
                                   __ptext9 01A4                       _OSCILLATOR_Initialize 01A4  
                  ??_PIN_MANAGER_Initialize 0079                                   _IOCAFbits 0393  
                                 _IOCANbits 0392                                   _IOCAPbits 0391  
                __size_of_SYSTEM_Initialize 0004                        end_of_initialization 0037  
                           ??_SetAllLEDsOff 0077                              ??_RunLeftFlash 0078  
                         ??_CharlieplexLEDs 0077                            ??_WDT_Initialize 0077  
                  _TMR0_SetInterruptHandler 01C4                                   _PORTAbits 000C  
                                 _PORTTable 0020                            __CFG_FOSC$INTOSC 0000  
                                 _TRISTable 0028                               __pidataCOMMON 0000  
                         __size_of_TMR0_ISR 0005                      ?_OSCILLATOR_Initialize 0077  
                       start_initialization 0012                    __size_of_TMR0_Initialize 000B  
           __size_of_PIN_MANAGER_Initialize 0024                                   _SetLEDOff 01DB  
                                 _RightTime 0070                    __size_of_PIN_MANAGER_IOC 0007  
                         __size_of_SetLEDOn 0003      __end_of_IOCAF2_DefaultInterruptHandler 01E6  
   __size_of_IOCAF2_DefaultInterruptHandler 0001              _IOCAF2_DefaultInterruptHandler 01E5  
                          __CFG_LPBOREN$OFF 0000                      __size_of_TMR0_CallBack 000A  
                               __pdataBANK0 0020                                 __pbssCOMMON 0070  
                                 ___latbits 0000                 ?_IOCAF3_SetInterruptHandler 0077  
                      __end_of_RunLeftFlash 00D6                                  ?_SetLEDOff 0077  
          ??_IOCAF3_DefaultInterruptHandler 0077             ?_IOCAF3_DefaultInterruptHandler 0077  
                     _TMR0_InterruptHandler 0030                                   __pnvBANK0 0030  
                    _PIN_MANAGER_Initialize 0151                ??_INTERRUPT_InterruptManager 0077  
                                 __pswtext1 01B8                                   __pswtext2 01BE  
                             _TMR0_CallBack 019A                      __size_of_RunRightFlash 004A  
                         ??_TMR0_Initialize 0077                             _CharlieplexLEDs 0120  
                                  _LEDState 0075         __size_of_INTERRUPT_InterruptManager 000D  
                ??_TMR0_SetInterruptHandler 0079                                    _TMR0_ISR 01CE  
                         ??_PIN_MANAGER_IOC 0077                                 ??_SetLEDOff 0077  
                            ?_TMR0_CallBack 0077                                    _LeftTime 0072  
                                  _SetLEDOn 01DF                                    _Patterns 0074  
                     __end_of_SetAllLEDsOff 01E4                     ??_OSCILLATOR_Initialize 0077  
                             _RunRightFlash 003A                       __size_of_RunLeftFlash 004C  
                   _IOCAF2_InterruptHandler 0034                     __end_of_CharlieplexLEDs 0151  
              ??_IOCAF2_SetInterruptHandler 0079                                    __ptext10 003A  
                                  __ptext11 008A                                    __ptext20 01E4  
                                  __ptext12 01DF                                    __ptext21 0182  
                                  __ptext13 01DB                                    __ptext22 01E5  
                                  __ptext15 01CE                                    __ptext16 019A  
                                  __ptext17 0120                                    __ptext18 01AB  
                                  __ptext19 0175                       _PatternLeftFlashState 0037  
                                _IOCAF2_ISR 0182                                  _IOCAF3_ISR 0175  
                             __size_of_main 004A                                _RunLeftFlash 008A  
                                  int$flags 007E                              ?_RunRightFlash 0077  
        __end_of_INTERRUPT_InterruptManager 0011                  _INTERRUPT_InterruptManager 0004  
       __size_of_IOCAF2_SetInterruptHandler 0006                                  _LEDTestBit 007D  
                                _INTCONbits 000B                             ??_TMR0_CallBack 0077  
                   __size_of_WDT_Initialize 0004                                    intlevel1 0000  
                   ?_PIN_MANAGER_Initialize 0077                           __CFG_CLKOUTEN$OFF 0000  
    __end_of_IOCAF3_DefaultInterruptHandler 01E5     __size_of_IOCAF3_DefaultInterruptHandler 0001  
            _IOCAF3_DefaultInterruptHandler 01E4                                  _OPTION_REG 0095  
                           _TMR0_Initialize 018F                                 _VREGCONbits 0197  
                          ?_CharlieplexLEDs 0077                                 ?_IOCAF2_ISR 0077  
                               ?_IOCAF3_ISR 0077              __end_of_PIN_MANAGER_Initialize 0175  
                           _PIN_MANAGER_IOC 01AB                     _IOCAF3_InterruptHandler 0032  
                    _PatternRightFlashState 0038  
