

Microchip Technology PIC PRO Macro Assembler V1.45 build -152302408 
                                                                                               Sat May 05 07:05:19 2018

Microchip Technology Omniscient Code Generator v1.45 (PRO mode) build 201711160504
     1                           	processor	12F1572
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	swtext1,local,class=CONST,delta=2
    12                           	psect	swtext2,local,class=CONST,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	intentry,global,class=CODE,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	pa_nodes0,global,class=CODE,delta=2
    34                           	dabs	1,0x7E,2
    35  0000                     
    36                           ; Version 1.45
    37                           ; Generated 16/11/2017 GMT
    38                           ; 
    39                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC12F1572 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70  0000                     	;# 
    71  0001                     	;# 
    72  0002                     	;# 
    73  0003                     	;# 
    74  0004                     	;# 
    75  0005                     	;# 
    76  0006                     	;# 
    77  0007                     	;# 
    78  0008                     	;# 
    79  0009                     	;# 
    80  000A                     	;# 
    81  000B                     	;# 
    82  000C                     	;# 
    83  0011                     	;# 
    84  0012                     	;# 
    85  0013                     	;# 
    86  0015                     	;# 
    87  0016                     	;# 
    88  0016                     	;# 
    89  0017                     	;# 
    90  0018                     	;# 
    91  0019                     	;# 
    92  001A                     	;# 
    93  001B                     	;# 
    94  001C                     	;# 
    95  008C                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0095                     	;# 
   100  0096                     	;# 
   101  0097                     	;# 
   102  0098                     	;# 
   103  0099                     	;# 
   104  009A                     	;# 
   105  009B                     	;# 
   106  009B                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  009F                     	;# 
   111  010C                     	;# 
   112  0111                     	;# 
   113  0112                     	;# 
   114  0115                     	;# 
   115  0116                     	;# 
   116  0117                     	;# 
   117  0118                     	;# 
   118  0119                     	;# 
   119  011D                     	;# 
   120  011D                     	;# 
   121  018C                     	;# 
   122  0191                     	;# 
   123  0191                     	;# 
   124  0192                     	;# 
   125  0193                     	;# 
   126  0193                     	;# 
   127  0194                     	;# 
   128  0195                     	;# 
   129  0196                     	;# 
   130  0197                     	;# 
   131  0199                     	;# 
   132  019A                     	;# 
   133  019B                     	;# 
   134  019B                     	;# 
   135  019C                     	;# 
   136  019D                     	;# 
   137  019E                     	;# 
   138  019F                     	;# 
   139  020C                     	;# 
   140  028C                     	;# 
   141  030C                     	;# 
   142  038C                     	;# 
   143  0391                     	;# 
   144  0392                     	;# 
   145  0393                     	;# 
   146  0691                     	;# 
   147  0692                     	;# 
   148  0693                     	;# 
   149  0694                     	;# 
   150  0695                     	;# 
   151  0D8E                     	;# 
   152  0D8F                     	;# 
   153  0D90                     	;# 
   154  0D91                     	;# 
   155  0D91                     	;# 
   156  0D92                     	;# 
   157  0D93                     	;# 
   158  0D93                     	;# 
   159  0D94                     	;# 
   160  0D95                     	;# 
   161  0D95                     	;# 
   162  0D96                     	;# 
   163  0D97                     	;# 
   164  0D97                     	;# 
   165  0D98                     	;# 
   166  0D99                     	;# 
   167  0D99                     	;# 
   168  0D9A                     	;# 
   169  0D9B                     	;# 
   170  0D9C                     	;# 
   171  0D9C                     	;# 
   172  0D9D                     	;# 
   173  0D9D                     	;# 
   174  0D9E                     	;# 
   175  0D9F                     	;# 
   176  0DA0                     	;# 
   177  0DA1                     	;# 
   178  0DA1                     	;# 
   179  0DA2                     	;# 
   180  0DA3                     	;# 
   181  0DA3                     	;# 
   182  0DA4                     	;# 
   183  0DA5                     	;# 
   184  0DA5                     	;# 
   185  0DA6                     	;# 
   186  0DA7                     	;# 
   187  0DA7                     	;# 
   188  0DA8                     	;# 
   189  0DA9                     	;# 
   190  0DA9                     	;# 
   191  0DAA                     	;# 
   192  0DAB                     	;# 
   193  0DAC                     	;# 
   194  0DAC                     	;# 
   195  0DAD                     	;# 
   196  0DAD                     	;# 
   197  0DAE                     	;# 
   198  0DAF                     	;# 
   199  0DB0                     	;# 
   200  0DB1                     	;# 
   201  0DB1                     	;# 
   202  0DB2                     	;# 
   203  0DB3                     	;# 
   204  0DB3                     	;# 
   205  0DB4                     	;# 
   206  0DB5                     	;# 
   207  0DB5                     	;# 
   208  0DB6                     	;# 
   209  0DB7                     	;# 
   210  0DB7                     	;# 
   211  0DB8                     	;# 
   212  0DB9                     	;# 
   213  0DB9                     	;# 
   214  0DBA                     	;# 
   215  0DBB                     	;# 
   216  0DBC                     	;# 
   217  0DBC                     	;# 
   218  0DBD                     	;# 
   219  0DBD                     	;# 
   220  0DBE                     	;# 
   221  0DBF                     	;# 
   222  0DC0                     	;# 
   223  0FE4                     	;# 
   224  0FE5                     	;# 
   225  0FE6                     	;# 
   226  0FE7                     	;# 
   227  0FE8                     	;# 
   228  0FE8                     	;# 
   229  0FE9                     	;# 
   230  0FEA                     	;# 
   231  0FEA                     	;# 
   232  0FEB                     	;# 
   233  0FED                     	;# 
   234  0FEE                     	;# 
   235  0FEE                     	;# 
   236  0FEF                     	;# 
   237  0000                     	;# 
   238  0001                     	;# 
   239  0002                     	;# 
   240  0003                     	;# 
   241  0004                     	;# 
   242  0005                     	;# 
   243  0006                     	;# 
   244  0007                     	;# 
   245  0008                     	;# 
   246  0009                     	;# 
   247  000A                     	;# 
   248  000B                     	;# 
   249  000C                     	;# 
   250  0011                     	;# 
   251  0012                     	;# 
   252  0013                     	;# 
   253  0015                     	;# 
   254  0016                     	;# 
   255  0016                     	;# 
   256  0017                     	;# 
   257  0018                     	;# 
   258  0019                     	;# 
   259  001A                     	;# 
   260  001B                     	;# 
   261  001C                     	;# 
   262  008C                     	;# 
   263  0091                     	;# 
   264  0092                     	;# 
   265  0093                     	;# 
   266  0095                     	;# 
   267  0096                     	;# 
   268  0097                     	;# 
   269  0098                     	;# 
   270  0099                     	;# 
   271  009A                     	;# 
   272  009B                     	;# 
   273  009B                     	;# 
   274  009C                     	;# 
   275  009D                     	;# 
   276  009E                     	;# 
   277  009F                     	;# 
   278  010C                     	;# 
   279  0111                     	;# 
   280  0112                     	;# 
   281  0115                     	;# 
   282  0116                     	;# 
   283  0117                     	;# 
   284  0118                     	;# 
   285  0119                     	;# 
   286  011D                     	;# 
   287  011D                     	;# 
   288  018C                     	;# 
   289  0191                     	;# 
   290  0191                     	;# 
   291  0192                     	;# 
   292  0193                     	;# 
   293  0193                     	;# 
   294  0194                     	;# 
   295  0195                     	;# 
   296  0196                     	;# 
   297  0197                     	;# 
   298  0199                     	;# 
   299  019A                     	;# 
   300  019B                     	;# 
   301  019B                     	;# 
   302  019C                     	;# 
   303  019D                     	;# 
   304  019E                     	;# 
   305  019F                     	;# 
   306  020C                     	;# 
   307  028C                     	;# 
   308  030C                     	;# 
   309  038C                     	;# 
   310  0391                     	;# 
   311  0392                     	;# 
   312  0393                     	;# 
   313  0691                     	;# 
   314  0692                     	;# 
   315  0693                     	;# 
   316  0694                     	;# 
   317  0695                     	;# 
   318  0D8E                     	;# 
   319  0D8F                     	;# 
   320  0D90                     	;# 
   321  0D91                     	;# 
   322  0D91                     	;# 
   323  0D92                     	;# 
   324  0D93                     	;# 
   325  0D93                     	;# 
   326  0D94                     	;# 
   327  0D95                     	;# 
   328  0D95                     	;# 
   329  0D96                     	;# 
   330  0D97                     	;# 
   331  0D97                     	;# 
   332  0D98                     	;# 
   333  0D99                     	;# 
   334  0D99                     	;# 
   335  0D9A                     	;# 
   336  0D9B                     	;# 
   337  0D9C                     	;# 
   338  0D9C                     	;# 
   339  0D9D                     	;# 
   340  0D9D                     	;# 
   341  0D9E                     	;# 
   342  0D9F                     	;# 
   343  0DA0                     	;# 
   344  0DA1                     	;# 
   345  0DA1                     	;# 
   346  0DA2                     	;# 
   347  0DA3                     	;# 
   348  0DA3                     	;# 
   349  0DA4                     	;# 
   350  0DA5                     	;# 
   351  0DA5                     	;# 
   352  0DA6                     	;# 
   353  0DA7                     	;# 
   354  0DA7                     	;# 
   355  0DA8                     	;# 
   356  0DA9                     	;# 
   357  0DA9                     	;# 
   358  0DAA                     	;# 
   359  0DAB                     	;# 
   360  0DAC                     	;# 
   361  0DAC                     	;# 
   362  0DAD                     	;# 
   363  0DAD                     	;# 
   364  0DAE                     	;# 
   365  0DAF                     	;# 
   366  0DB0                     	;# 
   367  0DB1                     	;# 
   368  0DB1                     	;# 
   369  0DB2                     	;# 
   370  0DB3                     	;# 
   371  0DB3                     	;# 
   372  0DB4                     	;# 
   373  0DB5                     	;# 
   374  0DB5                     	;# 
   375  0DB6                     	;# 
   376  0DB7                     	;# 
   377  0DB7                     	;# 
   378  0DB8                     	;# 
   379  0DB9                     	;# 
   380  0DB9                     	;# 
   381  0DBA                     	;# 
   382  0DBB                     	;# 
   383  0DBC                     	;# 
   384  0DBC                     	;# 
   385  0DBD                     	;# 
   386  0DBD                     	;# 
   387  0DBE                     	;# 
   388  0DBF                     	;# 
   389  0DC0                     	;# 
   390  0FE4                     	;# 
   391  0FE5                     	;# 
   392  0FE6                     	;# 
   393  0FE7                     	;# 
   394  0FE8                     	;# 
   395  0FE8                     	;# 
   396  0FE9                     	;# 
   397  0FEA                     	;# 
   398  0FEA                     	;# 
   399  0FEB                     	;# 
   400  0FED                     	;# 
   401  0FEE                     	;# 
   402  0FEE                     	;# 
   403  0FEF                     	;# 
   404  0000                     	;# 
   405  0001                     	;# 
   406  0002                     	;# 
   407  0003                     	;# 
   408  0004                     	;# 
   409  0005                     	;# 
   410  0006                     	;# 
   411  0007                     	;# 
   412  0008                     	;# 
   413  0009                     	;# 
   414  000A                     	;# 
   415  000B                     	;# 
   416  000C                     	;# 
   417  0011                     	;# 
   418  0012                     	;# 
   419  0013                     	;# 
   420  0015                     	;# 
   421  0016                     	;# 
   422  0016                     	;# 
   423  0017                     	;# 
   424  0018                     	;# 
   425  0019                     	;# 
   426  001A                     	;# 
   427  001B                     	;# 
   428  001C                     	;# 
   429  008C                     	;# 
   430  0091                     	;# 
   431  0092                     	;# 
   432  0093                     	;# 
   433  0095                     	;# 
   434  0096                     	;# 
   435  0097                     	;# 
   436  0098                     	;# 
   437  0099                     	;# 
   438  009A                     	;# 
   439  009B                     	;# 
   440  009B                     	;# 
   441  009C                     	;# 
   442  009D                     	;# 
   443  009E                     	;# 
   444  009F                     	;# 
   445  010C                     	;# 
   446  0111                     	;# 
   447  0112                     	;# 
   448  0115                     	;# 
   449  0116                     	;# 
   450  0117                     	;# 
   451  0118                     	;# 
   452  0119                     	;# 
   453  011D                     	;# 
   454  011D                     	;# 
   455  018C                     	;# 
   456  0191                     	;# 
   457  0191                     	;# 
   458  0192                     	;# 
   459  0193                     	;# 
   460  0193                     	;# 
   461  0194                     	;# 
   462  0195                     	;# 
   463  0196                     	;# 
   464  0197                     	;# 
   465  0199                     	;# 
   466  019A                     	;# 
   467  019B                     	;# 
   468  019B                     	;# 
   469  019C                     	;# 
   470  019D                     	;# 
   471  019E                     	;# 
   472  019F                     	;# 
   473  020C                     	;# 
   474  028C                     	;# 
   475  030C                     	;# 
   476  038C                     	;# 
   477  0391                     	;# 
   478  0392                     	;# 
   479  0393                     	;# 
   480  0691                     	;# 
   481  0692                     	;# 
   482  0693                     	;# 
   483  0694                     	;# 
   484  0695                     	;# 
   485  0D8E                     	;# 
   486  0D8F                     	;# 
   487  0D90                     	;# 
   488  0D91                     	;# 
   489  0D91                     	;# 
   490  0D92                     	;# 
   491  0D93                     	;# 
   492  0D93                     	;# 
   493  0D94                     	;# 
   494  0D95                     	;# 
   495  0D95                     	;# 
   496  0D96                     	;# 
   497  0D97                     	;# 
   498  0D97                     	;# 
   499  0D98                     	;# 
   500  0D99                     	;# 
   501  0D99                     	;# 
   502  0D9A                     	;# 
   503  0D9B                     	;# 
   504  0D9C                     	;# 
   505  0D9C                     	;# 
   506  0D9D                     	;# 
   507  0D9D                     	;# 
   508  0D9E                     	;# 
   509  0D9F                     	;# 
   510  0DA0                     	;# 
   511  0DA1                     	;# 
   512  0DA1                     	;# 
   513  0DA2                     	;# 
   514  0DA3                     	;# 
   515  0DA3                     	;# 
   516  0DA4                     	;# 
   517  0DA5                     	;# 
   518  0DA5                     	;# 
   519  0DA6                     	;# 
   520  0DA7                     	;# 
   521  0DA7                     	;# 
   522  0DA8                     	;# 
   523  0DA9                     	;# 
   524  0DA9                     	;# 
   525  0DAA                     	;# 
   526  0DAB                     	;# 
   527  0DAC                     	;# 
   528  0DAC                     	;# 
   529  0DAD                     	;# 
   530  0DAD                     	;# 
   531  0DAE                     	;# 
   532  0DAF                     	;# 
   533  0DB0                     	;# 
   534  0DB1                     	;# 
   535  0DB1                     	;# 
   536  0DB2                     	;# 
   537  0DB3                     	;# 
   538  0DB3                     	;# 
   539  0DB4                     	;# 
   540  0DB5                     	;# 
   541  0DB5                     	;# 
   542  0DB6                     	;# 
   543  0DB7                     	;# 
   544  0DB7                     	;# 
   545  0DB8                     	;# 
   546  0DB9                     	;# 
   547  0DB9                     	;# 
   548  0DBA                     	;# 
   549  0DBB                     	;# 
   550  0DBC                     	;# 
   551  0DBC                     	;# 
   552  0DBD                     	;# 
   553  0DBD                     	;# 
   554  0DBE                     	;# 
   555  0DBF                     	;# 
   556  0DC0                     	;# 
   557  0FE4                     	;# 
   558  0FE5                     	;# 
   559  0FE6                     	;# 
   560  0FE7                     	;# 
   561  0FE8                     	;# 
   562  0FE8                     	;# 
   563  0FE9                     	;# 
   564  0FEA                     	;# 
   565  0FEA                     	;# 
   566  0FEB                     	;# 
   567  0FED                     	;# 
   568  0FEE                     	;# 
   569  0FEE                     	;# 
   570  0FEF                     	;# 
   571  0000                     	;# 
   572  0001                     	;# 
   573  0002                     	;# 
   574  0003                     	;# 
   575  0004                     	;# 
   576  0005                     	;# 
   577  0006                     	;# 
   578  0007                     	;# 
   579  0008                     	;# 
   580  0009                     	;# 
   581  000A                     	;# 
   582  000B                     	;# 
   583  000C                     	;# 
   584  0011                     	;# 
   585  0012                     	;# 
   586  0013                     	;# 
   587  0015                     	;# 
   588  0016                     	;# 
   589  0016                     	;# 
   590  0017                     	;# 
   591  0018                     	;# 
   592  0019                     	;# 
   593  001A                     	;# 
   594  001B                     	;# 
   595  001C                     	;# 
   596  008C                     	;# 
   597  0091                     	;# 
   598  0092                     	;# 
   599  0093                     	;# 
   600  0095                     	;# 
   601  0096                     	;# 
   602  0097                     	;# 
   603  0098                     	;# 
   604  0099                     	;# 
   605  009A                     	;# 
   606  009B                     	;# 
   607  009B                     	;# 
   608  009C                     	;# 
   609  009D                     	;# 
   610  009E                     	;# 
   611  009F                     	;# 
   612  010C                     	;# 
   613  0111                     	;# 
   614  0112                     	;# 
   615  0115                     	;# 
   616  0116                     	;# 
   617  0117                     	;# 
   618  0118                     	;# 
   619  0119                     	;# 
   620  011D                     	;# 
   621  011D                     	;# 
   622  018C                     	;# 
   623  0191                     	;# 
   624  0191                     	;# 
   625  0192                     	;# 
   626  0193                     	;# 
   627  0193                     	;# 
   628  0194                     	;# 
   629  0195                     	;# 
   630  0196                     	;# 
   631  0197                     	;# 
   632  0199                     	;# 
   633  019A                     	;# 
   634  019B                     	;# 
   635  019B                     	;# 
   636  019C                     	;# 
   637  019D                     	;# 
   638  019E                     	;# 
   639  019F                     	;# 
   640  020C                     	;# 
   641  028C                     	;# 
   642  030C                     	;# 
   643  038C                     	;# 
   644  0391                     	;# 
   645  0392                     	;# 
   646  0393                     	;# 
   647  0691                     	;# 
   648  0692                     	;# 
   649  0693                     	;# 
   650  0694                     	;# 
   651  0695                     	;# 
   652  0D8E                     	;# 
   653  0D8F                     	;# 
   654  0D90                     	;# 
   655  0D91                     	;# 
   656  0D91                     	;# 
   657  0D92                     	;# 
   658  0D93                     	;# 
   659  0D93                     	;# 
   660  0D94                     	;# 
   661  0D95                     	;# 
   662  0D95                     	;# 
   663  0D96                     	;# 
   664  0D97                     	;# 
   665  0D97                     	;# 
   666  0D98                     	;# 
   667  0D99                     	;# 
   668  0D99                     	;# 
   669  0D9A                     	;# 
   670  0D9B                     	;# 
   671  0D9C                     	;# 
   672  0D9C                     	;# 
   673  0D9D                     	;# 
   674  0D9D                     	;# 
   675  0D9E                     	;# 
   676  0D9F                     	;# 
   677  0DA0                     	;# 
   678  0DA1                     	;# 
   679  0DA1                     	;# 
   680  0DA2                     	;# 
   681  0DA3                     	;# 
   682  0DA3                     	;# 
   683  0DA4                     	;# 
   684  0DA5                     	;# 
   685  0DA5                     	;# 
   686  0DA6                     	;# 
   687  0DA7                     	;# 
   688  0DA7                     	;# 
   689  0DA8                     	;# 
   690  0DA9                     	;# 
   691  0DA9                     	;# 
   692  0DAA                     	;# 
   693  0DAB                     	;# 
   694  0DAC                     	;# 
   695  0DAC                     	;# 
   696  0DAD                     	;# 
   697  0DAD                     	;# 
   698  0DAE                     	;# 
   699  0DAF                     	;# 
   700  0DB0                     	;# 
   701  0DB1                     	;# 
   702  0DB1                     	;# 
   703  0DB2                     	;# 
   704  0DB3                     	;# 
   705  0DB3                     	;# 
   706  0DB4                     	;# 
   707  0DB5                     	;# 
   708  0DB5                     	;# 
   709  0DB6                     	;# 
   710  0DB7                     	;# 
   711  0DB7                     	;# 
   712  0DB8                     	;# 
   713  0DB9                     	;# 
   714  0DB9                     	;# 
   715  0DBA                     	;# 
   716  0DBB                     	;# 
   717  0DBC                     	;# 
   718  0DBC                     	;# 
   719  0DBD                     	;# 
   720  0DBD                     	;# 
   721  0DBE                     	;# 
   722  0DBF                     	;# 
   723  0DC0                     	;# 
   724  0FE4                     	;# 
   725  0FE5                     	;# 
   726  0FE6                     	;# 
   727  0FE7                     	;# 
   728  0FE8                     	;# 
   729  0FE8                     	;# 
   730  0FE9                     	;# 
   731  0FEA                     	;# 
   732  0FEA                     	;# 
   733  0FEB                     	;# 
   734  0FED                     	;# 
   735  0FEE                     	;# 
   736  0FEE                     	;# 
   737  0FEF                     	;# 
   738  0000                     	;# 
   739  0001                     	;# 
   740  0002                     	;# 
   741  0003                     	;# 
   742  0004                     	;# 
   743  0005                     	;# 
   744  0006                     	;# 
   745  0007                     	;# 
   746  0008                     	;# 
   747  0009                     	;# 
   748  000A                     	;# 
   749  000B                     	;# 
   750  000C                     	;# 
   751  0011                     	;# 
   752  0012                     	;# 
   753  0013                     	;# 
   754  0015                     	;# 
   755  0016                     	;# 
   756  0016                     	;# 
   757  0017                     	;# 
   758  0018                     	;# 
   759  0019                     	;# 
   760  001A                     	;# 
   761  001B                     	;# 
   762  001C                     	;# 
   763  008C                     	;# 
   764  0091                     	;# 
   765  0092                     	;# 
   766  0093                     	;# 
   767  0095                     	;# 
   768  0096                     	;# 
   769  0097                     	;# 
   770  0098                     	;# 
   771  0099                     	;# 
   772  009A                     	;# 
   773  009B                     	;# 
   774  009B                     	;# 
   775  009C                     	;# 
   776  009D                     	;# 
   777  009E                     	;# 
   778  009F                     	;# 
   779  010C                     	;# 
   780  0111                     	;# 
   781  0112                     	;# 
   782  0115                     	;# 
   783  0116                     	;# 
   784  0117                     	;# 
   785  0118                     	;# 
   786  0119                     	;# 
   787  011D                     	;# 
   788  011D                     	;# 
   789  018C                     	;# 
   790  0191                     	;# 
   791  0191                     	;# 
   792  0192                     	;# 
   793  0193                     	;# 
   794  0193                     	;# 
   795  0194                     	;# 
   796  0195                     	;# 
   797  0196                     	;# 
   798  0197                     	;# 
   799  0199                     	;# 
   800  019A                     	;# 
   801  019B                     	;# 
   802  019B                     	;# 
   803  019C                     	;# 
   804  019D                     	;# 
   805  019E                     	;# 
   806  019F                     	;# 
   807  020C                     	;# 
   808  028C                     	;# 
   809  030C                     	;# 
   810  038C                     	;# 
   811  0391                     	;# 
   812  0392                     	;# 
   813  0393                     	;# 
   814  0691                     	;# 
   815  0692                     	;# 
   816  0693                     	;# 
   817  0694                     	;# 
   818  0695                     	;# 
   819  0D8E                     	;# 
   820  0D8F                     	;# 
   821  0D90                     	;# 
   822  0D91                     	;# 
   823  0D91                     	;# 
   824  0D92                     	;# 
   825  0D93                     	;# 
   826  0D93                     	;# 
   827  0D94                     	;# 
   828  0D95                     	;# 
   829  0D95                     	;# 
   830  0D96                     	;# 
   831  0D97                     	;# 
   832  0D97                     	;# 
   833  0D98                     	;# 
   834  0D99                     	;# 
   835  0D99                     	;# 
   836  0D9A                     	;# 
   837  0D9B                     	;# 
   838  0D9C                     	;# 
   839  0D9C                     	;# 
   840  0D9D                     	;# 
   841  0D9D                     	;# 
   842  0D9E                     	;# 
   843  0D9F                     	;# 
   844  0DA0                     	;# 
   845  0DA1                     	;# 
   846  0DA1                     	;# 
   847  0DA2                     	;# 
   848  0DA3                     	;# 
   849  0DA3                     	;# 
   850  0DA4                     	;# 
   851  0DA5                     	;# 
   852  0DA5                     	;# 
   853  0DA6                     	;# 
   854  0DA7                     	;# 
   855  0DA7                     	;# 
   856  0DA8                     	;# 
   857  0DA9                     	;# 
   858  0DA9                     	;# 
   859  0DAA                     	;# 
   860  0DAB                     	;# 
   861  0DAC                     	;# 
   862  0DAC                     	;# 
   863  0DAD                     	;# 
   864  0DAD                     	;# 
   865  0DAE                     	;# 
   866  0DAF                     	;# 
   867  0DB0                     	;# 
   868  0DB1                     	;# 
   869  0DB1                     	;# 
   870  0DB2                     	;# 
   871  0DB3                     	;# 
   872  0DB3                     	;# 
   873  0DB4                     	;# 
   874  0DB5                     	;# 
   875  0DB5                     	;# 
   876  0DB6                     	;# 
   877  0DB7                     	;# 
   878  0DB7                     	;# 
   879  0DB8                     	;# 
   880  0DB9                     	;# 
   881  0DB9                     	;# 
   882  0DBA                     	;# 
   883  0DBB                     	;# 
   884  0DBC                     	;# 
   885  0DBC                     	;# 
   886  0DBD                     	;# 
   887  0DBD                     	;# 
   888  0DBE                     	;# 
   889  0DBF                     	;# 
   890  0DC0                     	;# 
   891  0FE4                     	;# 
   892  0FE5                     	;# 
   893  0FE6                     	;# 
   894  0FE7                     	;# 
   895  0FE8                     	;# 
   896  0FE8                     	;# 
   897  0FE9                     	;# 
   898  0FEA                     	;# 
   899  0FEA                     	;# 
   900  0FEB                     	;# 
   901  0FED                     	;# 
   902  0FEE                     	;# 
   903  0FEE                     	;# 
   904  0FEF                     	;# 
   905                           
   906                           	psect	nvBANK0
   907  0020                     __pnvBANK0:	
   908  0020                     _TMR0_InterruptHandler:	
   909  0020                     	ds	2
   910  0022                     _IOCAF3_InterruptHandler:	
   911  0022                     	ds	2
   912  0024                     _IOCAF2_InterruptHandler:	
   913  0024                     	ds	2
   914  0026                     _timer0ReloadVal:	
   915  0026                     	ds	1
   916  000C                     _PORTAbits	set	12
   917  000C                     _PORTA	set	12
   918  0015                     _TMR0	set	21
   919  000B                     _INTCONbits	set	11
   920  0095                     _OPTION_REG	set	149
   921  0097                     _WDTCON	set	151
   922  0098                     _OSCTUNE	set	152
   923  0099                     _OSCCON	set	153
   924  0095                     _OPTION_REGbits	set	149
   925  008C                     _TRISA	set	140
   926  0116                     _BORCON	set	278
   927  011D                     _APFCON	set	285
   928  010C                     _LATA	set	268
   929  0197                     _VREGCONbits	set	407
   930  018C                     _ANSELA	set	396
   931  020C                     _WPUA	set	524
   932  028C                     _ODCONA	set	652
   933  0391                     _IOCAPbits	set	913
   934  0392                     _IOCANbits	set	914
   935  0393                     _IOCAFbits	set	915
   936                           
   937                           ; #config settings
   938  0000                     
   939                           	psect	cinit
   940  0012                     start_initialization:	
   941  0012                     __initialization:	
   942                           
   943                           ; Clear objects allocated to COMMON
   944  0012  01F0               	clrf	__pbssCOMMON& (0+127)
   945  0013  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   946  0014  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   947  0015  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   948  0016  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   949                           
   950                           ; Clear objects allocated to BANK0
   951  0017  0020               	movlb	0	; select bank0
   952  0018  01AB               	clrf	__pbssBANK0& (0+127)
   953  0019                     end_of_initialization:	
   954                           ;End of C runtime variable initialization code
   955                           
   956  0019                     __end_of__initialization:	
   957  0019  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
   958  001A  0020               	movlb	0
   959  001B  281C               	ljmp	_main	;jump to C main() function
   960                           
   961                           	psect	bssCOMMON
   962  0070                     __pbssCOMMON:	
   963  0070                     _RightTime:	
   964  0070                     	ds	2
   965  0072                     _LeftTime:	
   966  0072                     	ds	2
   967  0074                     _LEDOns:	
   968  0074                     	ds	1
   969                           
   970                           	psect	bssBANK0
   971  002B                     __pbssBANK0:	
   972  002B                     _LEDState:	
   973  002B                     	ds	1
   974                           
   975                           	psect	cstackCOMMON
   976  0075                     __pcstackCOMMON:	
   977  0075                     ?_IOCAF2_DefaultInterruptHandler:	
   978  0075                     ??_IOCAF2_DefaultInterruptHandler:	
   979                           ; 1 bytes @ 0x0
   980                           
   981  0075                     ?_IOCAF3_DefaultInterruptHandler:	
   982                           ; 1 bytes @ 0x0
   983                           
   984  0075                     ??_IOCAF3_DefaultInterruptHandler:	
   985                           ; 1 bytes @ 0x0
   986                           
   987  0075                     ?_IOCAF2_ISR:	
   988                           ; 1 bytes @ 0x0
   989                           
   990  0075                     ??_IOCAF2_ISR:	
   991                           ; 1 bytes @ 0x0
   992                           
   993  0075                     ?_IOCAF3_ISR:	
   994                           ; 1 bytes @ 0x0
   995                           
   996  0075                     ??_IOCAF3_ISR:	
   997                           ; 1 bytes @ 0x0
   998                           
   999  0075                     ?_OSCILLATOR_Initialize:	
  1000                           ; 1 bytes @ 0x0
  1001                           
  1002  0075                     ?_WDT_Initialize:	
  1003                           ; 1 bytes @ 0x0
  1004                           
  1005  0075                     ?_TMR0_Initialize:	
  1006                           ; 1 bytes @ 0x0
  1007                           
  1008  0075                     ?_TMR0_ISR:	
  1009                           ; 1 bytes @ 0x0
  1010                           
  1011  0075                     ?_TMR0_CallBack:	
  1012                           ; 1 bytes @ 0x0
  1013                           
  1014  0075                     ?_PIN_MANAGER_Initialize:	
  1015                           ; 1 bytes @ 0x0
  1016                           
  1017  0075                     ?_PIN_MANAGER_IOC:	
  1018                           ; 1 bytes @ 0x0
  1019                           
  1020  0075                     ??_PIN_MANAGER_IOC:	
  1021                           ; 1 bytes @ 0x0
  1022                           
  1023  0075                     ?_SYSTEM_Initialize:	
  1024                           ; 1 bytes @ 0x0
  1025                           
  1026  0075                     ?_INTERRUPT_InterruptManager:	
  1027                           ; 1 bytes @ 0x0
  1028                           
  1029  0075                     ?_SetLEDOn:	
  1030                           ; 1 bytes @ 0x0
  1031                           
  1032  0075                     ?_SetLEDOff:	
  1033                           ; 1 bytes @ 0x0
  1034                           
  1035  0075                     ?_SetAllLEDsOff:	
  1036                           ; 1 bytes @ 0x0
  1037                           
  1038  0075                     ?_CharlieplexLEDs:	
  1039                           ; 1 bytes @ 0x0
  1040                           
  1041  0075                     ??_CharlieplexLEDs:	
  1042                           ; 1 bytes @ 0x0
  1043                           
  1044  0075                     ?_main:	
  1045                           ; 1 bytes @ 0x0
  1046                           
  1047  0075                     CharlieplexLEDs@PortTemp:	
  1048                           ; 1 bytes @ 0x0
  1049                           
  1050                           
  1051                           ; 1 bytes @ 0x0
  1052  0075                     	ds	1
  1053  0076                     ?_IOCAF2_SetInterruptHandler:	
  1054  0076                     ?_IOCAF3_SetInterruptHandler:	
  1055                           ; 1 bytes @ 0x1
  1056                           
  1057  0076                     ??_OSCILLATOR_Initialize:	
  1058                           ; 1 bytes @ 0x1
  1059                           
  1060  0076                     ??_WDT_Initialize:	
  1061                           ; 1 bytes @ 0x1
  1062                           
  1063  0076                     ??_TMR0_Initialize:	
  1064                           ; 1 bytes @ 0x1
  1065                           
  1066  0076                     ??_TMR0_ISR:	
  1067                           ; 1 bytes @ 0x1
  1068                           
  1069  0076                     ??_TMR0_CallBack:	
  1070                           ; 1 bytes @ 0x1
  1071                           
  1072  0076                     ??_INTERRUPT_InterruptManager:	
  1073                           ; 1 bytes @ 0x1
  1074                           
  1075  0076                     ?_TMR0_SetInterruptHandler:	
  1076                           ; 1 bytes @ 0x1
  1077                           
  1078  0076                     ??_SetLEDOn:	
  1079                           ; 1 bytes @ 0x1
  1080                           
  1081  0076                     ??_SetLEDOff:	
  1082                           ; 1 bytes @ 0x1
  1083                           
  1084  0076                     ??_SetAllLEDsOff:	
  1085                           ; 1 bytes @ 0x1
  1086                           
  1087  0076                     SetLEDOn@LED:	
  1088                           ; 1 bytes @ 0x1
  1089                           
  1090  0076                     SetLEDOff@LED:	
  1091                           ; 1 bytes @ 0x1
  1092                           
  1093  0076                     IOCAF2_SetInterruptHandler@InterruptHandler:	
  1094                           ; 1 bytes @ 0x1
  1095                           
  1096  0076                     IOCAF3_SetInterruptHandler@InterruptHandler:	
  1097                           ; 2 bytes @ 0x1
  1098                           
  1099  0076                     TMR0_SetInterruptHandler@InterruptHandler:	
  1100                           ; 2 bytes @ 0x1
  1101                           
  1102                           
  1103                           ; 2 bytes @ 0x1
  1104  0076                     	ds	2
  1105  0078                     ??_IOCAF2_SetInterruptHandler:	
  1106  0078                     ??_IOCAF3_SetInterruptHandler:	
  1107                           ; 1 bytes @ 0x3
  1108                           
  1109  0078                     ??_PIN_MANAGER_Initialize:	
  1110                           ; 1 bytes @ 0x3
  1111                           
  1112  0078                     ??_SYSTEM_Initialize:	
  1113                           ; 1 bytes @ 0x3
  1114                           
  1115  0078                     ??_TMR0_SetInterruptHandler:	
  1116                           ; 1 bytes @ 0x3
  1117                           
  1118  0078                     ??_main:	
  1119                           ; 1 bytes @ 0x3
  1120                           
  1121                           
  1122                           ; 1 bytes @ 0x3
  1123  0078                     	ds	2
  1124                           
  1125                           	psect	cstackBANK0
  1126  0027                     __pcstackBANK0:	
  1127  0027                     main@LastLeftButtonState:	
  1128                           
  1129                           ; 1 bytes @ 0x0
  1130  0027                     	ds	1
  1131  0028                     main@LastRightButtonState:	
  1132                           
  1133                           ; 1 bytes @ 0x1
  1134  0028                     	ds	1
  1135  0029                     main@LeftState:	
  1136                           
  1137                           ; 1 bytes @ 0x2
  1138  0029                     	ds	1
  1139  002A                     main@RightState:	
  1140                           
  1141                           ; 1 bytes @ 0x3
  1142  002A                     	ds	1
  1143                           
  1144                           	psect	maintext
  1145  001C                     __pmaintext:	
  1146 ;;
  1147 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1148 ;;
  1149 ;; *************** function _main *****************
  1150 ;; Defined at:
  1151 ;;		line 217 in file "main.c"
  1152 ;; Parameters:    Size  Location     Type
  1153 ;;		None
  1154 ;; Auto vars:     Size  Location     Type
  1155 ;;  RightState      1    3[BANK0 ] unsigned char 
  1156 ;;  LeftState       1    2[BANK0 ] unsigned char 
  1157 ;;  LastRightBut    1    1[BANK0 ] unsigned char 
  1158 ;;  LastLeftButt    1    0[BANK0 ] unsigned char 
  1159 ;; Return value:  Size  Location     Type
  1160 ;;                  1    wreg      void 
  1161 ;; Registers used:
  1162 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1163 ;; Tracked objects:
  1164 ;;		On entry : B1F/0
  1165 ;;		On exit  : 1F/0
  1166 ;;		Unchanged: 0/0
  1167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1168 ;;      Params:         0       0       0       0
  1169 ;;      Locals:         0       4       0       0
  1170 ;;      Temps:          2       0       0       0
  1171 ;;      Totals:         2       4       0       0
  1172 ;;Total ram usage:        6 bytes
  1173 ;; Hardware stack levels required when called:    7
  1174 ;; This function calls:
  1175 ;;		_SYSTEM_Initialize
  1176 ;;		_SetAllLEDsOff
  1177 ;;		_SetLEDOff
  1178 ;;		_SetLEDOn
  1179 ;;		_TMR0_SetInterruptHandler
  1180 ;; This function is called by:
  1181 ;;		Startup code after reset
  1182 ;; This function uses a non-reentrant model
  1183 ;;
  1184                           
  1185                           
  1186                           ;psect for function _main
  1187  001C                     _main:	
  1188                           
  1189                           ;main.c: 220: SYSTEM_Initialize();
  1190                           
  1191                           ;incstack = 0
  1192                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1193  001C  2233               	fcall	_SYSTEM_Initialize
  1194                           
  1195                           ;main.c: 222: TMR0_SetInterruptHandler(CharlieplexLEDs);
  1196  001D  304B               	movlw	low _CharlieplexLEDs
  1197  001E  00F6               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  1198  001F  3001               	movlw	high _CharlieplexLEDs
  1199  0020  00F7               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  1200  0021  2220               	fcall	_TMR0_SetInterruptHandler
  1201                           
  1202                           ;main.c: 228: (INTCONbits.GIE = 1);
  1203  0022  178B               	bsf	11,7	;volatile
  1204                           
  1205                           ;main.c: 231: (INTCONbits.PEIE = 1);
  1206  0023  170B               	bsf	11,6	;volatile
  1207                           
  1208                           ;main.c: 242: uint8_t LeftState = 0;
  1209  0024  01A9               	clrf	main@LeftState
  1210                           
  1211                           ;main.c: 243: uint8_t RightState = 0;
  1212  0025  01AA               	clrf	main@RightState
  1213                           
  1214                           ;main.c: 244: uint8_t LastLeftButtonState = 0;
  1215  0026  01A7               	clrf	main@LastLeftButtonState
  1216  0027                     l1538:	
  1217                           
  1218                           ;main.c: 245: uint8_t LastRightButtonState = 0;
  1219  0027  01A8               	clrf	main@LastRightButtonState
  1220  0028  2927               	goto	l1666
  1221  0029                     l1540:	
  1222                           
  1223                           ;main.c: 258: SetLEDOn(0x04);
  1224  0029  3004               	movlw	4
  1225  002A  223B               	fcall	_SetLEDOn
  1226                           
  1227                           ;main.c: 259: SetLEDOff(0x08);
  1228  002B  3008               	movlw	8
  1229  002C  222F               	fcall	_SetLEDOff
  1230  002D                     L1:	
  1231                           
  1232                           ;main.c: 260: SetLEDOff(0x01);
  1233  002D  3001               	movlw	1
  1234  002E  222F               	fcall	_SetLEDOff
  1235  002F                     L2:	
  1236                           
  1237                           ;main.c: 261: SetLEDOff(0x02);
  1238  002F  3002               	movlw	2
  1239  0030  222F               	fcall	_SetLEDOff
  1240  0031                     L3:	
  1241                           
  1242                           ;main.c: 262: SetLEDOff(0x80);
  1243  0031  3080               	movlw	128
  1244  0032  222F               	fcall	_SetLEDOff
  1245  0033                     L4:	
  1246                           
  1247                           ;main.c: 263: SetLEDOff(0x40);
  1248  0033  3040               	movlw	64
  1249  0034  222F               	fcall	_SetLEDOff
  1250  0035                     L5:	
  1251                           
  1252                           ;main.c: 264: SetLEDOff(0x20);
  1253  0035  3020               	movlw	32
  1254  0036  222F               	fcall	_SetLEDOff
  1255  0037                     L6:	
  1256                           
  1257                           ;main.c: 265: SetLEDOff(0x10);
  1258  0037  3010               	movlw	16
  1259  0038  222F               	fcall	_SetLEDOff
  1260  0039                     l1542:	
  1261                           
  1262                           ;main.c: 266: RightTime = 10000;
  1263  0039  3010               	movlw	16
  1264  003A  00F0               	movwf	_RightTime	;volatile
  1265  003B  3027               	movlw	39
  1266  003C  00F1               	movwf	_RightTime+1	;volatile
  1267                           
  1268                           ;main.c: 267: RightState++;
  1269  003D  0020               	movlb	0	; select bank0
  1270  003E  0AAA               	incf	main@RightState,f
  1271                           
  1272                           ;main.c: 268: break;
  1273  003F  2909               	goto	l1650
  1274  0040                     l1546:	
  1275                           
  1276                           ;main.c: 271: if (RightTime == 0)
  1277  0040  0870               	movf	_RightTime,w	;volatile
  1278  0041  0471               	iorwf	_RightTime+1,w	;volatile
  1279  0042  1D03               	btfss	3,2
  1280  0043  2909               	goto	l1650
  1281                           
  1282                           ;main.c: 272: {
  1283                           ;main.c: 273: SetLEDOff(0x04);
  1284  0044  3004               	movlw	4
  1285  0045  222F               	fcall	_SetLEDOff
  1286                           
  1287                           ;main.c: 274: SetLEDOn(0x08);
  1288  0046  3008               	movlw	8
  1289  0047  223B               	fcall	_SetLEDOn
  1290  0048  282D               	goto	L1
  1291  0049                     l1554:	
  1292                           ;main.c: 280: SetLEDOff(0x10);
  1293                           
  1294                           ;main.c: 279: SetLEDOff(0x20);
  1295                           
  1296                           ;main.c: 278: SetLEDOff(0x40);
  1297                           
  1298                           ;main.c: 277: SetLEDOff(0x80);
  1299                           
  1300                           ;main.c: 276: SetLEDOff(0x02);
  1301                           
  1302                           ;main.c: 275: SetLEDOff(0x01);
  1303                           
  1304                           
  1305                           ;main.c: 287: if (RightTime == 0)
  1306  0049  0870               	movf	_RightTime,w	;volatile
  1307  004A  0471               	iorwf	_RightTime+1,w	;volatile
  1308  004B  1D03               	btfss	3,2
  1309  004C  2909               	goto	l1650
  1310                           
  1311                           ;main.c: 288: {
  1312                           ;main.c: 289: SetLEDOff(0x04);
  1313  004D  3004               	movlw	4
  1314  004E  222F               	fcall	_SetLEDOff
  1315                           
  1316                           ;main.c: 290: SetLEDOff(0x08);
  1317  004F  3008               	movlw	8
  1318  0050  222F               	fcall	_SetLEDOff
  1319                           
  1320                           ;main.c: 291: SetLEDOn(0x01);
  1321  0051  3001               	movlw	1
  1322  0052  223B               	fcall	_SetLEDOn
  1323  0053  282F               	goto	L2
  1324  0054                     l1562:	
  1325                           ;main.c: 296: SetLEDOff(0x10);
  1326                           
  1327                           ;main.c: 295: SetLEDOff(0x20);
  1328                           
  1329                           ;main.c: 294: SetLEDOff(0x40);
  1330                           
  1331                           ;main.c: 293: SetLEDOff(0x80);
  1332                           
  1333                           ;main.c: 292: SetLEDOff(0x02);
  1334                           
  1335                           
  1336                           ;main.c: 303: if (RightTime == 0)
  1337  0054  0870               	movf	_RightTime,w	;volatile
  1338  0055  0471               	iorwf	_RightTime+1,w	;volatile
  1339  0056  1D03               	btfss	3,2
  1340  0057  2909               	goto	l1650
  1341                           
  1342                           ;main.c: 304: {
  1343                           ;main.c: 305: SetLEDOff(0x04);
  1344  0058  3004               	movlw	4
  1345  0059  222F               	fcall	_SetLEDOff
  1346                           
  1347                           ;main.c: 306: SetLEDOff(0x08);
  1348  005A  3008               	movlw	8
  1349  005B  222F               	fcall	_SetLEDOff
  1350                           
  1351                           ;main.c: 307: SetLEDOff(0x01);
  1352  005C  3001               	movlw	1
  1353  005D  222F               	fcall	_SetLEDOff
  1354                           
  1355                           ;main.c: 308: SetLEDOn(0x02);
  1356  005E  3002               	movlw	2
  1357  005F  223B               	fcall	_SetLEDOn
  1358  0060  2831               	goto	L3
  1359  0061                     l1570:	
  1360                           ;main.c: 312: SetLEDOff(0x10);
  1361                           
  1362                           ;main.c: 311: SetLEDOff(0x20);
  1363                           
  1364                           ;main.c: 310: SetLEDOff(0x40);
  1365                           
  1366                           ;main.c: 309: SetLEDOff(0x80);
  1367                           
  1368                           
  1369                           ;main.c: 319: if (RightTime == 0)
  1370  0061  0870               	movf	_RightTime,w	;volatile
  1371  0062  0471               	iorwf	_RightTime+1,w	;volatile
  1372  0063  1D03               	btfss	3,2
  1373  0064  2909               	goto	l1650
  1374                           
  1375                           ;main.c: 320: {
  1376                           ;main.c: 321: SetLEDOff(0x04);
  1377  0065  3004               	movlw	4
  1378  0066  222F               	fcall	_SetLEDOff
  1379                           
  1380                           ;main.c: 322: SetLEDOff(0x08);
  1381  0067  3008               	movlw	8
  1382  0068  222F               	fcall	_SetLEDOff
  1383                           
  1384                           ;main.c: 323: SetLEDOff(0x01);
  1385  0069  3001               	movlw	1
  1386  006A  222F               	fcall	_SetLEDOff
  1387                           
  1388                           ;main.c: 324: SetLEDOff(0x02);
  1389  006B  3002               	movlw	2
  1390  006C  222F               	fcall	_SetLEDOff
  1391                           
  1392                           ;main.c: 325: SetLEDOn(0x80);
  1393  006D  3080               	movlw	128
  1394  006E  223B               	fcall	_SetLEDOn
  1395  006F  2833               	goto	L4
  1396  0070                     l1578:	
  1397                           ;main.c: 328: SetLEDOff(0x10);
  1398                           
  1399                           ;main.c: 327: SetLEDOff(0x20);
  1400                           
  1401                           ;main.c: 326: SetLEDOff(0x40);
  1402                           
  1403                           
  1404                           ;main.c: 335: if (RightTime == 0)
  1405  0070  0870               	movf	_RightTime,w	;volatile
  1406  0071  0471               	iorwf	_RightTime+1,w	;volatile
  1407  0072  1D03               	btfss	3,2
  1408  0073  2909               	goto	l1650
  1409                           
  1410                           ;main.c: 336: {
  1411                           ;main.c: 337: SetLEDOff(0x04);
  1412  0074  3004               	movlw	4
  1413  0075  222F               	fcall	_SetLEDOff
  1414                           
  1415                           ;main.c: 338: SetLEDOff(0x08);
  1416  0076  3008               	movlw	8
  1417  0077  222F               	fcall	_SetLEDOff
  1418                           
  1419                           ;main.c: 339: SetLEDOff(0x01);
  1420  0078  3001               	movlw	1
  1421  0079  222F               	fcall	_SetLEDOff
  1422                           
  1423                           ;main.c: 340: SetLEDOff(0x02);
  1424  007A  3002               	movlw	2
  1425  007B  222F               	fcall	_SetLEDOff
  1426                           
  1427                           ;main.c: 341: SetLEDOff(0x80);
  1428  007C  3080               	movlw	128
  1429  007D  222F               	fcall	_SetLEDOff
  1430                           
  1431                           ;main.c: 342: SetLEDOn(0x40);
  1432  007E  3040               	movlw	64
  1433  007F  223B               	fcall	_SetLEDOn
  1434  0080  2835               	goto	L5
  1435  0081                     l1586:	
  1436                           ;main.c: 344: SetLEDOff(0x10);
  1437                           
  1438                           ;main.c: 343: SetLEDOff(0x20);
  1439                           
  1440                           
  1441                           ;main.c: 351: if (RightTime == 0)
  1442  0081  0870               	movf	_RightTime,w	;volatile
  1443  0082  0471               	iorwf	_RightTime+1,w	;volatile
  1444  0083  1D03               	btfss	3,2
  1445  0084  2909               	goto	l1650
  1446                           
  1447                           ;main.c: 352: {
  1448                           ;main.c: 353: SetLEDOff(0x04);
  1449  0085  3004               	movlw	4
  1450  0086  222F               	fcall	_SetLEDOff
  1451                           
  1452                           ;main.c: 354: SetLEDOff(0x08);
  1453  0087  3008               	movlw	8
  1454  0088  222F               	fcall	_SetLEDOff
  1455                           
  1456                           ;main.c: 355: SetLEDOff(0x01);
  1457  0089  3001               	movlw	1
  1458  008A  222F               	fcall	_SetLEDOff
  1459                           
  1460                           ;main.c: 356: SetLEDOff(0x02);
  1461  008B  3002               	movlw	2
  1462  008C  222F               	fcall	_SetLEDOff
  1463                           
  1464                           ;main.c: 357: SetLEDOff(0x80);
  1465  008D  3080               	movlw	128
  1466  008E  222F               	fcall	_SetLEDOff
  1467                           
  1468                           ;main.c: 358: SetLEDOff(0x40);
  1469  008F  3040               	movlw	64
  1470  0090  222F               	fcall	_SetLEDOff
  1471                           
  1472                           ;main.c: 359: SetLEDOn(0x20);
  1473  0091  3020               	movlw	32
  1474  0092  223B               	fcall	_SetLEDOn
  1475  0093  2837               	goto	L6
  1476  0094                     l1594:	
  1477                           ;main.c: 360: SetLEDOff(0x10);
  1478                           
  1479                           
  1480                           ;main.c: 367: if (RightTime == 0)
  1481  0094  0870               	movf	_RightTime,w	;volatile
  1482  0095  0471               	iorwf	_RightTime+1,w	;volatile
  1483  0096  1D03               	btfss	3,2
  1484  0097  2909               	goto	l1650
  1485                           
  1486                           ;main.c: 368: {
  1487                           ;main.c: 369: SetLEDOff(0x04);
  1488  0098  3004               	movlw	4
  1489  0099  222F               	fcall	_SetLEDOff
  1490                           
  1491                           ;main.c: 370: SetLEDOff(0x08);
  1492  009A  3008               	movlw	8
  1493  009B  222F               	fcall	_SetLEDOff
  1494                           
  1495                           ;main.c: 371: SetLEDOff(0x01);
  1496  009C  3001               	movlw	1
  1497  009D  222F               	fcall	_SetLEDOff
  1498                           
  1499                           ;main.c: 372: SetLEDOff(0x02);
  1500  009E  3002               	movlw	2
  1501  009F  222F               	fcall	_SetLEDOff
  1502                           
  1503                           ;main.c: 373: SetLEDOff(0x80);
  1504  00A0  3080               	movlw	128
  1505  00A1  222F               	fcall	_SetLEDOff
  1506                           
  1507                           ;main.c: 374: SetLEDOff(0x40);
  1508  00A2  3040               	movlw	64
  1509  00A3  222F               	fcall	_SetLEDOff
  1510                           
  1511                           ;main.c: 375: SetLEDOff(0x20);
  1512  00A4  3020               	movlw	32
  1513  00A5  222F               	fcall	_SetLEDOff
  1514                           
  1515                           ;main.c: 376: SetLEDOn(0x10);
  1516  00A6  3010               	movlw	16
  1517  00A7  223B               	fcall	_SetLEDOn
  1518  00A8  2839               	goto	l1542
  1519  00A9                     l1602:	
  1520                           
  1521                           ;main.c: 383: if (RightTime == 0)
  1522  00A9  0870               	movf	_RightTime,w	;volatile
  1523  00AA  0471               	iorwf	_RightTime+1,w	;volatile
  1524  00AB  1D03               	btfss	3,2
  1525  00AC  2909               	goto	l1650
  1526                           
  1527                           ;main.c: 384: {
  1528                           ;main.c: 385: SetLEDOff(0x04);
  1529  00AD  3004               	movlw	4
  1530  00AE  222F               	fcall	_SetLEDOff
  1531                           
  1532                           ;main.c: 386: SetLEDOff(0x08);
  1533  00AF  3008               	movlw	8
  1534  00B0  222F               	fcall	_SetLEDOff
  1535                           
  1536                           ;main.c: 387: SetLEDOff(0x01);
  1537  00B1  3001               	movlw	1
  1538  00B2  222F               	fcall	_SetLEDOff
  1539                           
  1540                           ;main.c: 388: SetLEDOff(0x02);
  1541  00B3  3002               	movlw	2
  1542  00B4  222F               	fcall	_SetLEDOff
  1543                           
  1544                           ;main.c: 389: SetLEDOff(0x80);
  1545  00B5  3080               	movlw	128
  1546  00B6  222F               	fcall	_SetLEDOff
  1547                           
  1548                           ;main.c: 390: SetLEDOff(0x40);
  1549  00B7  3040               	movlw	64
  1550  00B8  222F               	fcall	_SetLEDOff
  1551                           
  1552                           ;main.c: 391: SetLEDOff(0x20);
  1553  00B9  3020               	movlw	32
  1554  00BA  222F               	fcall	_SetLEDOff
  1555                           
  1556                           ;main.c: 392: SetLEDOff(0x10);
  1557  00BB  3010               	movlw	16
  1558  00BC  222F               	fcall	_SetLEDOff
  1559                           
  1560                           ;main.c: 393: RightState = 0;
  1561  00BD  0020               	movlb	0	; select bank0
  1562  00BE  01AA               	clrf	main@RightState
  1563  00BF  2909               	goto	l1650
  1564  00C0                     l1610:	
  1565  00C0  082A               	movf	main@RightState,w
  1566                           
  1567                           ; Switch size 1, requested type "space"
  1568                           ; Number of cases is 10, Range of values is 0 to 9
  1569                           ; switch strategies available:
  1570                           ; Name         Instructions Cycles
  1571                           ; direct_byte           26     6 (fixed)
  1572                           ; simple_byte           31    16 (average)
  1573                           ; jumptable            260     6 (fixed)
  1574                           ;	Chosen strategy is direct_byte
  1575  00C1  0084               	movwf	4
  1576  00C2  300A               	movlw	10
  1577  00C3  0204               	subwf	4,w
  1578  00C4  1803               	skipnc
  1579  00C5  2909               	goto	l1650
  1580  00C6  3181               	movlp	high S1780
  1581  00C7  30F2               	movlw	low S1780
  1582  00C8  0704               	addwf	4,w
  1583  00C9  0082               	movwf	2
  1584  00CA                     l1612:	
  1585                           
  1586                           ;main.c: 408: SetLEDOn(0x40);
  1587  00CA  3040               	movlw	64
  1588  00CB  223B               	fcall	_SetLEDOn
  1589                           
  1590                           ;main.c: 409: SetLEDOff(0x80);
  1591  00CC  3080               	movlw	128
  1592  00CD  222F               	fcall	_SetLEDOff
  1593  00CE                     L7:	
  1594                           
  1595                           ;main.c: 410: SetLEDOff(0x10);
  1596  00CE  3010               	movlw	16
  1597  00CF  222F               	fcall	_SetLEDOff
  1598  00D0                     L8:	
  1599                           
  1600                           ;main.c: 411: SetLEDOff(0x20);
  1601  00D0  3020               	movlw	32
  1602  00D1  222F               	fcall	_SetLEDOff
  1603  00D2                     l1614:	
  1604                           
  1605                           ;main.c: 412: LeftTime = 10000;
  1606  00D2  3010               	movlw	16
  1607  00D3  00F2               	movwf	_LeftTime	;volatile
  1608  00D4  3027               	movlw	39
  1609  00D5  00F3               	movwf	_LeftTime+1	;volatile
  1610                           
  1611                           ;main.c: 413: LeftState++;
  1612  00D6  0020               	movlb	0	; select bank0
  1613  00D7  0AA9               	incf	main@LeftState,f
  1614                           
  1615                           ;main.c: 414: break;
  1616  00D8  2913               	goto	l230
  1617  00D9                     l1618:	
  1618                           
  1619                           ;main.c: 417: if (LeftTime == 0)
  1620  00D9  0872               	movf	_LeftTime,w	;volatile
  1621  00DA  0473               	iorwf	_LeftTime+1,w	;volatile
  1622  00DB  1D03               	btfss	3,2
  1623  00DC  2913               	goto	l230
  1624                           
  1625                           ;main.c: 418: {
  1626                           ;main.c: 419: SetLEDOff(0x40);
  1627  00DD  3040               	movlw	64
  1628  00DE  222F               	fcall	_SetLEDOff
  1629                           
  1630                           ;main.c: 420: SetLEDOn(0x80);
  1631  00DF  3080               	movlw	128
  1632  00E0  223B               	fcall	_SetLEDOn
  1633  00E1  28CE               	goto	L7
  1634  00E2                     l1626:	
  1635                           ;main.c: 422: SetLEDOff(0x20);
  1636                           
  1637                           ;main.c: 421: SetLEDOff(0x10);
  1638                           
  1639                           
  1640                           ;main.c: 429: if (LeftTime == 0)
  1641  00E2  0872               	movf	_LeftTime,w	;volatile
  1642  00E3  0473               	iorwf	_LeftTime+1,w	;volatile
  1643  00E4  1D03               	btfss	3,2
  1644  00E5  2913               	goto	l230
  1645                           
  1646                           ;main.c: 430: {
  1647                           ;main.c: 431: SetLEDOff(0x40);
  1648  00E6  3040               	movlw	64
  1649  00E7  222F               	fcall	_SetLEDOff
  1650                           
  1651                           ;main.c: 432: SetLEDOff(0x80);
  1652  00E8  3080               	movlw	128
  1653  00E9  222F               	fcall	_SetLEDOff
  1654                           
  1655                           ;main.c: 433: SetLEDOn(0x10);
  1656  00EA  3010               	movlw	16
  1657  00EB  223B               	fcall	_SetLEDOn
  1658  00EC  28D0               	goto	L8
  1659  00ED                     l1634:	
  1660                           ;main.c: 434: SetLEDOff(0x20);
  1661                           
  1662                           
  1663                           ;main.c: 441: if (LeftTime == 0)
  1664  00ED  0872               	movf	_LeftTime,w	;volatile
  1665  00EE  0473               	iorwf	_LeftTime+1,w	;volatile
  1666  00EF  1D03               	btfss	3,2
  1667  00F0  2913               	goto	l230
  1668                           
  1669                           ;main.c: 442: {
  1670                           ;main.c: 443: SetLEDOff(0x40);
  1671  00F1  3040               	movlw	64
  1672  00F2  222F               	fcall	_SetLEDOff
  1673                           
  1674                           ;main.c: 444: SetLEDOff(0x80);
  1675  00F3  3080               	movlw	128
  1676  00F4  222F               	fcall	_SetLEDOff
  1677                           
  1678                           ;main.c: 445: SetLEDOff(0x10);
  1679  00F5  3010               	movlw	16
  1680  00F6  222F               	fcall	_SetLEDOff
  1681                           
  1682                           ;main.c: 446: SetLEDOn(0x20);
  1683  00F7  3020               	movlw	32
  1684  00F8  223B               	fcall	_SetLEDOn
  1685  00F9  28D2               	goto	l1614
  1686  00FA                     l1642:	
  1687                           
  1688                           ;main.c: 453: if (LeftTime == 0)
  1689  00FA  0872               	movf	_LeftTime,w	;volatile
  1690  00FB  0473               	iorwf	_LeftTime+1,w	;volatile
  1691  00FC  1D03               	btfss	3,2
  1692  00FD  2913               	goto	l230
  1693                           
  1694                           ;main.c: 454: {
  1695                           ;main.c: 455: SetLEDOff(0x40);
  1696  00FE  3040               	movlw	64
  1697  00FF  222F               	fcall	_SetLEDOff
  1698                           
  1699                           ;main.c: 456: SetLEDOff(0x80);
  1700  0100  3080               	movlw	128
  1701  0101  222F               	fcall	_SetLEDOff
  1702                           
  1703                           ;main.c: 457: SetLEDOff(0x10);
  1704  0102  3010               	movlw	16
  1705  0103  222F               	fcall	_SetLEDOff
  1706                           
  1707                           ;main.c: 458: SetLEDOff(0x20);
  1708  0104  3020               	movlw	32
  1709  0105  222F               	fcall	_SetLEDOff
  1710                           
  1711                           ;main.c: 459: LeftState = 0;
  1712  0106  0020               	movlb	0	; select bank0
  1713  0107  01A9               	clrf	main@LeftState
  1714  0108  2913               	goto	l230
  1715  0109                     l1650:	
  1716  0109  0829               	movf	main@LeftState,w
  1717                           
  1718                           ; Switch size 1, requested type "space"
  1719                           ; Number of cases is 6, Range of values is 0 to 5
  1720                           ; switch strategies available:
  1721                           ; Name         Instructions Cycles
  1722                           ; direct_byte           18     6 (fixed)
  1723                           ; simple_byte           19    10 (average)
  1724                           ; jumptable            260     6 (fixed)
  1725                           ;	Chosen strategy is direct_byte
  1726  010A  0084               	movwf	4
  1727  010B  3006               	movlw	6
  1728  010C  0204               	subwf	4,w
  1729  010D  1803               	skipnc
  1730  010E  2913               	goto	l230
  1731  010F  3182               	movlp	high S1782
  1732  0110  3014               	movlw	low S1782
  1733  0111  0704               	addwf	4,w
  1734  0112  0082               	movwf	2
  1735  0113                     l230:	
  1736                           
  1737                           ;main.c: 468: if (PORTAbits.RA2 == 0)
  1738  0113  190C               	btfsc	12,2	;volatile
  1739  0114  291D               	goto	l1656
  1740                           
  1741                           ;main.c: 469: {
  1742                           ;main.c: 470: if (LastLeftButtonState == 0)
  1743  0115  0827               	movf	main@LastLeftButtonState,w
  1744  0116  1D03               	btfss	3,2
  1745  0117  291A               	goto	l242
  1746                           
  1747                           ;main.c: 471: {
  1748                           ;main.c: 472: LeftState = 1;
  1749  0118  01A9               	clrf	main@LeftState
  1750  0119  0AA9               	incf	main@LeftState,f
  1751  011A                     l242:	
  1752                           
  1753                           ;main.c: 473: }
  1754                           ;main.c: 474: LastLeftButtonState = 1;
  1755  011A  01A7               	clrf	main@LastLeftButtonState
  1756  011B  0AA7               	incf	main@LastLeftButtonState,f
  1757                           
  1758                           ;main.c: 475: }
  1759  011C  291E               	goto	l1658
  1760  011D                     l1656:	
  1761                           
  1762                           ;main.c: 476: else
  1763                           ;main.c: 477: {
  1764                           ;main.c: 478: LastLeftButtonState = 0;
  1765  011D  01A7               	clrf	main@LastLeftButtonState
  1766  011E                     l1658:	
  1767                           
  1768                           ;main.c: 479: }
  1769                           ;main.c: 482: if (PORTAbits.RA3 == 0)
  1770  011E  198C               	btfsc	12,3	;volatile
  1771  011F  2827               	goto	l1538
  1772                           
  1773                           ;main.c: 483: {
  1774                           ;main.c: 484: if (LastRightButtonState == 0)
  1775  0120  0828               	movf	main@LastRightButtonState,w
  1776  0121  1D03               	btfss	3,2
  1777  0122  2925               	goto	l245
  1778                           
  1779                           ;main.c: 485: {
  1780                           ;main.c: 486: RightState = 1;
  1781  0123  01AA               	clrf	main@RightState
  1782  0124  0AAA               	incf	main@RightState,f
  1783  0125                     l245:	
  1784                           
  1785                           ;main.c: 487: }
  1786                           ;main.c: 488: LastRightButtonState = 1;
  1787  0125  01A8               	clrf	main@LastRightButtonState
  1788  0126  0AA8               	incf	main@LastRightButtonState,f
  1789  0127                     l1666:	
  1790                           ;main.c: 489: }
  1791                           
  1792  0127  0829               	movf	main@LeftState,w
  1793  0128  1D03               	btfss	3,2
  1794  0129  28C0               	goto	l1610
  1795  012A  082A               	movf	main@RightState,w
  1796  012B  1D03               	btfss	3,2
  1797  012C  28C0               	goto	l1610
  1798                           
  1799                           ;main.c: 493: }
  1800                           ;main.c: 494: }
  1801                           ;main.c: 497: VREGCONbits.VREGPM = 1;
  1802  012D  0023               	movlb	3	; select bank3
  1803  012E  1497               	bsf	23,1	;volatile
  1804                           
  1805                           ;main.c: 499: SetAllLEDsOff();
  1806  012F  223E               	fcall	_SetAllLEDsOff
  1807                           
  1808                           ;main.c: 501: _delay((unsigned long)((50)*(16000000/4000.0)));
  1809  0130  3002               	movlw	2
  1810  0131  00F9               	movwf	??_main+1
  1811  0132  3004               	movlw	4
  1812  0133  00F8               	movwf	??_main
  1813  0134  30BA               	movlw	186
  1814  0135                     u1037:	
  1815  0135  0B89               	decfsz	9,f
  1816  0136  2935               	goto	u1037
  1817  0137  0BF8               	decfsz	??_main,f
  1818  0138  2935               	goto	u1037
  1819  0139  0BF9               	decfsz	??_main+1,f
  1820  013A  2935               	goto	u1037
  1821  013B  3200               	nop2
  1822  013C  0063               	sleep	;# 
  1823                           
  1824                           ;main.c: 505: LeftTime = 0;
  1825  013D  01F2               	clrf	_LeftTime	;volatile
  1826  013E  01F3               	clrf	_LeftTime+1	;volatile
  1827                           
  1828                           ;main.c: 506: RightTime = 0;
  1829  013F  01F0               	clrf	_RightTime	;volatile
  1830  0140  01F1               	clrf	_RightTime+1	;volatile
  1831                           
  1832                           ;main.c: 508: if (PORTAbits.RA2 == 0)
  1833  0141  0020               	movlb	0	; select bank0
  1834  0142  190C               	btfsc	12,2	;volatile
  1835  0143  2946               	goto	l248
  1836                           
  1837                           ;main.c: 509: {
  1838                           ;main.c: 510: LeftState = 1;
  1839  0144  01A9               	clrf	main@LeftState
  1840  0145  0AA9               	incf	main@LeftState,f
  1841  0146                     l248:	
  1842                           
  1843                           ;main.c: 511: }
  1844                           ;main.c: 512: if (PORTAbits.RA3 == 0)
  1845  0146  198C               	btfsc	12,3	;volatile
  1846  0147  2927               	goto	l1666
  1847                           
  1848                           ;main.c: 513: {
  1849                           ;main.c: 514: RightState = 1;
  1850  0148  01AA               	clrf	main@RightState
  1851  0149  0AAA               	incf	main@RightState,f
  1852  014A  2927               	goto	l1666
  1853  014B                     __end_of_main:	
  1854                           
  1855                           	psect	swtext1
  1856  01F2                     __pswtext1:	
  1857  01F2                     S1780:	
  1858  01F2  2909               	ljmp	l1650
  1859  01F3  2829               	ljmp	l1540
  1860  01F4  2840               	ljmp	l1546
  1861  01F5  2849               	ljmp	l1554
  1862  01F6  2854               	ljmp	l1562
  1863  01F7  2861               	ljmp	l1570
  1864  01F8  2870               	ljmp	l1578
  1865  01F9  2881               	ljmp	l1586
  1866  01FA  2894               	ljmp	l1594
  1867  01FB  28A9               	ljmp	l1602
  1868                           
  1869                           	psect	swtext2
  1870  0214                     __pswtext2:	
  1871  0214                     S1782:	
  1872  0214  2913               	ljmp	l230
  1873  0215  28CA               	ljmp	l1612
  1874  0216  28D9               	ljmp	l1618
  1875  0217  28E2               	ljmp	l1626
  1876  0218  28ED               	ljmp	l1634
  1877  0219  28FA               	ljmp	l1642
  1878                           
  1879                           	psect	text1
  1880  0220                     __ptext1:	
  1881 ;; *************** function _TMR0_SetInterruptHandler *****************
  1882 ;; Defined at:
  1883 ;;		line 129 in file "mcc_generated_files/tmr0.c"
  1884 ;; Parameters:    Size  Location     Type
  1885 ;;  InterruptHan    2    1[COMMON] PTR FTN()void 
  1886 ;;		 -> CharlieplexLEDs(1), 
  1887 ;; Auto vars:     Size  Location     Type
  1888 ;;		None
  1889 ;; Return value:  Size  Location     Type
  1890 ;;                  1    wreg      void 
  1891 ;; Registers used:
  1892 ;;		wreg
  1893 ;; Tracked objects:
  1894 ;;		On entry : B1F/0
  1895 ;;		On exit  : B1F/0
  1896 ;;		Unchanged: B00/0
  1897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1898 ;;      Params:         2       0       0       0
  1899 ;;      Locals:         0       0       0       0
  1900 ;;      Temps:          0       0       0       0
  1901 ;;      Totals:         2       0       0       0
  1902 ;;Total ram usage:        2 bytes
  1903 ;; Hardware stack levels used:    1
  1904 ;; Hardware stack levels required when called:    4
  1905 ;; This function calls:
  1906 ;;		Nothing
  1907 ;; This function is called by:
  1908 ;;		_main
  1909 ;; This function uses a non-reentrant model
  1910 ;;
  1911                           
  1912                           
  1913                           ;psect for function _TMR0_SetInterruptHandler
  1914  0220                     _TMR0_SetInterruptHandler:	
  1915                           
  1916                           ;tmr0.c: 130: TMR0_InterruptHandler = InterruptHandler;
  1917                           
  1918                           ;incstack = 0
  1919                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  1920  0220  0877               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  1921  0221  00A1               	movwf	_TMR0_InterruptHandler+1
  1922  0222  0876               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  1923  0223  00A0               	movwf	_TMR0_InterruptHandler
  1924  0224  0008               	return
  1925  0225                     __end_of_TMR0_SetInterruptHandler:	
  1926                           
  1927                           	psect	text2
  1928  023B                     __ptext2:	
  1929 ;; *************** function _SetLEDOn *****************
  1930 ;; Defined at:
  1931 ;;		line 114 in file "main.c"
  1932 ;; Parameters:    Size  Location     Type
  1933 ;;  LED             1    wreg     unsigned char 
  1934 ;; Auto vars:     Size  Location     Type
  1935 ;;  LED             1    1[COMMON] unsigned char 
  1936 ;; Return value:  Size  Location     Type
  1937 ;;                  1    wreg      void 
  1938 ;; Registers used:
  1939 ;;		wreg, status,2, status,0
  1940 ;; Tracked objects:
  1941 ;;		On entry : 0/0
  1942 ;;		On exit  : 0/0
  1943 ;;		Unchanged: 0/0
  1944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1945 ;;      Params:         0       0       0       0
  1946 ;;      Locals:         1       0       0       0
  1947 ;;      Temps:          0       0       0       0
  1948 ;;      Totals:         1       0       0       0
  1949 ;;Total ram usage:        1 bytes
  1950 ;; Hardware stack levels used:    1
  1951 ;; Hardware stack levels required when called:    4
  1952 ;; This function calls:
  1953 ;;		Nothing
  1954 ;; This function is called by:
  1955 ;;		_main
  1956 ;; This function uses a non-reentrant model
  1957 ;;
  1958                           
  1959                           
  1960                           ;psect for function _SetLEDOn
  1961  023B                     _SetLEDOn:	
  1962                           
  1963                           ;incstack = 0
  1964                           ; Regs used in _SetLEDOn: [wreg+status,2+status,0]
  1965                           ;SetLEDOn@LED stored from wreg
  1966  023B  00F6               	movwf	SetLEDOn@LED
  1967                           
  1968                           ;main.c: 116: LEDOns = (uint8_t)(LEDOns | LED);
  1969  023C  04F4               	iorwf	_LEDOns,f	;volatile
  1970  023D  0008               	return
  1971  023E                     __end_of_SetLEDOn:	
  1972                           
  1973                           	psect	text3
  1974  022F                     __ptext3:	
  1975 ;; *************** function _SetLEDOff *****************
  1976 ;; Defined at:
  1977 ;;		line 119 in file "main.c"
  1978 ;; Parameters:    Size  Location     Type
  1979 ;;  LED             1    wreg     unsigned char 
  1980 ;; Auto vars:     Size  Location     Type
  1981 ;;  LED             1    1[COMMON] unsigned char 
  1982 ;; Return value:  Size  Location     Type
  1983 ;;                  1    wreg      void 
  1984 ;; Registers used:
  1985 ;;		wreg, status,2, status,0
  1986 ;; Tracked objects:
  1987 ;;		On entry : 0/0
  1988 ;;		On exit  : 0/0
  1989 ;;		Unchanged: 0/0
  1990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1991 ;;      Params:         0       0       0       0
  1992 ;;      Locals:         1       0       0       0
  1993 ;;      Temps:          0       0       0       0
  1994 ;;      Totals:         1       0       0       0
  1995 ;;Total ram usage:        1 bytes
  1996 ;; Hardware stack levels used:    1
  1997 ;; Hardware stack levels required when called:    4
  1998 ;; This function calls:
  1999 ;;		Nothing
  2000 ;; This function is called by:
  2001 ;;		_main
  2002 ;; This function uses a non-reentrant model
  2003 ;;
  2004                           
  2005                           
  2006                           ;psect for function _SetLEDOff
  2007  022F                     _SetLEDOff:	
  2008                           
  2009                           ;incstack = 0
  2010                           ; Regs used in _SetLEDOff: [wreg+status,2+status,0]
  2011                           ;SetLEDOff@LED stored from wreg
  2012  022F  00F6               	movwf	SetLEDOff@LED
  2013                           
  2014                           ;main.c: 121: LEDOns = (uint8_t)(LEDOns & ~LED);
  2015  0230  0976               	comf	SetLEDOff@LED,w
  2016  0231  05F4               	andwf	_LEDOns,f	;volatile
  2017  0232  0008               	return
  2018  0233                     __end_of_SetLEDOff:	
  2019                           
  2020                           	psect	text4
  2021  023E                     __ptext4:	
  2022 ;; *************** function _SetAllLEDsOff *****************
  2023 ;; Defined at:
  2024 ;;		line 124 in file "main.c"
  2025 ;; Parameters:    Size  Location     Type
  2026 ;;		None
  2027 ;; Auto vars:     Size  Location     Type
  2028 ;;		None
  2029 ;; Return value:  Size  Location     Type
  2030 ;;                  1    wreg      void 
  2031 ;; Registers used:
  2032 ;;		status,2
  2033 ;; Tracked objects:
  2034 ;;		On entry : 1F/3
  2035 ;;		On exit  : 1F/3
  2036 ;;		Unchanged: 1E/0
  2037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2038 ;;      Params:         0       0       0       0
  2039 ;;      Locals:         0       0       0       0
  2040 ;;      Temps:          0       0       0       0
  2041 ;;      Totals:         0       0       0       0
  2042 ;;Total ram usage:        0 bytes
  2043 ;; Hardware stack levels used:    1
  2044 ;; Hardware stack levels required when called:    4
  2045 ;; This function calls:
  2046 ;;		Nothing
  2047 ;; This function is called by:
  2048 ;;		_main
  2049 ;; This function uses a non-reentrant model
  2050 ;;
  2051                           
  2052                           
  2053                           ;psect for function _SetAllLEDsOff
  2054  023E                     _SetAllLEDsOff:	
  2055                           
  2056                           ;main.c: 126: LEDOns = 0;
  2057                           
  2058                           ;incstack = 0
  2059                           ; Regs used in _SetAllLEDsOff: [status,2]
  2060  023E  01F4               	clrf	_LEDOns	;volatile
  2061  023F  0008               	return
  2062  0240                     __end_of_SetAllLEDsOff:	
  2063                           
  2064                           	psect	text5
  2065  0233                     __ptext5:	
  2066 ;; *************** function _SYSTEM_Initialize *****************
  2067 ;; Defined at:
  2068 ;;		line 68 in file "mcc_generated_files/mcc.c"
  2069 ;; Parameters:    Size  Location     Type
  2070 ;;		None
  2071 ;; Auto vars:     Size  Location     Type
  2072 ;;		None
  2073 ;; Return value:  Size  Location     Type
  2074 ;;                  1    wreg      void 
  2075 ;; Registers used:
  2076 ;;		wreg, status,2, status,0, pclath, cstack
  2077 ;; Tracked objects:
  2078 ;;		On entry : B1F/0
  2079 ;;		On exit  : B1F/0
  2080 ;;		Unchanged: B00/0
  2081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2082 ;;      Params:         0       0       0       0
  2083 ;;      Locals:         0       0       0       0
  2084 ;;      Temps:          0       0       0       0
  2085 ;;      Totals:         0       0       0       0
  2086 ;;Total ram usage:        0 bytes
  2087 ;; Hardware stack levels used:    1
  2088 ;; Hardware stack levels required when called:    6
  2089 ;; This function calls:
  2090 ;;		_OSCILLATOR_Initialize
  2091 ;;		_PIN_MANAGER_Initialize
  2092 ;;		_TMR0_Initialize
  2093 ;;		_WDT_Initialize
  2094 ;; This function is called by:
  2095 ;;		_main
  2096 ;; This function uses a non-reentrant model
  2097 ;;
  2098                           
  2099                           
  2100                           ;psect for function _SYSTEM_Initialize
  2101  0233                     _SYSTEM_Initialize:	
  2102                           
  2103                           ;mcc.c: 71: PIN_MANAGER_Initialize();
  2104                           
  2105                           ;incstack = 0
  2106                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2107  0233  21A9               	fcall	_PIN_MANAGER_Initialize
  2108                           
  2109                           ;mcc.c: 72: OSCILLATOR_Initialize();
  2110  0234  2206               	fcall	_OSCILLATOR_Initialize
  2111                           
  2112                           ;mcc.c: 73: WDT_Initialize();
  2113  0235  2237               	fcall	_WDT_Initialize
  2114                           
  2115                           ;mcc.c: 74: TMR0_Initialize();
  2116  0236  29E7               	ljmp	l1506
  2117  0237                     __end_of_SYSTEM_Initialize:	
  2118                           
  2119                           	psect	text6
  2120  0237                     __ptext6:	
  2121 ;; *************** function _WDT_Initialize *****************
  2122 ;; Defined at:
  2123 ;;		line 87 in file "mcc_generated_files/mcc.c"
  2124 ;; Parameters:    Size  Location     Type
  2125 ;;		None
  2126 ;; Auto vars:     Size  Location     Type
  2127 ;;		None
  2128 ;; Return value:  Size  Location     Type
  2129 ;;                  1    wreg      void 
  2130 ;; Registers used:
  2131 ;;		wreg
  2132 ;; Tracked objects:
  2133 ;;		On entry : B1F/2
  2134 ;;		On exit  : B1F/1
  2135 ;;		Unchanged: B00/0
  2136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2137 ;;      Params:         0       0       0       0
  2138 ;;      Locals:         0       0       0       0
  2139 ;;      Temps:          0       0       0       0
  2140 ;;      Totals:         0       0       0       0
  2141 ;;Total ram usage:        0 bytes
  2142 ;; Hardware stack levels used:    1
  2143 ;; Hardware stack levels required when called:    4
  2144 ;; This function calls:
  2145 ;;		Nothing
  2146 ;; This function is called by:
  2147 ;;		_SYSTEM_Initialize
  2148 ;; This function uses a non-reentrant model
  2149 ;;
  2150                           
  2151                           
  2152                           ;psect for function _WDT_Initialize
  2153  0237                     _WDT_Initialize:	
  2154                           
  2155                           ;mcc.c: 90: WDTCON = 0x16;
  2156                           
  2157                           ;incstack = 0
  2158                           ; Regs used in _WDT_Initialize: [wreg]
  2159  0237  3016               	movlw	22
  2160  0238  0021               	movlb	1	; select bank1
  2161  0239  0097               	movwf	23	;volatile
  2162  023A  0008               	return
  2163  023B                     __end_of_WDT_Initialize:	
  2164                           
  2165                           	psect	text7
  2166  01E7                     __ptext7:	
  2167 ;; *************** function _TMR0_Initialize *****************
  2168 ;; Defined at:
  2169 ;;		line 63 in file "mcc_generated_files/tmr0.c"
  2170 ;; Parameters:    Size  Location     Type
  2171 ;;		None
  2172 ;; Auto vars:     Size  Location     Type
  2173 ;;		None
  2174 ;; Return value:  Size  Location     Type
  2175 ;;                  1    wreg      void 
  2176 ;; Registers used:
  2177 ;;		wreg, status,2
  2178 ;; Tracked objects:
  2179 ;;		On entry : B1F/1
  2180 ;;		On exit  : B1F/0
  2181 ;;		Unchanged: B00/0
  2182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2183 ;;      Params:         0       0       0       0
  2184 ;;      Locals:         0       0       0       0
  2185 ;;      Temps:          0       0       0       0
  2186 ;;      Totals:         0       0       0       0
  2187 ;;Total ram usage:        0 bytes
  2188 ;; Hardware stack levels used:    1
  2189 ;; Hardware stack levels required when called:    4
  2190 ;; This function calls:
  2191 ;;		Nothing
  2192 ;; This function is called by:
  2193 ;;		_SYSTEM_Initialize
  2194 ;; This function uses a non-reentrant model
  2195 ;;
  2196                           
  2197                           
  2198                           ;psect for function _TMR0_Initialize
  2199  01E7                     _TMR0_Initialize:	
  2200  01E7                     l1506:	
  2201                           ;incstack = 0
  2202                           ; Regs used in _TMR0_Initialize: [wreg+status,2]
  2203                           
  2204                           
  2205                           ;tmr0.c: 68: OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | 0xD1 & 0x3F);
  2206  01E7  0815               	movf	21,w	;volatile
  2207  01E8  39C0               	andlw	192
  2208  01E9  3811               	iorlw	17
  2209  01EA  0095               	movwf	21	;volatile
  2210                           
  2211                           ;tmr0.c: 71: TMR0 = 0x06;
  2212  01EB  3006               	movlw	6
  2213  01EC  0020               	movlb	0	; select bank0
  2214  01ED  0095               	movwf	21	;volatile
  2215                           
  2216                           ;tmr0.c: 74: timer0ReloadVal= 0x06;
  2217  01EE  00A6               	movwf	_timer0ReloadVal	;volatile
  2218                           
  2219                           ;tmr0.c: 77: INTCONbits.TMR0IF = 0;
  2220  01EF  110B               	bcf	11,2	;volatile
  2221                           
  2222                           ;tmr0.c: 80: INTCONbits.TMR0IE = 1;
  2223  01F0  168B               	bsf	11,5	;volatile
  2224  01F1  0008               	return
  2225  01F2                     __end_of_TMR0_Initialize:	
  2226                           
  2227                           	psect	text8
  2228  01A9                     __ptext8:	
  2229 ;; *************** function _PIN_MANAGER_Initialize *****************
  2230 ;; Defined at:
  2231 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2232 ;; Parameters:    Size  Location     Type
  2233 ;;		None
  2234 ;; Auto vars:     Size  Location     Type
  2235 ;;		None
  2236 ;; Return value:  Size  Location     Type
  2237 ;;                  1    wreg      void 
  2238 ;; Registers used:
  2239 ;;		wreg, status,2, status,0, pclath, cstack
  2240 ;; Tracked objects:
  2241 ;;		On entry : B1F/0
  2242 ;;		On exit  : B1F/0
  2243 ;;		Unchanged: B00/0
  2244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2245 ;;      Params:         0       0       0       0
  2246 ;;      Locals:         0       0       0       0
  2247 ;;      Temps:          0       0       0       0
  2248 ;;      Totals:         0       0       0       0
  2249 ;;Total ram usage:        0 bytes
  2250 ;; Hardware stack levels used:    1
  2251 ;; Hardware stack levels required when called:    5
  2252 ;; This function calls:
  2253 ;;		_IOCAF2_SetInterruptHandler
  2254 ;;		_IOCAF3_SetInterruptHandler
  2255 ;; This function is called by:
  2256 ;;		_SYSTEM_Initialize
  2257 ;; This function uses a non-reentrant model
  2258 ;;
  2259                           
  2260                           
  2261                           ;psect for function _PIN_MANAGER_Initialize
  2262  01A9                     _PIN_MANAGER_Initialize:	
  2263                           
  2264                           ;pin_manager.c: 60: LATA = 0x00;
  2265                           
  2266                           ;incstack = 0
  2267                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2268  01A9  0022               	movlb	2	; select bank2
  2269  01AA  018C               	clrf	12	;volatile
  2270                           
  2271                           ;pin_manager.c: 65: TRISA = 0x3F;
  2272  01AB  303F               	movlw	63
  2273  01AC  0021               	movlb	1	; select bank1
  2274  01AD  008C               	movwf	12	;volatile
  2275                           
  2276                           ;pin_manager.c: 70: ANSELA = 0x13;
  2277  01AE  3013               	movlw	19
  2278  01AF  0023               	movlb	3	; select bank3
  2279  01B0  008C               	movwf	12	;volatile
  2280                           
  2281                           ;pin_manager.c: 75: WPUA = 0x0C;
  2282  01B1  300C               	movlw	12
  2283  01B2  0024               	movlb	4	; select bank4
  2284  01B3  008C               	movwf	12	;volatile
  2285                           
  2286                           ;pin_manager.c: 76: OPTION_REGbits.nWPUEN = 0;
  2287  01B4  0021               	movlb	1	; select bank1
  2288  01B5  1395               	bcf	21,7	;volatile
  2289                           
  2290                           ;pin_manager.c: 81: ODCONA = 0x00;
  2291  01B6  0025               	movlb	5	; select bank5
  2292  01B7  018C               	clrf	12	;volatile
  2293                           
  2294                           ;pin_manager.c: 86: APFCON = 0x00;
  2295  01B8  0022               	movlb	2	; select bank2
  2296  01B9  019D               	clrf	29	;volatile
  2297                           
  2298                           ;pin_manager.c: 92: IOCAFbits.IOCAF2 = 0;
  2299  01BA  0027               	movlb	7	; select bank7
  2300  01BB  1113               	bcf	19,2	;volatile
  2301                           
  2302                           ;pin_manager.c: 93: IOCAFbits.IOCAF3 = 0;
  2303  01BC  1193               	bcf	19,3	;volatile
  2304                           
  2305                           ;pin_manager.c: 95: IOCANbits.IOCAN2 = 1;
  2306  01BD  1512               	bsf	18,2	;volatile
  2307                           
  2308                           ;pin_manager.c: 96: IOCANbits.IOCAN3 = 1;
  2309  01BE  1592               	bsf	18,3	;volatile
  2310                           
  2311                           ;pin_manager.c: 98: IOCAPbits.IOCAP2 = 1;
  2312  01BF  1511               	bsf	17,2	;volatile
  2313                           
  2314                           ;pin_manager.c: 99: IOCAPbits.IOCAP3 = 1;
  2315  01C0  1591               	bsf	17,3	;volatile
  2316                           
  2317                           ;pin_manager.c: 102: IOCAF2_SetInterruptHandler(IOCAF2_DefaultInterruptHandler);
  2318  01C1  3041               	movlw	low _IOCAF2_DefaultInterruptHandler
  2319  01C2  00F6               	movwf	IOCAF2_SetInterruptHandler@InterruptHandler
  2320  01C3  3002               	movlw	high _IOCAF2_DefaultInterruptHandler
  2321  01C4  00F7               	movwf	IOCAF2_SetInterruptHandler@InterruptHandler+1
  2322  01C5  221A               	fcall	_IOCAF2_SetInterruptHandler
  2323                           
  2324                           ;pin_manager.c: 103: IOCAF3_SetInterruptHandler(IOCAF3_DefaultInterruptHandler);
  2325  01C6  3040               	movlw	low _IOCAF3_DefaultInterruptHandler
  2326  01C7  00F6               	movwf	IOCAF3_SetInterruptHandler@InterruptHandler
  2327  01C8  3002               	movlw	high _IOCAF3_DefaultInterruptHandler
  2328  01C9  00F7               	movwf	IOCAF3_SetInterruptHandler@InterruptHandler+1
  2329  01CA  2225               	fcall	_IOCAF3_SetInterruptHandler
  2330                           
  2331                           ;pin_manager.c: 106: INTCONbits.IOCIE = 1;
  2332  01CB  158B               	bsf	11,3	;volatile
  2333  01CC  0008               	return
  2334  01CD                     __end_of_PIN_MANAGER_Initialize:	
  2335                           
  2336                           	psect	text9
  2337  0225                     __ptext9:	
  2338 ;; *************** function _IOCAF3_SetInterruptHandler *****************
  2339 ;; Defined at:
  2340 ;;		line 175 in file "mcc_generated_files/pin_manager.c"
  2341 ;; Parameters:    Size  Location     Type
  2342 ;;  InterruptHan    2    1[COMMON] PTR FTN()void 
  2343 ;;		 -> IOCAF3_DefaultInterruptHandler(1), 
  2344 ;; Auto vars:     Size  Location     Type
  2345 ;;		None
  2346 ;; Return value:  Size  Location     Type
  2347 ;;                  1    wreg      void 
  2348 ;; Registers used:
  2349 ;;		wreg
  2350 ;; Tracked objects:
  2351 ;;		On entry : B1F/0
  2352 ;;		On exit  : B1F/0
  2353 ;;		Unchanged: B00/0
  2354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2355 ;;      Params:         2       0       0       0
  2356 ;;      Locals:         0       0       0       0
  2357 ;;      Temps:          0       0       0       0
  2358 ;;      Totals:         2       0       0       0
  2359 ;;Total ram usage:        2 bytes
  2360 ;; Hardware stack levels used:    1
  2361 ;; Hardware stack levels required when called:    4
  2362 ;; This function calls:
  2363 ;;		Nothing
  2364 ;; This function is called by:
  2365 ;;		_PIN_MANAGER_Initialize
  2366 ;; This function uses a non-reentrant model
  2367 ;;
  2368                           
  2369                           
  2370                           ;psect for function _IOCAF3_SetInterruptHandler
  2371  0225                     _IOCAF3_SetInterruptHandler:	
  2372                           
  2373                           ;pin_manager.c: 176: IOCAF3_InterruptHandler = InterruptHandler;
  2374                           
  2375                           ;incstack = 0
  2376                           ; Regs used in _IOCAF3_SetInterruptHandler: [wreg]
  2377  0225  0877               	movf	IOCAF3_SetInterruptHandler@InterruptHandler+1,w
  2378  0226  00A3               	movwf	_IOCAF3_InterruptHandler+1
  2379  0227  0876               	movf	IOCAF3_SetInterruptHandler@InterruptHandler,w
  2380  0228  00A2               	movwf	_IOCAF3_InterruptHandler
  2381  0229  0008               	return
  2382  022A                     __end_of_IOCAF3_SetInterruptHandler:	
  2383                           
  2384                           	psect	text10
  2385  021A                     __ptext10:	
  2386 ;; *************** function _IOCAF2_SetInterruptHandler *****************
  2387 ;; Defined at:
  2388 ;;		line 145 in file "mcc_generated_files/pin_manager.c"
  2389 ;; Parameters:    Size  Location     Type
  2390 ;;  InterruptHan    2    1[COMMON] PTR FTN()void 
  2391 ;;		 -> IOCAF2_DefaultInterruptHandler(1), 
  2392 ;; Auto vars:     Size  Location     Type
  2393 ;;		None
  2394 ;; Return value:  Size  Location     Type
  2395 ;;                  1    wreg      void 
  2396 ;; Registers used:
  2397 ;;		wreg
  2398 ;; Tracked objects:
  2399 ;;		On entry : B1F/7
  2400 ;;		On exit  : B1F/0
  2401 ;;		Unchanged: B00/0
  2402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2403 ;;      Params:         2       0       0       0
  2404 ;;      Locals:         0       0       0       0
  2405 ;;      Temps:          0       0       0       0
  2406 ;;      Totals:         2       0       0       0
  2407 ;;Total ram usage:        2 bytes
  2408 ;; Hardware stack levels used:    1
  2409 ;; Hardware stack levels required when called:    4
  2410 ;; This function calls:
  2411 ;;		Nothing
  2412 ;; This function is called by:
  2413 ;;		_PIN_MANAGER_Initialize
  2414 ;; This function uses a non-reentrant model
  2415 ;;
  2416                           
  2417                           
  2418                           ;psect for function _IOCAF2_SetInterruptHandler
  2419  021A                     _IOCAF2_SetInterruptHandler:	
  2420                           
  2421                           ;pin_manager.c: 146: IOCAF2_InterruptHandler = InterruptHandler;
  2422                           
  2423                           ;incstack = 0
  2424                           ; Regs used in _IOCAF2_SetInterruptHandler: [wreg]
  2425  021A  0877               	movf	IOCAF2_SetInterruptHandler@InterruptHandler+1,w
  2426  021B  0020               	movlb	0	; select bank0
  2427  021C  00A5               	movwf	_IOCAF2_InterruptHandler+1
  2428  021D  0876               	movf	IOCAF2_SetInterruptHandler@InterruptHandler,w
  2429  021E  00A4               	movwf	_IOCAF2_InterruptHandler
  2430  021F  0008               	return
  2431  0220                     __end_of_IOCAF2_SetInterruptHandler:	
  2432                           
  2433                           	psect	text11
  2434  0206                     __ptext11:	
  2435 ;; *************** function _OSCILLATOR_Initialize *****************
  2436 ;; Defined at:
  2437 ;;		line 77 in file "mcc_generated_files/mcc.c"
  2438 ;; Parameters:    Size  Location     Type
  2439 ;;		None
  2440 ;; Auto vars:     Size  Location     Type
  2441 ;;		None
  2442 ;; Return value:  Size  Location     Type
  2443 ;;                  1    wreg      void 
  2444 ;; Registers used:
  2445 ;;		wreg, status,2
  2446 ;; Tracked objects:
  2447 ;;		On entry : B1F/0
  2448 ;;		On exit  : B1F/2
  2449 ;;		Unchanged: B00/0
  2450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2451 ;;      Params:         0       0       0       0
  2452 ;;      Locals:         0       0       0       0
  2453 ;;      Temps:          0       0       0       0
  2454 ;;      Totals:         0       0       0       0
  2455 ;;Total ram usage:        0 bytes
  2456 ;; Hardware stack levels used:    1
  2457 ;; Hardware stack levels required when called:    4
  2458 ;; This function calls:
  2459 ;;		Nothing
  2460 ;; This function is called by:
  2461 ;;		_SYSTEM_Initialize
  2462 ;; This function uses a non-reentrant model
  2463 ;;
  2464                           
  2465                           
  2466                           ;psect for function _OSCILLATOR_Initialize
  2467  0206                     _OSCILLATOR_Initialize:	
  2468                           
  2469                           ;mcc.c: 80: OSCCON = 0x78;
  2470                           
  2471                           ;incstack = 0
  2472                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2473  0206  3078               	movlw	120
  2474  0207  0021               	movlb	1	; select bank1
  2475  0208  0099               	movwf	25	;volatile
  2476                           
  2477                           ;mcc.c: 82: OSCTUNE = 0x00;
  2478  0209  0198               	clrf	24	;volatile
  2479                           
  2480                           ;mcc.c: 84: BORCON = 0x00;
  2481  020A  0022               	movlb	2	; select bank2
  2482  020B  0196               	clrf	22	;volatile
  2483  020C  0008               	return
  2484  020D                     __end_of_OSCILLATOR_Initialize:	
  2485                           
  2486                           	psect	intentry
  2487  0004                     __pintentry:	
  2488 ;; *************** function _INTERRUPT_InterruptManager *****************
  2489 ;; Defined at:
  2490 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  2491 ;; Parameters:    Size  Location     Type
  2492 ;;		None
  2493 ;; Auto vars:     Size  Location     Type
  2494 ;;		None
  2495 ;; Return value:  Size  Location     Type
  2496 ;;                  1    wreg      void 
  2497 ;; Registers used:
  2498 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2499 ;; Tracked objects:
  2500 ;;		On entry : 0/0
  2501 ;;		On exit  : 0/0
  2502 ;;		Unchanged: 0/0
  2503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2504 ;;      Params:         0       0       0       0
  2505 ;;      Locals:         0       0       0       0
  2506 ;;      Temps:          0       0       0       0
  2507 ;;      Totals:         0       0       0       0
  2508 ;;Total ram usage:        0 bytes
  2509 ;; Hardware stack levels used:    1
  2510 ;; Hardware stack levels required when called:    3
  2511 ;; This function calls:
  2512 ;;		_PIN_MANAGER_IOC
  2513 ;;		_TMR0_ISR
  2514 ;; This function is called by:
  2515 ;;		Interrupt level 1
  2516 ;; This function uses a non-reentrant model
  2517 ;;
  2518                           
  2519  0004                     _INTERRUPT_InterruptManager:	
  2520                           
  2521                           ;incstack = 0
  2522  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  2523                           
  2524                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2525  0005  3180               	pagesel	$
  2526                           
  2527                           ;interrupt_manager.c: 54: if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
  2528  0006  1A8B               	btfsc	11,5	;volatile
  2529  0007  1D0B               	btfss	11,2	;volatile
  2530  0008  280B               	goto	i1l102
  2531                           
  2532                           ;interrupt_manager.c: 55: {
  2533                           ;interrupt_manager.c: 56: TMR0_ISR();
  2534  0009  222A               	fcall	_TMR0_ISR
  2535                           
  2536                           ;interrupt_manager.c: 57: }
  2537  000A  280F               	goto	i1l106
  2538  000B                     i1l102:	
  2539                           
  2540                           ;interrupt_manager.c: 58: else if(INTCONbits.IOCIE == 1 && INTCONbits.IOCIF == 1)
  2541  000B  198B               	btfsc	11,3	;volatile
  2542  000C  1C0B               	btfss	11,0	;volatile
  2543  000D  280F               	goto	i1l106
  2544                           
  2545                           ;interrupt_manager.c: 59: {
  2546                           ;interrupt_manager.c: 60: PIN_MANAGER_IOC();
  2547  000E  220D               	fcall	_PIN_MANAGER_IOC
  2548  000F                     i1l106:	
  2549                           ;interrupt_manager.c: 61: }
  2550                           
  2551  000F  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2552  0010  0009               	retfie
  2553  0011                     __end_of_INTERRUPT_InterruptManager:	
  2554                           
  2555                           	psect	text13
  2556  022A                     __ptext13:	
  2557 ;; *************** function _TMR0_ISR *****************
  2558 ;; Defined at:
  2559 ;;		line 104 in file "mcc_generated_files/tmr0.c"
  2560 ;; Parameters:    Size  Location     Type
  2561 ;;		None
  2562 ;; Auto vars:     Size  Location     Type
  2563 ;;		None
  2564 ;; Return value:  Size  Location     Type
  2565 ;;                  1    wreg      void 
  2566 ;; Registers used:
  2567 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2568 ;; Tracked objects:
  2569 ;;		On entry : 0/0
  2570 ;;		On exit  : 0/0
  2571 ;;		Unchanged: 0/0
  2572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2573 ;;      Params:         0       0       0       0
  2574 ;;      Locals:         0       0       0       0
  2575 ;;      Temps:          0       0       0       0
  2576 ;;      Totals:         0       0       0       0
  2577 ;;Total ram usage:        0 bytes
  2578 ;; Hardware stack levels used:    1
  2579 ;; Hardware stack levels required when called:    2
  2580 ;; This function calls:
  2581 ;;		_TMR0_CallBack
  2582 ;; This function is called by:
  2583 ;;		_INTERRUPT_InterruptManager
  2584 ;; This function uses a non-reentrant model
  2585 ;;
  2586                           
  2587                           
  2588                           ;psect for function _TMR0_ISR
  2589  022A                     _TMR0_ISR:	
  2590                           
  2591                           ;tmr0.c: 108: INTCONbits.TMR0IF = 0;
  2592                           
  2593                           ;incstack = 0
  2594                           ; Regs used in _TMR0_ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2595  022A  110B               	bcf	11,2	;volatile
  2596                           
  2597                           ;tmr0.c: 110: TMR0 = timer0ReloadVal;
  2598  022B  0020               	movlb	0	; select bank0
  2599  022C  0826               	movf	_timer0ReloadVal,w	;volatile
  2600  022D  0095               	movwf	21	;volatile
  2601                           
  2602                           ;tmr0.c: 114: TMR0_CallBack();
  2603  022E  29FC               	ljmp	i1l1176
  2604  022F                     __end_of_TMR0_ISR:	
  2605                           
  2606                           	psect	text14
  2607  01FC                     __ptext14:	
  2608 ;; *************** function _TMR0_CallBack *****************
  2609 ;; Defined at:
  2610 ;;		line 119 in file "mcc_generated_files/tmr0.c"
  2611 ;; Parameters:    Size  Location     Type
  2612 ;;		None
  2613 ;; Auto vars:     Size  Location     Type
  2614 ;;		None
  2615 ;; Return value:  Size  Location     Type
  2616 ;;                  1    wreg      void 
  2617 ;; Registers used:
  2618 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2619 ;; Tracked objects:
  2620 ;;		On entry : 1F/0
  2621 ;;		On exit  : 0/0
  2622 ;;		Unchanged: 0/0
  2623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2624 ;;      Params:         0       0       0       0
  2625 ;;      Locals:         0       0       0       0
  2626 ;;      Temps:          0       0       0       0
  2627 ;;      Totals:         0       0       0       0
  2628 ;;Total ram usage:        0 bytes
  2629 ;; Hardware stack levels used:    1
  2630 ;; Hardware stack levels required when called:    1
  2631 ;; This function calls:
  2632 ;;		Absolute function
  2633 ;;		_CharlieplexLEDs
  2634 ;; This function is called by:
  2635 ;;		_TMR0_ISR
  2636 ;; This function uses a non-reentrant model
  2637 ;;
  2638                           
  2639                           
  2640                           ;psect for function _TMR0_CallBack
  2641  01FC                     _TMR0_CallBack:	
  2642  01FC                     i1l1176:	
  2643                           ;incstack = 0
  2644                           ; Regs used in _TMR0_CallBack: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2645                           
  2646                           
  2647                           ;tmr0.c: 123: if(TMR0_InterruptHandler)
  2648  01FC  0820               	movf	_TMR0_InterruptHandler,w
  2649  01FD  0421               	iorwf	_TMR0_InterruptHandler+1,w
  2650  01FE  1903               	btfsc	3,2
  2651  01FF  0008               	return
  2652                           
  2653                           ;tmr0.c: 124: {
  2654                           ;tmr0.c: 125: TMR0_InterruptHandler();
  2655  0200  0821               	movf	_TMR0_InterruptHandler+1,w
  2656  0201  008A               	movwf	10
  2657  0202  0820               	movf	_TMR0_InterruptHandler,w
  2658  0203  000A               	callw
  2659  0204  3181               	pagesel	$
  2660  0205  0008               	return
  2661  0206                     __end_of_TMR0_CallBack:	
  2662                           
  2663                           	psect	text15
  2664  014B                     __ptext15:	
  2665 ;; *************** function _CharlieplexLEDs *****************
  2666 ;; Defined at:
  2667 ;;		line 129 in file "main.c"
  2668 ;; Parameters:    Size  Location     Type
  2669 ;;		None
  2670 ;; Auto vars:     Size  Location     Type
  2671 ;;  PortTemp        1    0[COMMON] unsigned char 
  2672 ;; Return value:  Size  Location     Type
  2673 ;;                  1    wreg      void 
  2674 ;; Registers used:
  2675 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2676 ;; Tracked objects:
  2677 ;;		On entry : 1F/0
  2678 ;;		On exit  : 1F/0
  2679 ;;		Unchanged: 0/0
  2680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2681 ;;      Params:         0       0       0       0
  2682 ;;      Locals:         1       0       0       0
  2683 ;;      Temps:          0       0       0       0
  2684 ;;      Totals:         1       0       0       0
  2685 ;;Total ram usage:        1 bytes
  2686 ;; Hardware stack levels used:    1
  2687 ;; This function calls:
  2688 ;;		Nothing
  2689 ;; This function is called by:
  2690 ;;		_main
  2691 ;;		_TMR0_CallBack
  2692 ;; This function uses a non-reentrant model
  2693 ;;
  2694                           
  2695                           
  2696                           ;psect for function _CharlieplexLEDs
  2697  014B                     _CharlieplexLEDs:	
  2698                           
  2699                           ;main.c: 131: uint8_t PortTemp = 0;
  2700                           
  2701                           ;incstack = 0
  2702                           ; Regs used in _CharlieplexLEDs: [wreg-fsr0h+status,2+status,0]
  2703  014B  01F5               	clrf	CharlieplexLEDs@PortTemp
  2704                           
  2705                           ;main.c: 133: if (LeftTime)
  2706  014C  0872               	movf	_LeftTime,w	;volatile
  2707  014D  0473               	iorwf	_LeftTime+1,w	;volatile
  2708  014E  1903               	btfsc	3,2
  2709  014F  2954               	goto	i1l1060
  2710                           
  2711                           ;main.c: 134: {
  2712                           ;main.c: 135: LeftTime--;
  2713  0150  3001               	movlw	1
  2714  0151  02F2               	subwf	_LeftTime,f	;volatile
  2715  0152  3000               	movlw	0
  2716  0153  3BF3               	subwfb	_LeftTime+1,f	;volatile
  2717  0154                     i1l1060:	
  2718                           
  2719                           ;main.c: 136: }
  2720                           ;main.c: 137: if (RightTime)
  2721  0154  0870               	movf	_RightTime,w	;volatile
  2722  0155  0471               	iorwf	_RightTime+1,w	;volatile
  2723  0156  1903               	btfsc	3,2
  2724  0157  295C               	goto	i1l1064
  2725                           
  2726                           ;main.c: 138: {
  2727                           ;main.c: 139: RightTime--;
  2728  0158  3001               	movlw	1
  2729  0159  02F0               	subwf	_RightTime,f	;volatile
  2730  015A  3000               	movlw	0
  2731  015B  3BF1               	subwfb	_RightTime+1,f	;volatile
  2732  015C                     i1l1064:	
  2733                           
  2734                           ;main.c: 140: }
  2735                           ;main.c: 142: if (LEDOns)
  2736  015C  0874               	movf	_LEDOns,w	;volatile
  2737  015D  1D03               	btfss	3,2
  2738  015E  298C               	goto	i1l1108
  2739  015F  29A3               	goto	i1l1118
  2740  0160                     i1l1068:	
  2741                           
  2742                           ;main.c: 147: TRISA = 0xDC;
  2743  0160  30DC               	movlw	220
  2744  0161  0021               	movlb	1	; select bank1
  2745  0162  008C               	movwf	12	;volatile
  2746                           
  2747                           ;main.c: 148: if (LEDOns & 0x08)
  2748  0163  1DF4               	btfss	_LEDOns,3	;volatile
  2749  0164  2967               	goto	i1l1074
  2750                           
  2751                           ;main.c: 149: {
  2752                           ;main.c: 150: PortTemp = 0x02;
  2753  0165  3002               	movlw	2
  2754  0166  00F5               	movwf	CharlieplexLEDs@PortTemp
  2755  0167                     i1l1074:	
  2756                           
  2757                           ;main.c: 151: }
  2758                           ;main.c: 152: if (LEDOns & 0x80)
  2759  0167  1FF4               	btfss	_LEDOns,7	;volatile
  2760  0168  299A               	goto	i1l1110
  2761                           
  2762                           ;main.c: 153: {
  2763                           ;main.c: 154: PortTemp |= 0x20;
  2764  0169  16F5               	bsf	CharlieplexLEDs@PortTemp,5
  2765  016A  299A               	goto	i1l1110
  2766  016B                     i1l1078:	
  2767                           
  2768                           ;main.c: 159: TRISA = 0xEC;
  2769  016B  30EC               	movlw	236
  2770  016C  0021               	movlb	1	; select bank1
  2771  016D  008C               	movwf	12	;volatile
  2772                           
  2773                           ;main.c: 160: if (LEDOns & 0x04)
  2774  016E  1D74               	btfss	_LEDOns,2	;volatile
  2775  016F  2972               	goto	i1l188
  2776                           
  2777                           ;main.c: 161: {
  2778                           ;main.c: 162: PortTemp = 0x01;
  2779  0170  01F5               	clrf	CharlieplexLEDs@PortTemp
  2780  0171  0AF5               	incf	CharlieplexLEDs@PortTemp,f
  2781  0172                     i1l188:	
  2782                           
  2783                           ;main.c: 163: }
  2784                           ;main.c: 164: if (LEDOns & 0x20)
  2785  0172  1EF4               	btfss	_LEDOns,5	;volatile
  2786  0173  299A               	goto	i1l1110
  2787                           
  2788                           ;main.c: 165: {
  2789                           ;main.c: 166: PortTemp |= 0x10;
  2790  0174  1675               	bsf	CharlieplexLEDs@PortTemp,4
  2791  0175  299A               	goto	i1l1110
  2792  0176                     i1l1086:	
  2793                           
  2794                           ;main.c: 171: TRISA = 0xCD;
  2795  0176  30CD               	movlw	205
  2796  0177  0021               	movlb	1	; select bank1
  2797  0178  008C               	movwf	12	;volatile
  2798                           
  2799                           ;main.c: 172: if (LEDOns & 0x02)
  2800  0179  1CF4               	btfss	_LEDOns,1	;volatile
  2801  017A  297D               	goto	i1l1092
  2802                           
  2803                           ;main.c: 173: {
  2804                           ;main.c: 174: PortTemp = 0x20;
  2805  017B  3020               	movlw	32
  2806  017C  00F5               	movwf	CharlieplexLEDs@PortTemp
  2807  017D                     i1l1092:	
  2808                           
  2809                           ;main.c: 175: }
  2810                           ;main.c: 176: if (LEDOns & 0x10)
  2811  017D  1E74               	btfss	_LEDOns,4	;volatile
  2812  017E  299A               	goto	i1l1110
  2813                           
  2814                           ;main.c: 177: {
  2815                           ;main.c: 178: PortTemp |= 0x02;
  2816  017F  14F5               	bsf	CharlieplexLEDs@PortTemp,1
  2817  0180  299A               	goto	i1l1110
  2818  0181                     i1l1096:	
  2819                           
  2820                           ;main.c: 183: TRISA = 0xCE;
  2821  0181  30CE               	movlw	206
  2822  0182  0021               	movlb	1	; select bank1
  2823  0183  008C               	movwf	12	;volatile
  2824                           
  2825                           ;main.c: 184: if (LEDOns & 0x01)
  2826  0184  1C74               	btfss	_LEDOns,0	;volatile
  2827  0185  2988               	goto	i1l1102
  2828                           
  2829                           ;main.c: 185: {
  2830                           ;main.c: 186: PortTemp = 0x10;
  2831  0186  3010               	movlw	16
  2832  0187  00F5               	movwf	CharlieplexLEDs@PortTemp
  2833  0188                     i1l1102:	
  2834                           
  2835                           ;main.c: 187: }
  2836                           ;main.c: 188: if (LEDOns & 0x40)
  2837  0188  1F74               	btfss	_LEDOns,6	;volatile
  2838  0189  299A               	goto	i1l1110
  2839                           
  2840                           ;main.c: 189: {
  2841                           ;main.c: 190: PortTemp |= 0x01;
  2842  018A  1475               	bsf	CharlieplexLEDs@PortTemp,0
  2843  018B  299A               	goto	i1l1110
  2844  018C                     i1l1108:	
  2845  018C  082B               	movf	_LEDState,w
  2846                           
  2847                           ; Switch size 1, requested type "space"
  2848                           ; Number of cases is 4, Range of values is 0 to 3
  2849                           ; switch strategies available:
  2850                           ; Name         Instructions Cycles
  2851                           ; simple_byte           13     7 (average)
  2852                           ; direct_byte           14     6 (fixed)
  2853                           ; jumptable            260     6 (fixed)
  2854                           ;	Chosen strategy is simple_byte
  2855  018D  3A00               	xorlw	0	; case 0
  2856  018E  1903               	skipnz
  2857  018F  2960               	goto	i1l1068
  2858  0190  3A01               	xorlw	1	; case 1
  2859  0191  1903               	skipnz
  2860  0192  296B               	goto	i1l1078
  2861  0193  3A03               	xorlw	3	; case 2
  2862  0194  1903               	skipnz
  2863  0195  2976               	goto	i1l1086
  2864  0196  3A01               	xorlw	1	; case 3
  2865  0197  1903               	skipnz
  2866  0198  2981               	goto	i1l1096
  2867  0199  299A               	goto	i1l1110
  2868  019A                     i1l1110:	
  2869                           
  2870                           ;main.c: 197: PORTA = PortTemp;
  2871  019A  0875               	movf	CharlieplexLEDs@PortTemp,w
  2872  019B  0020               	movlb	0	; select bank0
  2873  019C  008C               	movwf	12	;volatile
  2874  019D  3004               	movlw	4
  2875                           
  2876                           ;main.c: 199: LEDState++;
  2877  019E  0AAB               	incf	_LEDState,f
  2878                           
  2879                           ;main.c: 200: if (LEDState > LED_STATE_3)
  2880  019F  022B               	subwf	_LEDState,w
  2881  01A0  1803               	btfsc	3,0
  2882                           
  2883                           ;main.c: 201: {
  2884                           ;main.c: 202: LEDState = LED_STATE_0;
  2885  01A1  01AB               	clrf	_LEDState
  2886  01A2  0008               	return
  2887  01A3                     i1l1118:	
  2888                           
  2889                           ;main.c: 205: else
  2890                           ;main.c: 206: {
  2891                           ;main.c: 208: TRISA = 0xCC;
  2892  01A3  30CC               	movlw	204
  2893  01A4  0021               	movlb	1	; select bank1
  2894  01A5  008C               	movwf	12	;volatile
  2895                           
  2896                           ;main.c: 209: PORTA = 0x00;
  2897  01A6  0020               	movlb	0	; select bank0
  2898  01A7  018C               	clrf	12	;volatile
  2899  01A8  0008               	return
  2900  01A9                     __end_of_CharlieplexLEDs:	
  2901                           
  2902                           	psect	text16
  2903  020D                     __ptext16:	
  2904 ;; *************** function _PIN_MANAGER_IOC *****************
  2905 ;; Defined at:
  2906 ;;		line 110 in file "mcc_generated_files/pin_manager.c"
  2907 ;; Parameters:    Size  Location     Type
  2908 ;;		None
  2909 ;; Auto vars:     Size  Location     Type
  2910 ;;		None
  2911 ;; Return value:  Size  Location     Type
  2912 ;;                  1    wreg      void 
  2913 ;; Registers used:
  2914 ;;		wreg, status,2, status,0, pclath, cstack
  2915 ;; Tracked objects:
  2916 ;;		On entry : 0/0
  2917 ;;		On exit  : 1F/7
  2918 ;;		Unchanged: 0/0
  2919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2920 ;;      Params:         0       0       0       0
  2921 ;;      Locals:         0       0       0       0
  2922 ;;      Temps:          0       0       0       0
  2923 ;;      Totals:         0       0       0       0
  2924 ;;Total ram usage:        0 bytes
  2925 ;; Hardware stack levels used:    1
  2926 ;; Hardware stack levels required when called:    2
  2927 ;; This function calls:
  2928 ;;		_IOCAF2_ISR
  2929 ;;		_IOCAF3_ISR
  2930 ;; This function is called by:
  2931 ;;		_INTERRUPT_InterruptManager
  2932 ;; This function uses a non-reentrant model
  2933 ;;
  2934                           
  2935                           
  2936                           ;psect for function _PIN_MANAGER_IOC
  2937  020D                     _PIN_MANAGER_IOC:	
  2938                           
  2939                           ;pin_manager.c: 113: if(IOCAFbits.IOCAF2 == 1)
  2940                           
  2941                           ;incstack = 0
  2942                           ; Regs used in _PIN_MANAGER_IOC: [wreg+status,2+status,0+pclath+cstack]
  2943  020D  0027               	movlb	7	; select bank7
  2944  020E  1D13               	btfss	19,2	;volatile
  2945  020F  2A11               	goto	i1l1184
  2946                           
  2947                           ;pin_manager.c: 114: {
  2948                           ;pin_manager.c: 115: IOCAF2_ISR();
  2949  0210  21DA               	fcall	_IOCAF2_ISR
  2950  0211                     i1l1184:	
  2951                           
  2952                           ;pin_manager.c: 116: }
  2953                           ;pin_manager.c: 119: if(IOCAFbits.IOCAF3 == 1)
  2954  0211  1D93               	btfss	19,3	;volatile
  2955  0212  0008               	return
  2956                           
  2957                           ;pin_manager.c: 120: {
  2958                           ;pin_manager.c: 121: IOCAF3_ISR();
  2959  0213  29CD               	ljmp	i1l1160
  2960  0214                     __end_of_PIN_MANAGER_IOC:	
  2961                           
  2962                           	psect	text17
  2963  01CD                     __ptext17:	
  2964 ;; *************** function _IOCAF3_ISR *****************
  2965 ;; Defined at:
  2966 ;;		line 160 in file "mcc_generated_files/pin_manager.c"
  2967 ;; Parameters:    Size  Location     Type
  2968 ;;		None
  2969 ;; Auto vars:     Size  Location     Type
  2970 ;;		None
  2971 ;; Return value:  Size  Location     Type
  2972 ;;                  1    wreg      void 
  2973 ;; Registers used:
  2974 ;;		wreg, status,2, status,0, pclath, cstack
  2975 ;; Tracked objects:
  2976 ;;		On entry : 1F/7
  2977 ;;		On exit  : 1F/7
  2978 ;;		Unchanged: 0/0
  2979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2980 ;;      Params:         0       0       0       0
  2981 ;;      Locals:         0       0       0       0
  2982 ;;      Temps:          0       0       0       0
  2983 ;;      Totals:         0       0       0       0
  2984 ;;Total ram usage:        0 bytes
  2985 ;; Hardware stack levels used:    1
  2986 ;; Hardware stack levels required when called:    1
  2987 ;; This function calls:
  2988 ;;		Absolute function
  2989 ;;		_IOCAF3_DefaultInterruptHandler
  2990 ;; This function is called by:
  2991 ;;		_PIN_MANAGER_IOC
  2992 ;; This function uses a non-reentrant model
  2993 ;;
  2994                           
  2995                           
  2996                           ;psect for function _IOCAF3_ISR
  2997  01CD                     _IOCAF3_ISR:	
  2998  01CD                     i1l1160:	
  2999                           ;incstack = 0
  3000                           ; Regs used in _IOCAF3_ISR: [wreg+status,2+status,0+pclath+cstack]
  3001                           
  3002                           
  3003                           ;pin_manager.c: 165: if(IOCAF3_InterruptHandler)
  3004  01CD  0020               	movlb	0	; select bank0
  3005  01CE  0822               	movf	_IOCAF3_InterruptHandler,w
  3006  01CF  0423               	iorwf	_IOCAF3_InterruptHandler+1,w
  3007  01D0  1903               	btfsc	3,2
  3008  01D1  29D7               	goto	i1l1164
  3009                           
  3010                           ;pin_manager.c: 166: {
  3011                           ;pin_manager.c: 167: IOCAF3_InterruptHandler();
  3012  01D2  0823               	movf	_IOCAF3_InterruptHandler+1,w
  3013  01D3  008A               	movwf	10
  3014  01D4  0822               	movf	_IOCAF3_InterruptHandler,w
  3015  01D5  000A               	callw
  3016  01D6  3181               	pagesel	$
  3017  01D7                     i1l1164:	
  3018                           
  3019                           ;pin_manager.c: 168: }
  3020                           ;pin_manager.c: 169: IOCAFbits.IOCAF3 = 0;
  3021  01D7  0027               	movlb	7	; select bank7
  3022  01D8  1193               	bcf	19,3	;volatile
  3023  01D9  0008               	return
  3024  01DA                     __end_of_IOCAF3_ISR:	
  3025                           
  3026                           	psect	text18
  3027  0240                     __ptext18:	
  3028 ;; *************** function _IOCAF3_DefaultInterruptHandler *****************
  3029 ;; Defined at:
  3030 ;;		line 182 in file "mcc_generated_files/pin_manager.c"
  3031 ;; Parameters:    Size  Location     Type
  3032 ;;		None
  3033 ;; Auto vars:     Size  Location     Type
  3034 ;;		None
  3035 ;; Return value:  Size  Location     Type
  3036 ;;                  1    wreg      void 
  3037 ;; Registers used:
  3038 ;;		None
  3039 ;; Tracked objects:
  3040 ;;		On entry : 1F/0
  3041 ;;		On exit  : 1F/0
  3042 ;;		Unchanged: 1F/0
  3043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3044 ;;      Params:         0       0       0       0
  3045 ;;      Locals:         0       0       0       0
  3046 ;;      Temps:          0       0       0       0
  3047 ;;      Totals:         0       0       0       0
  3048 ;;Total ram usage:        0 bytes
  3049 ;; Hardware stack levels used:    1
  3050 ;; This function calls:
  3051 ;;		Nothing
  3052 ;; This function is called by:
  3053 ;;		_PIN_MANAGER_Initialize
  3054 ;;		_IOCAF3_ISR
  3055 ;; This function uses a non-reentrant model
  3056 ;;
  3057                           
  3058                           
  3059                           ;psect for function _IOCAF3_DefaultInterruptHandler
  3060  0240                     _IOCAF3_DefaultInterruptHandler:	
  3061                           
  3062                           ;incstack = 0
  3063                           ; Regs used in _IOCAF3_DefaultInterruptHandler: []
  3064  0240  0008               	return
  3065  0241                     __end_of_IOCAF3_DefaultInterruptHandler:	
  3066                           
  3067                           	psect	text19
  3068  01DA                     __ptext19:	
  3069 ;; *************** function _IOCAF2_ISR *****************
  3070 ;; Defined at:
  3071 ;;		line 130 in file "mcc_generated_files/pin_manager.c"
  3072 ;; Parameters:    Size  Location     Type
  3073 ;;		None
  3074 ;; Auto vars:     Size  Location     Type
  3075 ;;		None
  3076 ;; Return value:  Size  Location     Type
  3077 ;;                  1    wreg      void 
  3078 ;; Registers used:
  3079 ;;		wreg, status,2, status,0, pclath, cstack
  3080 ;; Tracked objects:
  3081 ;;		On entry : 1F/7
  3082 ;;		On exit  : 1F/7
  3083 ;;		Unchanged: 0/0
  3084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3085 ;;      Params:         0       0       0       0
  3086 ;;      Locals:         0       0       0       0
  3087 ;;      Temps:          0       0       0       0
  3088 ;;      Totals:         0       0       0       0
  3089 ;;Total ram usage:        0 bytes
  3090 ;; Hardware stack levels used:    1
  3091 ;; Hardware stack levels required when called:    1
  3092 ;; This function calls:
  3093 ;;		Absolute function
  3094 ;;		_IOCAF2_DefaultInterruptHandler
  3095 ;; This function is called by:
  3096 ;;		_PIN_MANAGER_IOC
  3097 ;; This function uses a non-reentrant model
  3098 ;;
  3099                           
  3100                           
  3101                           ;psect for function _IOCAF2_ISR
  3102  01DA                     _IOCAF2_ISR:	
  3103                           
  3104                           ;pin_manager.c: 135: if(IOCAF2_InterruptHandler)
  3105                           
  3106                           ;incstack = 0
  3107                           ; Regs used in _IOCAF2_ISR: [wreg+status,2+status,0+pclath+cstack]
  3108  01DA  0020               	movlb	0	; select bank0
  3109  01DB  0824               	movf	_IOCAF2_InterruptHandler,w
  3110  01DC  0425               	iorwf	_IOCAF2_InterruptHandler+1,w
  3111  01DD  1903               	btfsc	3,2
  3112  01DE  29E4               	goto	i1l1158
  3113                           
  3114                           ;pin_manager.c: 136: {
  3115                           ;pin_manager.c: 137: IOCAF2_InterruptHandler();
  3116  01DF  0825               	movf	_IOCAF2_InterruptHandler+1,w
  3117  01E0  008A               	movwf	10
  3118  01E1  0824               	movf	_IOCAF2_InterruptHandler,w
  3119  01E2  000A               	callw
  3120  01E3  3181               	pagesel	$
  3121  01E4                     i1l1158:	
  3122                           
  3123                           ;pin_manager.c: 138: }
  3124                           ;pin_manager.c: 139: IOCAFbits.IOCAF2 = 0;
  3125  01E4  0027               	movlb	7	; select bank7
  3126  01E5  1113               	bcf	19,2	;volatile
  3127  01E6  0008               	return
  3128  01E7                     __end_of_IOCAF2_ISR:	
  3129                           
  3130                           	psect	text20
  3131  0241                     __ptext20:	
  3132 ;; *************** function _IOCAF2_DefaultInterruptHandler *****************
  3133 ;; Defined at:
  3134 ;;		line 152 in file "mcc_generated_files/pin_manager.c"
  3135 ;; Parameters:    Size  Location     Type
  3136 ;;		None
  3137 ;; Auto vars:     Size  Location     Type
  3138 ;;		None
  3139 ;; Return value:  Size  Location     Type
  3140 ;;                  1    wreg      void 
  3141 ;; Registers used:
  3142 ;;		None
  3143 ;; Tracked objects:
  3144 ;;		On entry : 1F/0
  3145 ;;		On exit  : 1F/0
  3146 ;;		Unchanged: 1F/0
  3147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3148 ;;      Params:         0       0       0       0
  3149 ;;      Locals:         0       0       0       0
  3150 ;;      Temps:          0       0       0       0
  3151 ;;      Totals:         0       0       0       0
  3152 ;;Total ram usage:        0 bytes
  3153 ;; Hardware stack levels used:    1
  3154 ;; This function calls:
  3155 ;;		Nothing
  3156 ;; This function is called by:
  3157 ;;		_PIN_MANAGER_Initialize
  3158 ;;		_IOCAF2_ISR
  3159 ;; This function uses a non-reentrant model
  3160 ;;
  3161                           
  3162                           
  3163                           ;psect for function _IOCAF2_DefaultInterruptHandler
  3164  0241                     _IOCAF2_DefaultInterruptHandler:	
  3165                           
  3166                           ;incstack = 0
  3167                           ; Regs used in _IOCAF2_DefaultInterruptHandler: []
  3168  0241  0008               	return
  3169  0242                     __end_of_IOCAF2_DefaultInterruptHandler:	
  3170  007E                     btemp	set	126	;btemp
  3171  007E                     int$flags	set	126
  3172  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         6
    Persistent  7
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80      4      12
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CharlieplexLEDs(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CharlieplexLEDs(), Absolute function(), 

    IOCAF3_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCAF3_DefaultInterruptHandler(), 

    IOCAF3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), IOCAF3_DefaultInterruptHandler(), 

    IOCAF2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCAF2_DefaultInterruptHandler(), 

    IOCAF2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), IOCAF2_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _main->_TMR0_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCAF2_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCAF3_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR0_CallBack->_CharlieplexLEDs

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0     596
                                              3 COMMON     2     2      0
                                              0 BANK0      4     4      0
                  _SYSTEM_Initialize
                      _SetAllLEDsOff
                          _SetLEDOff
                           _SetLEDOn
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2      96
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SetLEDOn                                             1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SetLEDOff                                            1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SetAllLEDsOff                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     192
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     192
         _IOCAF2_SetInterruptHandler
         _IOCAF3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCAF3_SetInterruptHandler                           2     0      2      96
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _IOCAF2_SetInterruptHandler                           2     0      2      96
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0      31
                    _PIN_MANAGER_IOC
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0      31
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (6) _TMR0_CallBack                                        0     0      0      31
                   Absolute function *
                    _CharlieplexLEDs *
 ---------------------------------------------------------------------------------
 (7) _CharlieplexLEDs                                      1     1      0      31
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _PIN_MANAGER_IOC                                      0     0      0       0
                         _IOCAF2_ISR
                         _IOCAF3_ISR
 ---------------------------------------------------------------------------------
 (6) _IOCAF3_ISR                                           0     0      0       0
                   Absolute function *
     _IOCAF3_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _IOCAF3_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _IOCAF2_ISR                                           0     0      0       0
                   Absolute function *
     _IOCAF2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _IOCAF2_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCAF2_SetInterruptHandler
       _IOCAF3_SetInterruptHandler
     _TMR0_Initialize
     _WDT_Initialize
   _SetAllLEDsOff
   _SetLEDOff
   _SetLEDOn
   _TMR0_SetInterruptHandler

 _INTERRUPT_InterruptManager (ROOT)
   _PIN_MANAGER_IOC
     _IOCAF2_ISR
       Absolute function(Fake) *
       _IOCAF2_DefaultInterruptHandler *
     _IOCAF3_ISR
       Absolute function(Fake) *
       _IOCAF3_DefaultInterruptHandler *
   _TMR0_ISR
     _TMR0_CallBack
       Absolute function(Fake) *
       _CharlieplexLEDs *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      5       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      16       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      4       C       6       15.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      16      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat May 05 07:05:19 2018

                                         pc 0002                                 __CFG_CP$OFF 0000  
                           _timer0ReloadVal 0026                    main@LastRightButtonState 0028  
                                       l230 0113                                         l242 011A  
                                       l245 0125                                         l248 0146  
                              __CFG_BORV$LO 0000                                         wreg 0009  
        __end_of_IOCAF2_SetInterruptHandler 0220                  _IOCAF2_SetInterruptHandler 021A  
                                      S1780 01F2                                        S1782 0214  
                              __CFG_LVP$OFF 0000                                        l1506 01E7  
                                      l1610 00C0                                        l1602 00A9  
                                      l1612 00CA                                        l1540 0029  
                             main@LeftState 0029                                        l1614 00D2  
                                      l1542 0039                                        l1642 00FA  
                                      l1634 00ED                                        l1626 00E2  
                                      l1618 00D9                                        l1570 0061  
                                      l1562 0054                                        l1554 0049  
                                      l1546 0040                                        l1650 0109  
                                      l1538 0027                                        l1656 011D  
                                      l1658 011E                                        l1594 0094  
                                      l1586 0081                                        l1578 0070  
                                      l1666 0127                                        u1037 0135  
                                      _LATA 010C                                        _TMR0 0015  
                                      _WPUA 020C                                __CFG_WRT$OFF 0000  
                                      _main 001C                                        fsr0l 0004  
                                      btemp 007E                                        start 0011  
                   __end_of_TMR0_Initialize 01F2              __size_of_OSCILLATOR_Initialize 0007  
                       __size_of_IOCAF2_ISR 000D                         __size_of_IOCAF3_ISR 000D  
             __end_of_OSCILLATOR_Initialize 020D                                       ?_main 0075  
                             __CFG_WDTE$OFF 0000                                       i1l102 000B  
                                     i1l106 000F                                       i1l188 0172  
                                     _PORTA 000C                                       _TRISA 008C  
         __size_of_TMR0_SetInterruptHandler 0005                   ?_TMR0_SetInterruptHandler 0076  
                          __end_of_TMR0_ISR 022F                     __end_of_PIN_MANAGER_IOC 0214  
                            _WDT_Initialize 0237                              __CFG_BOREN$OFF 0000  
                                     pclath 000A                                       status 0003  
                                     wtemp0 007E                                 SetLEDOn@LED 0076  
                            __CFG_MCLRE$OFF 0000                             __initialization 0012  
                              __end_of_main 014B                            __end_of_SetLEDOn 023E  
               ?_INTERRUPT_InterruptManager 0075                                      ??_main 0078  
                            main@RightState 002A                              __CFG_PLLEN$OFF 0000  
                    __end_of_WDT_Initialize 023B                      __size_of_SetAllLEDsOff 0002  
              ??_IOCAF3_SetInterruptHandler 0078                                      _APFCON 011D  
                                    _ANSELA 018C                                      _BORCON 0116  
                                    i1l1102 0188                                      i1l1110 019A  
                                    i1l1108 018C                                      i1l1060 0154  
                                    i1l1118 01A3                                      i1l1160 01CD  
                                    i1l1064 015C                                      i1l1074 0167  
                                    i1l1164 01D7                                      i1l1092 017D  
                                    i1l1068 0160                                      i1l1158 01E4  
                                    i1l1086 0176                                      i1l1078 016B  
                                    i1l1184 0211                                      i1l1096 0181  
                                    i1l1176 01FC                                      _ODCONA 028C  
                                    _LEDOns 0074                                      _OSCCON 0099  
                                    _WDTCON 0097                          __size_of_SetLEDOff 0004  
                            __CFG_PWRTE$OFF 0000                              __CFG_STVREN$ON 0000  
                          ?_TMR0_Initialize 0075         __size_of_IOCAF3_SetInterruptHandler 0005  
                           ?_WDT_Initialize 0075                       __end_of_TMR0_CallBack 0206  
  TMR0_SetInterruptHandler@InterruptHandler 0076  IOCAF3_SetInterruptHandler@InterruptHandler 0076  
IOCAF2_SetInterruptHandler@InterruptHandler 0076                            ?_PIN_MANAGER_IOC 0075  
                              ??_IOCAF2_ISR 0075                     CharlieplexLEDs@PortTemp 0075  
                              ??_IOCAF3_ISR 0075                           _SYSTEM_Initialize 0233  
                   __end_of__initialization 0019                     main@LastLeftButtonState 0027  
                        ?_SYSTEM_Initialize 0075                                SetLEDOff@LED 0076  
                             _SetAllLEDsOff 023E                              __pcstackCOMMON 0075  
                       ??_SYSTEM_Initialize 0078                                   ?_TMR0_ISR 0075  
                        __end_of_IOCAF2_ISR 01E7                          __end_of_IOCAF3_ISR 01DA  
                         __end_of_SetLEDOff 0233                              _OPTION_REGbits 0095  
               ?_IOCAF2_SetInterruptHandler 0076            ??_IOCAF2_DefaultInterruptHandler 0075  
           ?_IOCAF2_DefaultInterruptHandler 0075                   __end_of_SYSTEM_Initialize 0237  
                                __pbssBANK0 002B                                   ?_SetLEDOn 0075  
                  __size_of_CharlieplexLEDs 005E                              ?_SetAllLEDsOff 0075  
                                __pmaintext 001C            __end_of_TMR0_SetInterruptHandler 0225  
                                ??_TMR0_ISR 0076                                  __pintentry 0004  
        __end_of_IOCAF3_SetInterruptHandler 022A                  _IOCAF3_SetInterruptHandler 0225  
                                   _OSCTUNE 0098                                  ??_SetLEDOn 0076  
                                   __ptext1 0220                                     __ptext2 023B  
                                   __ptext3 022F                                     __ptext4 023E  
                                   __ptext5 0233                                     __ptext6 0237  
                                   __ptext7 01E7                                     __ptext8 01A9  
                                   __ptext9 0225                       _OSCILLATOR_Initialize 0206  
                  ??_PIN_MANAGER_Initialize 0078                                   _IOCAFbits 0393  
                                 _IOCANbits 0392                                   _IOCAPbits 0391  
                __size_of_SYSTEM_Initialize 0004                        end_of_initialization 0019  
                           ??_SetAllLEDsOff 0076                           ??_CharlieplexLEDs 0075  
                          ??_WDT_Initialize 0076                    _TMR0_SetInterruptHandler 0220  
                                 _PORTAbits 000C                            __CFG_FOSC$INTOSC 0000  
                         __size_of_TMR0_ISR 0005                      ?_OSCILLATOR_Initialize 0075  
                       start_initialization 0012                    __size_of_TMR0_Initialize 000B  
           __size_of_PIN_MANAGER_Initialize 0024                                   _SetLEDOff 022F  
                                 _RightTime 0070                    __size_of_PIN_MANAGER_IOC 0007  
                         __size_of_SetLEDOn 0003      __end_of_IOCAF2_DefaultInterruptHandler 0242  
   __size_of_IOCAF2_DefaultInterruptHandler 0001              _IOCAF2_DefaultInterruptHandler 0241  
                          __CFG_LPBOREN$OFF 0000                      __size_of_TMR0_CallBack 000A  
                               __pbssCOMMON 0070                                   ___latbits 0000  
                             __pcstackBANK0 0027                 ?_IOCAF3_SetInterruptHandler 0076  
                                ?_SetLEDOff 0075            ??_IOCAF3_DefaultInterruptHandler 0075  
           ?_IOCAF3_DefaultInterruptHandler 0075                       _TMR0_InterruptHandler 0020  
                                 __pnvBANK0 0020                      _PIN_MANAGER_Initialize 01A9  
              ??_INTERRUPT_InterruptManager 0076                                   __pswtext1 01F2  
                                 __pswtext2 0214                               _TMR0_CallBack 01FC  
                         ??_TMR0_Initialize 0076                             _CharlieplexLEDs 014B  
                                  _LEDState 002B         __size_of_INTERRUPT_InterruptManager 000D  
                ??_TMR0_SetInterruptHandler 0078                                    _TMR0_ISR 022A  
                         ??_PIN_MANAGER_IOC 0075                                 ??_SetLEDOff 0076  
                            ?_TMR0_CallBack 0075                                    _LeftTime 0072  
                                  _SetLEDOn 023B                       __end_of_SetAllLEDsOff 0240  
                   ??_OSCILLATOR_Initialize 0076                     _IOCAF2_InterruptHandler 0024  
                   __end_of_CharlieplexLEDs 01A9                ??_IOCAF2_SetInterruptHandler 0078  
                                  __ptext10 021A                                    __ptext11 0206  
                                  __ptext20 0241                                    __ptext13 022A  
                                  __ptext14 01FC                                    __ptext15 014B  
                                  __ptext16 020D                                    __ptext17 01CD  
                                  __ptext18 0240                                    __ptext19 01DA  
                                _IOCAF2_ISR 01DA                                  _IOCAF3_ISR 01CD  
                             __size_of_main 012F                                    int$flags 007E  
        __end_of_INTERRUPT_InterruptManager 0011                  _INTERRUPT_InterruptManager 0004  
       __size_of_IOCAF2_SetInterruptHandler 0006                                  _INTCONbits 000B  
                           ??_TMR0_CallBack 0076                     __size_of_WDT_Initialize 0004  
                                  intlevel1 0000                     ?_PIN_MANAGER_Initialize 0075  
                         __CFG_CLKOUTEN$OFF 0000      __end_of_IOCAF3_DefaultInterruptHandler 0241  
   __size_of_IOCAF3_DefaultInterruptHandler 0001              _IOCAF3_DefaultInterruptHandler 0240  
                                _OPTION_REG 0095                             _TMR0_Initialize 01E7  
                               _VREGCONbits 0197                            ?_CharlieplexLEDs 0075  
                               ?_IOCAF2_ISR 0075                                 ?_IOCAF3_ISR 0075  
            __end_of_PIN_MANAGER_Initialize 01CD                             _PIN_MANAGER_IOC 020D  
                   _IOCAF3_InterruptHandler 0022  
